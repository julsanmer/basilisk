<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="cpp_module_template_8cpp" kind="file" language="C++">
    <compoundname>cppModuleTemplate.cpp</compoundname>
    <includes refid="cpp_module_template_8h" local="yes">moduleTemplates/cppModuleTemplate/cppModuleTemplate.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cstring</includes>
    <includes local="yes">architecture/utilities/avsEigenSupport.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/moduleTemplates/cppModuleTemplate/cppModuleTemplate.cpp</label>
        <link refid="cpp_module_template_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>moduleTemplates/cppModuleTemplate/cppModuleTemplate.h</label>
        <link refid="cpp_module_template_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="6">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="4">
        <label>architecture/msgPayloadDefC/CModuleTemplateMsgPayload.h</label>
      </node>
      <node id="9">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="5">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="10">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="8">
        <label>cstring</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moduleTemplates/cppModuleTemplate/cppModuleTemplate.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenSupport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="class_cpp_module_template_1a952828472658b7e5f2451325562432b3" kindref="member">CppModuleTemplate::CppModuleTemplate</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="class_cpp_module_template_1a2b7c06754f7ce9add1df24beea83ea73" kindref="member">CppModuleTemplate::~CppModuleTemplate</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cpp_module_template_1a9a9c115507d53abb49a907fc96722dbb" kindref="member">CppModuleTemplate::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cpp_module_template_1a919369357aca76499c9d21a0fac43d3a" kindref="member">dummy</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cpp_module_template_1abd2c68e4f9c36d1fae0cba5084e90311" kindref="member">bskLogger</ref>.bskLog(BSK_INFORMATION,<sp/></highlight><highlight class="stringliteral">&quot;Variable<sp/>dummy<sp/>set<sp/>to<sp/>%f<sp/>in<sp/>reset.&quot;</highlight><highlight class="normal">,this-&gt;<ref refid="class_cpp_module_template_1a919369357aca76499c9d21a0fac43d3a" kindref="member">dummy</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cpp_module_template_1a95b9bbfd9f946d605f995543af2200e3" kindref="member">CppModuleTemplate::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Lr[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>CModuleTemplateMsgPayload<sp/>outMsgBuffer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>CModuleTemplateMsgPayload<sp/>inMsgBuffer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>inputVector[3];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>zero<sp/>the<sp/>output<sp/>buffer<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>outMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_cpp_module_template_1a371bf8178edde6aca5ed6521b4ba438b" kindref="member">dataOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>v3SetZero(inputVector);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_cpp_module_template_1a8b646d0981d3c9a7ada54b259215d90d" kindref="member">dataInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_cpp_module_template_1a8b646d0981d3c9a7ada54b259215d90d" kindref="member">dataInMsg</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(inMsgBuffer.dataVector,<sp/>inputVector);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(inputVector,<sp/>Lr);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cpp_module_template_1a919369357aca76499c9d21a0fac43d3a" kindref="member">dummy</ref><sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>Lr[0]<sp/>+=<sp/>this-&gt;<ref refid="class_cpp_module_template_1a919369357aca76499c9d21a0fac43d3a" kindref="member">dummy</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(Lr,<sp/>outMsgBuffer.dataVector);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cpp_module_template_1a371bf8178edde6aca5ed6521b4ba438b" kindref="member">dataOutMsg</ref>.write(&amp;outMsgBuffer,<sp/>this-&gt;moduleID,<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>logging<sp/>statement<sp/>is<sp/>not<sp/>typically<sp/>required.<sp/><sp/>It<sp/>is<sp/>done<sp/>here<sp/>to<sp/>see<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>quick-start<sp/>guide<sp/>which<sp/>module<sp/>is<sp/>being<sp/>executed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cpp_module_template_1abd2c68e4f9c36d1fae0cba5084e90311" kindref="member">bskLogger</ref>.bskLog(BSK_INFORMATION,<sp/></highlight><highlight class="stringliteral">&quot;C++<sp/>Module<sp/>ID<sp/>%lld<sp/>ran<sp/>Update<sp/>at<sp/>%fs&quot;</highlight><highlight class="normal">,<sp/>this-&gt;moduleID,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>CurrentSimNanos/(1e9));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/moduleTemplates/cppModuleTemplate/cppModuleTemplate.cpp"/>
  </compounddef>
</doxygen>
