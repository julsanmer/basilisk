<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_b_spline_8cpp" kind="file" language="C++">
    <compoundname>BSpline.cpp</compoundname>
    <includes refid="_b_spline_8h" local="yes">BSpline.h</includes>
    <includes refid="avs_eigen_support_8h" local="no">architecture/utilities/avsEigenSupport.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cstring</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/architecture/utilities/BSpline.cpp</label>
        <link refid="_b_spline_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>BSpline.h</label>
        <link refid="_b_spline_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>avsEigenMRP.h</label>
        <link refid="avs_eigen_m_r_p_8h_source"/>
      </node>
      <node id="4">
        <label>architecture/utilities/avsEigenSupport.h</label>
        <link refid="avs_eigen_support_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>architecture/utilities/macroDefinitions.h</label>
        <link refid="macro_definitions_8h_source"/>
      </node>
      <node id="3">
        <label>Eigen/Dense</label>
      </node>
      <node id="8">
        <label>cstring</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>math.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_b_spline_8cpp_1a3e6ba2e915968c21a87009dba62d0862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void interpolate</definition>
        <argsstring>(InputDataSet Input, int Num, int P, OutputDataSet *Output)</argsstring>
        <name>interpolate</name>
        <param>
          <type><ref refid="class_input_data_set" kindref="compound">InputDataSet</ref></type>
          <declname>Input</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Num</declname>
        </param>
        <param>
          <type>int</type>
          <declname>P</declname>
        </param>
        <param>
          <type><ref refid="class_output_data_set" kindref="compound">OutputDataSet</ref> *</type>
          <declname>Output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function takes the Input structure, performs the BSpline interpolation and outputs the result into Output structure </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/BSpline.cpp" line="235" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/BSpline.cpp" bodystart="235" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="_b_spline_8cpp_1aaf24fdd3759fc695fb19570f5522d9aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void approximate</definition>
        <argsstring>(InputDataSet Input, int Num, int Q, int P, OutputDataSet *Output)</argsstring>
        <name>approximate</name>
        <param>
          <type><ref refid="class_input_data_set" kindref="compound">InputDataSet</ref></type>
          <declname>Input</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Num</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>P</declname>
        </param>
        <param>
          <type><ref refid="class_output_data_set" kindref="compound">OutputDataSet</ref> *</type>
          <declname>Output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function takes the Input structure, performs the BSpline LS approximation and outputs the result into Output structure </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/BSpline.cpp" line="414" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/BSpline.cpp" bodystart="414" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="_b_spline_8cpp_1a599bbc806739fd317db9e8a68b56330e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void basisFunction</definition>
        <argsstring>(double t, Eigen::VectorXd U, int I, int P, double *NN, double *NN1, double *NN2)</argsstring>
        <name>basisFunction</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Eigen::VectorXd</type>
          <declname>U</declname>
        </param>
        <param>
          <type>int</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>P</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>NN</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>NN1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>NN2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function calculates the basis functions NN of order P, and derivatives NN1, NN2, for a given time t and knot vector U </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/BSpline.cpp" line="681" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/BSpline.cpp" bodystart="681" bodyend="726"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2021,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;BSpline.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;architecture/utilities/avsEigenSupport.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="class_input_data_set_1a7cce7bd58320bbd3903f9fc0bf77624c" kindref="member">InputDataSet::InputDataSet</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="class_input_data_set_1a7cce7bd58320bbd3903f9fc0bf77624c" kindref="member">InputDataSet::InputDataSet</ref>(Eigen::VectorXd<sp/>X1,<sp/>Eigen::VectorXd<sp/>X2,<sp/>Eigen::VectorXd<sp/>X3)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;X1<sp/>=<sp/><ref refid="class_input_data_set_1a68a08b437ff9c167a9bc26483e16a71e" kindref="member">X1</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;X2<sp/>=<sp/><ref refid="class_input_data_set_1aa86e42afe1ed110fdfcd43cbd5ecef1a" kindref="member">X2</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;X3<sp/>=<sp/><ref refid="class_input_data_set_1a7eb2ede32b894d95ee2436e19f1de9ea" kindref="member">X3</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_input_data_set_1ab82f0e7ec917f53d15db2375ec37f350" kindref="member">XDot_0_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_input_data_set_1ada8fc1785d2bf27fb13cfe04b98a1d55" kindref="member">XDot_N_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_input_data_set_1a0081dc8298440c6a322284b56071c267" kindref="member">XDDot_0_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_input_data_set_1aed3aaf6dfb556ef834221ef28b1615fc" kindref="member">XDDot_N_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_input_data_set_1abfdcc7d55a467663d8f9d765d0b927b6" kindref="member">T_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_input_data_set_1acfcdc9f11d751c7ded3f3a65d1ad4d93" kindref="member">AvgXDot_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_input_data_set_1a015d8ef4da6e2be9ce983efce1970e73" kindref="member">W_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>N1<sp/>=<sp/>(uint64_t)<sp/><ref refid="class_input_data_set_1a68a08b437ff9c167a9bc26483e16a71e" kindref="member">X1</ref>.size();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>N2<sp/>=<sp/>(uint64_t)<sp/><ref refid="class_input_data_set_1aa86e42afe1ed110fdfcd43cbd5ecef1a" kindref="member">X2</ref>.size();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>N3<sp/>=<sp/>(uint64_t)<sp/><ref refid="class_input_data_set_1a7eb2ede32b894d95ee2436e19f1de9ea" kindref="member">X3</ref>.size();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((N1<sp/>!=<sp/>N2)<sp/>||<sp/>(N1<sp/>!=<sp/>N3)<sp/>||<sp/>(N2<sp/>!=<sp/>N3))<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>BSpline.InputDataSet:<sp/>\n<sp/>the<sp/>Input<sp/>coordinate<sp/>vectors<sp/>X1,<sp/>X2,<sp/>X3<sp/>have<sp/>different<sp/>sizes.<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="class_input_data_set_1a90db8ce2493263f9b5783b2405ac32a6" kindref="member">InputDataSet::~InputDataSet</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_data_set_1a8ed341048a0eecee98b050ef3fb2dcb7" kindref="member">InputDataSet::setXDot_0</ref>(Eigen::Vector3d<sp/>XDot_0)<sp/>{this-&gt;XDot_0<sp/>=<sp/><ref refid="class_input_data_set_1a695885bbd8ccdea0371a263ec14d8ef6" kindref="member">XDot_0</ref>;<sp/>this-&gt;<ref refid="class_input_data_set_1ab82f0e7ec917f53d15db2375ec37f350" kindref="member">XDot_0_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_data_set_1a74032ca84e7c90337421b205d61866a2" kindref="member">InputDataSet::setXDot_N</ref>(Eigen::Vector3d<sp/>XDot_N)<sp/>{this-&gt;XDot_N<sp/>=<sp/><ref refid="class_input_data_set_1aaf7e83045a5909cf6f52374c03d8eb57" kindref="member">XDot_N</ref>;<sp/>this-&gt;<ref refid="class_input_data_set_1ada8fc1785d2bf27fb13cfe04b98a1d55" kindref="member">XDot_N_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_data_set_1abbe628dd9f7aab7a1bc9cd3eaf684f86" kindref="member">InputDataSet::setXDDot_0</ref>(Eigen::Vector3d<sp/>XDDot_0)<sp/>{this-&gt;XDDot_0<sp/>=<sp/><ref refid="class_input_data_set_1a9fc4f9bf7edd4e8fa39bba7e697100d1" kindref="member">XDDot_0</ref>;<sp/>this-&gt;<ref refid="class_input_data_set_1a0081dc8298440c6a322284b56071c267" kindref="member">XDDot_0_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_data_set_1a0dc21c537697e48ecc7733c094267031" kindref="member">InputDataSet::setXDDot_N</ref>(Eigen::Vector3d<sp/>XDDot_N)<sp/>{this-&gt;XDDot_N<sp/>=<sp/><ref refid="class_input_data_set_1a94faa8a9f547eb9ad655074fa7925389" kindref="member">XDDot_N</ref>;<sp/>this-&gt;<ref refid="class_input_data_set_1aed3aaf6dfb556ef834221ef28b1615fc" kindref="member">XDDot_N_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_data_set_1af803093747642ef2b05958f9ff132c64" kindref="member">InputDataSet::setT</ref>(Eigen::VectorXd<sp/>T)<sp/>{this-&gt;T<sp/>=<sp/><ref refid="class_input_data_set_1a157e580a8e57758039a2b7bbae197781" kindref="member">T</ref>;<sp/>this-&gt;<ref refid="class_input_data_set_1abfdcc7d55a467663d8f9d765d0b927b6" kindref="member">T_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>this-&gt;<ref refid="class_input_data_set_1acfcdc9f11d751c7ded3f3a65d1ad4d93" kindref="member">AvgXDot_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_data_set_1a2ceb25a146564b0b3c7fb22a75c5fa79" kindref="member">InputDataSet::setAvgXDot</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>AvgXDot)<sp/>{this-&gt;AvgXDot<sp/>=<sp/><ref refid="class_input_data_set_1a47137d505416ac0eae6fe77382a25fa0" kindref="member">AvgXDot</ref>;<sp/>this-&gt;<ref refid="class_input_data_set_1acfcdc9f11d751c7ded3f3a65d1ad4d93" kindref="member">AvgXDot_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>this-&gt;<ref refid="class_input_data_set_1abfdcc7d55a467663d8f9d765d0b927b6" kindref="member">T_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_input_data_set_1ad2f6ea829788aba4b14f496b9363922a" kindref="member">InputDataSet::setW</ref>(Eigen::VectorXd<sp/>W)<sp/>{this-&gt;W<sp/>=<sp/><ref refid="class_input_data_set_1ab71bb9e822cee2eaae63f3018b545943" kindref="member">W</ref>;<sp/>this-&gt;<ref refid="class_input_data_set_1a015d8ef4da6e2be9ce983efce1970e73" kindref="member">W_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="class_output_data_set_1ac04dd68c76079e2d9ff418074edc4031" kindref="member">OutputDataSet::OutputDataSet</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="class_output_data_set_1a092f208dba4a4adf354d9ecbf948aee4" kindref="member">OutputDataSet::~OutputDataSet</ref>()</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_output_data_set_1a72c1d9cf47e27dcb71e0af7ff60b7bbc" kindref="member">OutputDataSet::getData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xDot[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xDDot[3])</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>(int)<sp/>this-&gt;T.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ttot<sp/>=<sp/>this-&gt;T[N];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>T<sp/>&lt;<sp/>Ttot<sp/>calculalte<sp/>the<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_output_data_set_1a8dd09645367e6d9bedc90b41a7b1f5c5" kindref="member">T</ref><sp/>&lt;=<sp/>Ttot)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/><ref refid="class_output_data_set_1a8dd09645367e6d9bedc90b41a7b1f5c5" kindref="member">T</ref><sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/>(int)<sp/>this-&gt;<ref refid="class_output_data_set_1a9f7c1c840ccb16e242d2c47ade6176fd" kindref="member">C1</ref>.size();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>NN(Q),<sp/>NN1(Q),<sp/>NN2(Q);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basisFunction(t,<sp/>this-&gt;<ref refid="class_output_data_set_1a3b2764a644e3b29ce548af66138f7da3" kindref="member">U</ref>,<sp/>Q,<sp/>this-&gt;<ref refid="class_output_data_set_1a5eaacdbeced65038db0b9b398ed7b9eb" kindref="member">P</ref>,<sp/>&amp;NN[0],<sp/>&amp;NN1[0],<sp/>&amp;NN2[0]);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>NN.dot(this-&gt;<ref refid="class_output_data_set_1a9f7c1c840ccb16e242d2c47ade6176fd" kindref="member">C1</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/>NN.dot(this-&gt;<ref refid="class_output_data_set_1a9076a7ae5a8d6c88293b26ece54e3993" kindref="member">C2</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[2]<sp/>=<sp/>NN.dot(this-&gt;<ref refid="class_output_data_set_1ad697d14e89b488cefa1de3260f8bbcf5" kindref="member">C3</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDot[0]<sp/>=<sp/>NN1.dot(this-&gt;<ref refid="class_output_data_set_1a9f7c1c840ccb16e242d2c47ade6176fd" kindref="member">C1</ref>)<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDot[1]<sp/>=<sp/>NN1.dot(this-&gt;<ref refid="class_output_data_set_1a9076a7ae5a8d6c88293b26ece54e3993" kindref="member">C2</ref>)<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDot[2]<sp/>=<sp/>NN1.dot(this-&gt;<ref refid="class_output_data_set_1ad697d14e89b488cefa1de3260f8bbcf5" kindref="member">C3</ref>)<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDDot[0]<sp/>=<sp/>NN2.dot(this-&gt;<ref refid="class_output_data_set_1a9f7c1c840ccb16e242d2c47ade6176fd" kindref="member">C1</ref>)<sp/>/<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDDot[1]<sp/>=<sp/>NN2.dot(this-&gt;<ref refid="class_output_data_set_1a9076a7ae5a8d6c88293b26ece54e3993" kindref="member">C2</ref>)<sp/>/<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDDot[2]<sp/>=<sp/>NN2.dot(this-&gt;<ref refid="class_output_data_set_1ad697d14e89b488cefa1de3260f8bbcf5" kindref="member">C3</ref>)<sp/>/<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>t<sp/>&gt;<sp/>Ttot<sp/>return<sp/>final<sp/>value<sp/>with<sp/>zero<sp/>derivatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>this-&gt;X1[N];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/>this-&gt;X2[N];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[2]<sp/>=<sp/>this-&gt;X3[N];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDot[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDot[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDot[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDDot[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDDot[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDDot[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_output_data_set_1af21858c3f4b68793e9256c09e247c9b0" kindref="member">OutputDataSet::getStates</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>derivative,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>(int)<sp/>this-&gt;T.size()-1;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ttot<sp/>=<sp/>this-&gt;T[N];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>T<sp/>&lt;<sp/>Ttot<sp/>calculalte<sp/>the<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_output_data_set_1a8dd09645367e6d9bedc90b41a7b1f5c5" kindref="member">T</ref><sp/>&lt;=<sp/>Ttot)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/><ref refid="class_output_data_set_1a8dd09645367e6d9bedc90b41a7b1f5c5" kindref="member">T</ref><sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/>(int)<sp/>this-&gt;<ref refid="class_output_data_set_1a9f7c1c840ccb16e242d2c47ade6176fd" kindref="member">C1</ref>.size();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>NN(Q),<sp/>NN1(Q),<sp/>NN2(Q);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basisFunction(t,<sp/>this-&gt;<ref refid="class_output_data_set_1a3b2764a644e3b29ce548af66138f7da3" kindref="member">U</ref>,<sp/>Q,<sp/>this-&gt;<ref refid="class_output_data_set_1a5eaacdbeced65038db0b9b398ed7b9eb" kindref="member">P</ref>,<sp/>&amp;NN[0],<sp/>&amp;NN1[0],<sp/>&amp;NN2[0]);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(derivative)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0<sp/>:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(index)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0<sp/>:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NN.dot(this-&gt;<ref refid="class_output_data_set_1a9f7c1c840ccb16e242d2c47ade6176fd" kindref="member">C1</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1<sp/>:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NN.dot(this-&gt;<ref refid="class_output_data_set_1a9076a7ae5a8d6c88293b26ece54e3993" kindref="member">C2</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2<sp/>:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NN.dot(this-&gt;<ref refid="class_output_data_set_1ad697d14e89b488cefa1de3260f8bbcf5" kindref="member">C3</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>Output.getStates:<sp/>invalid<sp/>index<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1000;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1<sp/>:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(index)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0<sp/>:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NN1.dot(this-&gt;<ref refid="class_output_data_set_1a9f7c1c840ccb16e242d2c47ade6176fd" kindref="member">C1</ref>)<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1<sp/>:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NN1.dot(this-&gt;<ref refid="class_output_data_set_1a9076a7ae5a8d6c88293b26ece54e3993" kindref="member">C2</ref>)<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2<sp/>:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NN1.dot(this-&gt;<ref refid="class_output_data_set_1ad697d14e89b488cefa1de3260f8bbcf5" kindref="member">C3</ref>)<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>Output.getStates:<sp/>invalid<sp/>index<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1000;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2<sp/>:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(index)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0<sp/>:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NN2.dot(this-&gt;<ref refid="class_output_data_set_1a9f7c1c840ccb16e242d2c47ade6176fd" kindref="member">C1</ref>)<sp/>/<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1<sp/>:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NN2.dot(this-&gt;<ref refid="class_output_data_set_1a9076a7ae5a8d6c88293b26ece54e3993" kindref="member">C2</ref>)<sp/>/<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2<sp/>:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NN2.dot(this-&gt;<ref refid="class_output_data_set_1ad697d14e89b488cefa1de3260f8bbcf5" kindref="member">C3</ref>)<sp/>/<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>Output.getStates:<sp/>invalid<sp/>index<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1000;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>Output.getStates:<sp/>invalid<sp/>derivative<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1000;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>t<sp/>&gt;<sp/>Ttot<sp/>return<sp/>final<sp/>value<sp/>with<sp/>zero<sp/>derivatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(derivative)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0<sp/>:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(index)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0<sp/>:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;X1[N];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1<sp/>:</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;X2[N];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2<sp/>:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;X3[N];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>Output.getStates:<sp/>invalid<sp/>index<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1000;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1<sp/>:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(index)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0<sp/>:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1<sp/>:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2<sp/>:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>Output.getStates:<sp/>invalid<sp/>index<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1000;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2<sp/>:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(index)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0<sp/>:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1<sp/>:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2<sp/>:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>Output.getStates:<sp/>invalid<sp/>index<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1000;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>Output.getStates:<sp/>invalid<sp/>derivative<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1000;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>interpolate(<ref refid="class_input_data_set" kindref="compound">InputDataSet</ref><sp/>Input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Num,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>P,<sp/><ref refid="class_output_data_set" kindref="compound">OutputDataSet</ref><sp/>*Output)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a5eaacdbeced65038db0b9b398ed7b9eb" kindref="member">P</ref><sp/>=<sp/>P;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>N<sp/>=<sp/>number<sp/>of<sp/>waypoints<sp/>-<sp/>1<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>(int)<sp/>Input.<ref refid="class_input_data_set_1a68a08b437ff9c167a9bc26483e16a71e" kindref="member">X1</ref>.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>T<sp/>=<sp/>time<sp/>tags;<sp/>if<sp/>not<sp/>specified,<sp/>it<sp/>is<sp/>computed<sp/>from<sp/>a<sp/>cartesian<sp/>distance<sp/>assuming<sp/>a<sp/>constant<sp/>velocity<sp/>norm<sp/>on<sp/>average</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>T(N+1);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1abfdcc7d55a467663d8f9d765d0b927b6" kindref="member">T_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a157e580a8e57758039a2b7bbae197781" kindref="member">T</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>1;<sp/>n<sp/>&lt;<sp/>N+1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T[n]<sp/>=<sp/>T[n-1]<sp/>+<sp/>pow(<sp/>(pow(Input.<ref refid="class_input_data_set_1a68a08b437ff9c167a9bc26483e16a71e" kindref="member">X1</ref>[n]-Input.<ref refid="class_input_data_set_1a68a08b437ff9c167a9bc26483e16a71e" kindref="member">X1</ref>[n-1],<sp/>2)<sp/>+<sp/>pow(Input.<ref refid="class_input_data_set_1aa86e42afe1ed110fdfcd43cbd5ecef1a" kindref="member">X2</ref>[n]-Input.<ref refid="class_input_data_set_1aa86e42afe1ed110fdfcd43cbd5ecef1a" kindref="member">X2</ref>[n-1],<sp/>2)<sp/>+<sp/>pow(Input.<ref refid="class_input_data_set_1a7eb2ede32b894d95ee2436e19f1de9ea" kindref="member">X3</ref>[n]-Input.<ref refid="class_input_data_set_1a7eb2ede32b894d95ee2436e19f1de9ea" kindref="member">X3</ref>[n-1],<sp/>2)),<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S<sp/>+=<sp/>T[n]<sp/>-<sp/>T[n-1];</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1acfcdc9f11d751c7ded3f3a65d1ad4d93" kindref="member">AvgXDot_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>N+1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T[n]<sp/>=<sp/>T[n]<sp/>/<sp/>T[N]<sp/>*<sp/>S<sp/>/<sp/>Input.<ref refid="class_input_data_set_1a47137d505416ac0eae6fe77382a25fa0" kindref="member">AvgXDot</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ttot<sp/>=<sp/>T[N];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>uk<sp/>vector:<sp/>normalized<sp/>waypoint<sp/>time<sp/>tags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>uk(N+1);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>N+1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uk[n]<sp/>=<sp/>T[n]<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>K<sp/>=<sp/>number<sp/>of<sp/>endpoint<sp/>derivatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1ab82f0e7ec917f53d15db2375ec37f350" kindref="member">XDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{K<sp/>+=<sp/>1;}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1ada8fc1785d2bf27fb13cfe04b98a1d55" kindref="member">XDot_N_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{K<sp/>+=<sp/>1;}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1a0081dc8298440c6a322284b56071c267" kindref="member">XDDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{K<sp/>+=<sp/>1;}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1aed3aaf6dfb556ef834221ef28b1615fc" kindref="member">XDDot_N_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{K<sp/>+=<sp/>1;}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>polynomial<sp/>order<sp/>is<sp/>N<sp/>+<sp/>K.<sp/>If<sp/>a<sp/>higher<sp/>order<sp/>is<sp/>requested,<sp/>print<sp/>a<sp/>BSK_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(P<sp/>&gt;<sp/>N<sp/>+<sp/>K)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>BSpline.interpolate:<sp/>\n<sp/>the<sp/>desired<sp/>polynomial<sp/>order<sp/>P<sp/>is<sp/>too<sp/>high.<sp/>Mass<sp/>matrix<sp/>A<sp/>will<sp/>be<sp/>singular.<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M<sp/>=<sp/>N<sp/>+<sp/>P<sp/>+<sp/>K<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>knot<sp/>vector<sp/>U<sp/>of<sp/>size<sp/>M<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>U(M+1);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>P+1;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[p]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>M-2*P-1;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>j;<sp/>i<sp/>&lt;<sp/>j+P;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>uk.size())<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>+=<sp/>uk[N]<sp/>/<sp/>P;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>+=<sp/>uk[i]<sp/>/<sp/>P;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[P+j+1]<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>P+1;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[M-P+p]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>stiffness<sp/>matrix<sp/>A<sp/>of<sp/>size<sp/>(N+K+1)x(N+K+1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>A(N+K+1,N+K+1);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>vectors<sp/>Q1,<sp/>Q2,<sp/>Q3<sp/>(left<sp/>hand<sp/>side<sp/>of<sp/>linear<sp/>system)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>Q1(N+K+1),<sp/>Q2(N+K+1),<sp/>Q3(N+K+1);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>populate<sp/>A<sp/>with<sp/>zeros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>N+K+1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>N+K+1;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(n,m)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constrain<sp/>first<sp/>derivative<sp/>at<sp/>starting<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1ab82f0e7ec917f53d15db2375ec37f350" kindref="member">XDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(n,0)<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(n,1)<sp/>=<sp/><sp/>1;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q1[n]<sp/>=<sp/>U[P+1]<sp/>/<sp/>P<sp/>*<sp/>Input.<ref refid="class_input_data_set_1a695885bbd8ccdea0371a263ec14d8ef6" kindref="member">XDot_0</ref>[0]<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q2[n]<sp/>=<sp/>U[P+1]<sp/>/<sp/>P<sp/>*<sp/>Input.<ref refid="class_input_data_set_1a695885bbd8ccdea0371a263ec14d8ef6" kindref="member">XDot_0</ref>[1]<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q3[n]<sp/>=<sp/>U[P+1]<sp/>/<sp/>P<sp/>*<sp/>Input.<ref refid="class_input_data_set_1a695885bbd8ccdea0371a263ec14d8ef6" kindref="member">XDot_0</ref>[2]<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constrain<sp/>second<sp/>derivative<sp/>at<sp/>starting<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1a0081dc8298440c6a322284b56071c267" kindref="member">XDDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(n,0)<sp/>=<sp/>U[P+2];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(n,1)<sp/>=<sp/>-(U[P+1]<sp/>+<sp/>U[P+2]);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(n,2)<sp/>=<sp/>U[P+1];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q1[n]<sp/>=<sp/>(<sp/>pow(U[P+1],2)<sp/>*<sp/>U[P+2]<sp/>/<sp/>(P*(P-1))<sp/>)<sp/>*<sp/>Input.<ref refid="class_input_data_set_1a9fc4f9bf7edd4e8fa39bba7e697100d1" kindref="member">XDDot_0</ref>[0]<sp/>*<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q2[n]<sp/>=<sp/>(<sp/>pow(U[P+1],2)<sp/>*<sp/>U[P+2]<sp/>/<sp/>(P*(P-1))<sp/>)<sp/>*<sp/>Input.<ref refid="class_input_data_set_1a9fc4f9bf7edd4e8fa39bba7e697100d1" kindref="member">XDDot_0</ref>[1]<sp/>*<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q3[n]<sp/>=<sp/>(<sp/>pow(U[P+1],2)<sp/>*<sp/>U[P+2]<sp/>/<sp/>(P*(P-1))<sp/>)<sp/>*<sp/>Input.<ref refid="class_input_data_set_1a9fc4f9bf7edd4e8fa39bba7e697100d1" kindref="member">XDDot_0</ref>[2]<sp/>*<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>NN(N+K+1),<sp/>NN1(N+K+1),<sp/>NN2(N+K+1);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constrain<sp/>waypoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>n0;<sp/>n<sp/>&lt;<sp/>N+n0+1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basisFunction(uk[m],<sp/>U,<sp/>N+K+1,<sp/>P,<sp/>&amp;NN[0],<sp/>&amp;NN1[0],<sp/>&amp;NN2[0]);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/>N+K+1;<sp/>b++)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(n,b)<sp/>=<sp/>NN[b];</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q1[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a68a08b437ff9c167a9bc26483e16a71e" kindref="member">X1</ref>[m];</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q2[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1aa86e42afe1ed110fdfcd43cbd5ecef1a" kindref="member">X2</ref>[m];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q3[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a7eb2ede32b894d95ee2436e19f1de9ea" kindref="member">X3</ref>[m];</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>N+n0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constrain<sp/>second<sp/>derivative<sp/>at<sp/>final<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1aed3aaf6dfb556ef834221ef28b1615fc" kindref="member">XDDot_N_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(n,N+K-2)<sp/>=<sp/>1<sp/>-<sp/>U[M-P-1];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(n,N+K-1)<sp/>=<sp/>-(2<sp/>-<sp/>U[M-P-1]<sp/>-<sp/>U[M-P-2]);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(n,N+K)<sp/>=<sp/>1<sp/>-<sp/>U[M-P-2];</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q1[n]<sp/>=<sp/>(<sp/>pow((1-U[M-P-1]),2)<sp/>*<sp/>(1-U[M-P-2])<sp/>/<sp/>(P*(P-1))<sp/>)<sp/>*<sp/>Input.<ref refid="class_input_data_set_1a94faa8a9f547eb9ad655074fa7925389" kindref="member">XDDot_N</ref>[0]<sp/>*<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q2[n]<sp/>=<sp/>(<sp/>pow((1-U[M-P-1]),2)<sp/>*<sp/>(1-U[M-P-2])<sp/>/<sp/>(P*(P-1))<sp/>)<sp/>*<sp/>Input.<ref refid="class_input_data_set_1a94faa8a9f547eb9ad655074fa7925389" kindref="member">XDDot_N</ref>[1]<sp/>*<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q3[n]<sp/>=<sp/>(<sp/>pow((1-U[M-P-1]),2)<sp/>*<sp/>(1-U[M-P-2])<sp/>/<sp/>(P*(P-1))<sp/>)<sp/>*<sp/>Input.<ref refid="class_input_data_set_1a94faa8a9f547eb9ad655074fa7925389" kindref="member">XDDot_N</ref>[2]<sp/>*<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constrain<sp/>first<sp/>derivative<sp/>at<sp/>final<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1ada8fc1785d2bf27fb13cfe04b98a1d55" kindref="member">XDot_N_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(n,N+K-1)<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A(n,N+K)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q1[n]<sp/>=<sp/>(1-U[M-P-1])<sp/>/<sp/>P<sp/>*<sp/>Input.<ref refid="class_input_data_set_1aaf7e83045a5909cf6f52374c03d8eb57" kindref="member">XDot_N</ref>[0]<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q2[n]<sp/>=<sp/>(1-U[M-P-1])<sp/>/<sp/>P<sp/>*<sp/>Input.<ref refid="class_input_data_set_1aaf7e83045a5909cf6f52374c03d8eb57" kindref="member">XDot_N</ref>[1]<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q3[n]<sp/>=<sp/>(1-U[M-P-1])<sp/>/<sp/>P<sp/>*<sp/>Input.<ref refid="class_input_data_set_1aaf7e83045a5909cf6f52374c03d8eb57" kindref="member">XDot_N</ref>[2]<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>linear<sp/>systems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>B<sp/>=<sp/>A.inverse();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>C1<sp/>=<sp/>B<sp/>*<sp/>Q1;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>C2<sp/>=<sp/>B<sp/>*<sp/>Q2;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>C3<sp/>=<sp/>B<sp/>*<sp/>Q3;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a3b2764a644e3b29ce548af66138f7da3" kindref="member">U</ref><sp/>=<sp/>U;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a9f7c1c840ccb16e242d2c47ade6176fd" kindref="member">C1</ref><sp/>=<sp/>C1;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a9076a7ae5a8d6c88293b26ece54e3993" kindref="member">C2</ref><sp/>=<sp/>C2;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1ad697d14e89b488cefa1de3260f8bbcf5" kindref="member">C3</ref><sp/>=<sp/>C3;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt<sp/>=<sp/>1.0<sp/>/<sp/>(Num<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>interpolated<sp/>trajectory<sp/>information<sp/>into<sp/>Output<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a8dd09645367e6d9bedc90b41a7b1f5c5" kindref="member">T</ref>.resize(Num);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1ad10a7f4b13248f98858388b411318941" kindref="member">X1</ref>.resize(Num);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a8698f0f0eca6b82bb43e7b1959bbf3f5" kindref="member">X2</ref>.resize(Num);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a7caf71a10e7bed429c961fd2e3248d0d" kindref="member">X3</ref>.resize(Num);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a82a319835f63a62bc5493a82c7d864fd" kindref="member">XD1</ref>.resize(Num);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1aa95bc5ec1ed1157f5266a2b2188485ab" kindref="member">XD2</ref>.resize(Num);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a461cfb2ab6b59aae3f22acc9a5ff4a26" kindref="member">XD3</ref>.resize(Num);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a42deb08495a0753dd30a2215d70669f7" kindref="member">XDD1</ref>.resize(Num);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a66825a0696f3d719a67d7253dbcc7225" kindref="member">XDD2</ref>.resize(Num);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a39e39e4facb3b4b43cd1ad0f3ebea9b4" kindref="member">XDD3</ref>.resize(Num);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basisFunction(t,<sp/>U,<sp/>N+K+1,<sp/>P,<sp/>&amp;NN[0],<sp/>&amp;NN1[0],<sp/>&amp;NN2[0]);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a8dd09645367e6d9bedc90b41a7b1f5c5" kindref="member">T</ref>[i]<sp/>=<sp/>t<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1ad10a7f4b13248f98858388b411318941" kindref="member">X1</ref>[i]<sp/>=<sp/>NN.dot(C1);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a8698f0f0eca6b82bb43e7b1959bbf3f5" kindref="member">X2</ref>[i]<sp/>=<sp/>NN.dot(C2);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a7caf71a10e7bed429c961fd2e3248d0d" kindref="member">X3</ref>[i]<sp/>=<sp/>NN.dot(C3);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a82a319835f63a62bc5493a82c7d864fd" kindref="member">XD1</ref>[i]<sp/><sp/>=<sp/>NN1.dot(C1)<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1aa95bc5ec1ed1157f5266a2b2188485ab" kindref="member">XD2</ref>[i]<sp/><sp/>=<sp/>NN1.dot(C2)<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a461cfb2ab6b59aae3f22acc9a5ff4a26" kindref="member">XD3</ref>[i]<sp/><sp/>=<sp/>NN1.dot(C3)<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a42deb08495a0753dd30a2215d70669f7" kindref="member">XDD1</ref>[i]<sp/>=<sp/>NN2.dot(C1)<sp/>/<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a66825a0696f3d719a67d7253dbcc7225" kindref="member">XDD2</ref>[i]<sp/>=<sp/>NN2.dot(C2)<sp/>/<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a39e39e4facb3b4b43cd1ad0f3ebea9b4" kindref="member">XDD3</ref>[i]<sp/>=<sp/>NN2.dot(C3)<sp/>/<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dt;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>approximate(<ref refid="class_input_data_set" kindref="compound">InputDataSet</ref><sp/>Input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Num,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Q,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>P,<sp/><ref refid="class_output_data_set" kindref="compound">OutputDataSet</ref><sp/>*Output)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a5eaacdbeced65038db0b9b398ed7b9eb" kindref="member">P</ref><sp/>=<sp/>P;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>N<sp/>=<sp/>number<sp/>of<sp/>waypoints<sp/>-<sp/>1<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>(int)<sp/>Input.<ref refid="class_input_data_set_1a68a08b437ff9c167a9bc26483e16a71e" kindref="member">X1</ref>.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>T<sp/>=<sp/>time<sp/>tags;<sp/>if<sp/>not<sp/>specified,<sp/>it<sp/>is<sp/>computed<sp/>from<sp/>a<sp/>cartesian<sp/>distance<sp/>assuming<sp/>a<sp/>constant<sp/>velocity<sp/>norm<sp/>on<sp/>average</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>T(N+1);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1abfdcc7d55a467663d8f9d765d0b927b6" kindref="member">T_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a157e580a8e57758039a2b7bbae197781" kindref="member">T</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>1;<sp/>n<sp/>&lt;<sp/>N+1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T[n]<sp/>=<sp/>T[n-1]<sp/>+<sp/>pow(<sp/>(pow(Input.<ref refid="class_input_data_set_1a68a08b437ff9c167a9bc26483e16a71e" kindref="member">X1</ref>[n]-Input.<ref refid="class_input_data_set_1a68a08b437ff9c167a9bc26483e16a71e" kindref="member">X1</ref>[n-1],<sp/>2)<sp/>+<sp/>pow(Input.<ref refid="class_input_data_set_1aa86e42afe1ed110fdfcd43cbd5ecef1a" kindref="member">X2</ref>[n]-Input.<ref refid="class_input_data_set_1aa86e42afe1ed110fdfcd43cbd5ecef1a" kindref="member">X2</ref>[n-1],<sp/>2)<sp/>+<sp/>pow(Input.<ref refid="class_input_data_set_1a7eb2ede32b894d95ee2436e19f1de9ea" kindref="member">X3</ref>[n]-Input.<ref refid="class_input_data_set_1a7eb2ede32b894d95ee2436e19f1de9ea" kindref="member">X3</ref>[n-1],<sp/>2)),<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S<sp/>+=<sp/>T[n]<sp/>-<sp/>T[n-1];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1acfcdc9f11d751c7ded3f3a65d1ad4d93" kindref="member">AvgXDot_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>N+1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T[n]<sp/>=<sp/>T[n]<sp/>/<sp/>T[N]<sp/>*<sp/>S<sp/>/<sp/>Input.<ref refid="class_input_data_set_1a47137d505416ac0eae6fe77382a25fa0" kindref="member">AvgXDot</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ttot<sp/>=<sp/>T[N];</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>uk<sp/>vector:<sp/>normalized<sp/>waypoint<sp/>time<sp/>tags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>uk(N+1);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>N+1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uk[n]<sp/>=<sp/>T[n]<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>polynomial<sp/>order<sp/>is<sp/>N<sp/>+<sp/>K.<sp/>If<sp/>a<sp/>higher<sp/>order<sp/>is<sp/>requested,<sp/>print<sp/>a<sp/>BSK_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(P<sp/>&gt;<sp/>Q)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>BSpline.approximate:<sp/>\n<sp/>the<sp/>desired<sp/>polynomial<sp/>order<sp/>P<sp/>can&apos;t<sp/>be<sp/>higher<sp/>than<sp/>the<sp/>number<sp/>of<sp/>control<sp/>points<sp/>Q.<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>knot<sp/>vector<sp/>U<sp/>of<sp/>size<sp/>Q<sp/>+<sp/>P<sp/>+<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>U(Q+P+2);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/>alpha;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>((double)(N+1))<sp/>/<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)abs(Q-P+1));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>P+1;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[p]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>Q-P+1;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>int(j*d);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>j*d<sp/>-<sp/>i;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[P+j]<sp/>=<sp/>(1-alpha)*uk[i-1]<sp/>+<sp/>alpha*uk[i];</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>P+1;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[Q+p+1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>K<sp/>=<sp/>number<sp/>of<sp/>endpoint<sp/>derivatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1ab82f0e7ec917f53d15db2375ec37f350" kindref="member">XDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{K<sp/>+=<sp/>1;}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1ada8fc1785d2bf27fb13cfe04b98a1d55" kindref="member">XDot_N_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{K<sp/>+=<sp/>1;}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1a0081dc8298440c6a322284b56071c267" kindref="member">XDDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{K<sp/>+=<sp/>1;}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1aed3aaf6dfb556ef834221ef28b1615fc" kindref="member">XDDot_N_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{K<sp/>+=<sp/>1;}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>stiffness<sp/>matrix<sp/>MD<sp/>of<sp/>size<sp/>(K+2)x(K+2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>MD(K+2,K+2);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>vectors<sp/>T1,<sp/>T2,<sp/>T3<sp/>(left<sp/>hand<sp/>side<sp/>of<sp/>linear<sp/>system)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>T1(K+2),<sp/>T2(K+2),<sp/>T3(K+2);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>populate<sp/>MD<sp/>with<sp/>zeros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>K+2;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>K+2;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MD(n,m)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>NN(Q+1),<sp/>NN1(Q+1),<sp/>NN2(Q+1);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>basisFunction(uk[0],<sp/>U,<sp/>Q+1,<sp/>P,<sp/>&amp;NN[0],<sp/>&amp;NN1[0],<sp/>&amp;NN2[0]);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>MD(0,0)<sp/>=<sp/>NN[0];</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>T1[0]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a68a08b437ff9c167a9bc26483e16a71e" kindref="member">X1</ref>[0];</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>T2[0]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1aa86e42afe1ed110fdfcd43cbd5ecef1a" kindref="member">X2</ref>[0];</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>T3[0]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a7eb2ede32b894d95ee2436e19f1de9ea" kindref="member">X3</ref>[0];</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constrain<sp/>first<sp/>derivative<sp/>at<sp/>starting<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1ab82f0e7ec917f53d15db2375ec37f350" kindref="member">XDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MD(n,0)<sp/>=<sp/>NN1[0];</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MD(n,1)<sp/>=<sp/>NN1[1];</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T1[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a695885bbd8ccdea0371a263ec14d8ef6" kindref="member">XDot_0</ref>[0]<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T2[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a695885bbd8ccdea0371a263ec14d8ef6" kindref="member">XDot_0</ref>[1]<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a695885bbd8ccdea0371a263ec14d8ef6" kindref="member">XDot_0</ref>[2]<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constrain<sp/>second<sp/>derivative<sp/>at<sp/>starting<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1a0081dc8298440c6a322284b56071c267" kindref="member">XDDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MD(n,0)<sp/>=<sp/>NN2[0];</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MD(n,1)<sp/>=<sp/>NN2[1];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MD(n,2)<sp/>=<sp/>NN2[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T1[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a9fc4f9bf7edd4e8fa39bba7e697100d1" kindref="member">XDDot_0</ref>[0]<sp/>*<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T2[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a9fc4f9bf7edd4e8fa39bba7e697100d1" kindref="member">XDDot_0</ref>[1]<sp/>*<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a9fc4f9bf7edd4e8fa39bba7e697100d1" kindref="member">XDDot_0</ref>[2]<sp/>*<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>basisFunction(uk[N],<sp/>U,<sp/>Q+1,<sp/>P,<sp/>&amp;NN[0],<sp/>&amp;NN1[0],<sp/>&amp;NN2[0]);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constrain<sp/>second<sp/>derivative<sp/>at<sp/>ending<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1aed3aaf6dfb556ef834221ef28b1615fc" kindref="member">XDDot_N_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MD(n,K-1)<sp/>=<sp/>NN2[Q-2];</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MD(n,K)<sp/><sp/><sp/>=<sp/>NN2[Q-1];</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MD(n,K+1)<sp/>=<sp/>NN2[Q];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T1[K-1]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a94faa8a9f547eb9ad655074fa7925389" kindref="member">XDDot_N</ref>[0]<sp/>*<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T2[K]<sp/><sp/><sp/>=<sp/>Input.<ref refid="class_input_data_set_1a94faa8a9f547eb9ad655074fa7925389" kindref="member">XDDot_N</ref>[1]<sp/>*<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3[K+1]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a94faa8a9f547eb9ad655074fa7925389" kindref="member">XDDot_N</ref>[2]<sp/>*<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constrain<sp/>first<sp/>derivative<sp/>at<sp/>ending<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1ada8fc1785d2bf27fb13cfe04b98a1d55" kindref="member">XDot_N_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MD(n,K)<sp/><sp/><sp/>=<sp/>NN1[Q-1];</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MD(n,K+1)<sp/>=<sp/>NN1[Q];</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T1[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1aaf7e83045a5909cf6f52374c03d8eb57" kindref="member">XDot_N</ref>[0]<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T2[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1aaf7e83045a5909cf6f52374c03d8eb57" kindref="member">XDot_N</ref>[1]<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1aaf7e83045a5909cf6f52374c03d8eb57" kindref="member">XDot_N</ref>[2]<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>MD(n,K+1)<sp/>=<sp/>NN[Q];</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>T1[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a68a08b437ff9c167a9bc26483e16a71e" kindref="member">X1</ref>[N];</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>T2[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1aa86e42afe1ed110fdfcd43cbd5ecef1a" kindref="member">X2</ref>[N];</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>T3[n]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a7eb2ede32b894d95ee2436e19f1de9ea" kindref="member">X3</ref>[N];</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>linear<sp/>systems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>B<sp/>=<sp/>MD.inverse();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>C1_1<sp/>=<sp/>B<sp/>*<sp/>T1;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>C2_1<sp/>=<sp/>B<sp/>*<sp/>T2;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>C3_1<sp/>=<sp/>B<sp/>*<sp/>T3;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>populate<sp/>Rk<sp/>vectors<sp/>with<sp/>the<sp/>base<sp/>points<sp/>for<sp/>LS<sp/>minimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>Rk1(N-1),<sp/>Rk2(N-1),<sp/>Rk3(N-1);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>1;<sp/>n<sp/>&lt;<sp/>N;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basisFunction(uk[n],<sp/>U,<sp/>Q+1,<sp/>P,<sp/>&amp;NN[0],<sp/>&amp;NN1[0],<sp/>&amp;NN2[0]);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk1[n-1]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a68a08b437ff9c167a9bc26483e16a71e" kindref="member">X1</ref>[n]<sp/>-<sp/>NN[0]*C1_1[0]<sp/>-<sp/>NN[Q]*C1_1[K+1];</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk2[n-1]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1aa86e42afe1ed110fdfcd43cbd5ecef1a" kindref="member">X2</ref>[n]<sp/>-<sp/>NN[0]*C2_1[0]<sp/>-<sp/>NN[Q]*C2_1[K+1];</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk3[n-1]<sp/>=<sp/>Input.<ref refid="class_input_data_set_1a7eb2ede32b894d95ee2436e19f1de9ea" kindref="member">X3</ref>[n]<sp/>-<sp/>NN[0]*C3_1[0]<sp/>-<sp/>NN[Q]*C3_1[K+1];</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1ab82f0e7ec917f53d15db2375ec37f350" kindref="member">XDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk1[n-1]<sp/>-=<sp/>NN[1]*C1_1[1];</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk2[n-1]<sp/>-=<sp/>NN[1]*C2_1[1];</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk3[n-1]<sp/>-=<sp/>NN[1]*C3_1[1];</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1a0081dc8298440c6a322284b56071c267" kindref="member">XDDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk1[n-1]<sp/>-=<sp/>NN[2]*C1_1[2];</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk2[n-1]<sp/>-=<sp/>NN[2]*C2_1[2];</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk3[n-1]<sp/>-=<sp/>NN[2]*C3_1[2];</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1aed3aaf6dfb556ef834221ef28b1615fc" kindref="member">XDDot_N_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk1[n-1]<sp/>-=<sp/>NN[Q-2]*C1_1[K-1];</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk2[n-1]<sp/>-=<sp/>NN[Q-2]*C2_1[K-1];</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk3[n-1]<sp/>-=<sp/>NN[Q-2]*C3_1[K-1];</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1ada8fc1785d2bf27fb13cfe04b98a1d55" kindref="member">XDot_N_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk1[n-1]<sp/>-=<sp/>NN[Q-1]*C1_1[K];</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk2[n-1]<sp/>-=<sp/>NN[Q-1]*C2_1[K];</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rk3[n-1]<sp/>-=<sp/>NN[Q-1]*C3_1[K];</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>populate<sp/>LS<sp/>matrix<sp/>ND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>ND(N-1,Q-K-1);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>N-1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basisFunction(uk[1+n],<sp/>U,<sp/>Q+1,<sp/>P,<sp/>&amp;NN[0],<sp/>&amp;NN1[0],<sp/>&amp;NN2[0]);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1ab82f0e7ec917f53d15db2375ec37f350" kindref="member">XDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{k<sp/>+=<sp/>1;}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1a0081dc8298440c6a322284b56071c267" kindref="member">XDDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{k<sp/>+=<sp/>1;}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/>Q-K-1;<sp/>b++)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ND(n,b)<sp/>=<sp/>NN[k+b];</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>populate<sp/>weight<sp/>matrix<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>W(N-1,N-1);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>N-1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>N-1;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1a015d8ef4da6e2be9ce983efce1970e73" kindref="member">W_flag</ref>)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W(n,m)<sp/>=<sp/>Input.<ref refid="class_input_data_set_1ab71bb9e822cee2eaae63f3018b545943" kindref="member">W</ref>[n+1];</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W(n,m)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W(n,m)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>R1(Q-K-1),<sp/>R2(Q-K-1),<sp/>R3(Q-K-1);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>ND.transpose()<sp/>*<sp/>W;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>R1<sp/>=<sp/>B<sp/>*<sp/>Rk1;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>R2<sp/>=<sp/>B<sp/>*<sp/>Rk2;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>R3<sp/>=<sp/>B<sp/>*<sp/>Rk3;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>LS<sp/>values<sp/>R<sp/>for<sp/>the<sp/>control<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>NWN(Q-K-1,Q-K-1),<sp/>NWN_inv(Q-K-1,Q-K-1);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>NWN<sp/>=<sp/>B<sp/>*<sp/>ND;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>NWN_inv<sp/>=<sp/>NWN.inverse();</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>C1_2<sp/>=<sp/>NWN_inv<sp/>*<sp/>R1;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>C2_2<sp/>=<sp/>NWN_inv<sp/>*<sp/>R2;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>C3_2<sp/>=<sp/>NWN_inv<sp/>*<sp/>R3;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>control<sp/>point<sp/>vectors<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>C1(Q+1),<sp/>C2(Q+1),<sp/>C3(Q+1);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>C1[n]<sp/>=<sp/>C1_1[n];<sp/><sp/>C2[n]<sp/>=<sp/>C2_1[n];<sp/><sp/>C3[n]<sp/>=<sp/>C3_1[n];</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1ab82f0e7ec917f53d15db2375ec37f350" kindref="member">XDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C1[n]<sp/>=<sp/>C1_1[n];<sp/><sp/>C2[n]<sp/>=<sp/>C2_1[n];<sp/><sp/>C3[n]<sp/>=<sp/>C3_1[n];</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1a0081dc8298440c6a322284b56071c267" kindref="member">XDDot_0_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C1[n]<sp/>=<sp/>C1_1[n];<sp/><sp/>C2[n]<sp/>=<sp/>C2_1[n];<sp/><sp/>C3[n]<sp/>=<sp/>C3_1[n];</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q<sp/>=<sp/>0;<sp/>q<sp/>&lt;<sp/>Q-K-1;<sp/>q++)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C1[n+q+1]<sp/>=<sp/>C1_2[q];<sp/><sp/>C2[n+q+1]<sp/>=<sp/>C2_2[q];<sp/><sp/>C3[n+q+1]<sp/>=<sp/>C3_2[q];</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1aed3aaf6dfb556ef834221ef28b1615fc" kindref="member">XDDot_N_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C1[Q-K-1+n]<sp/>=<sp/>C1_1[n];<sp/><sp/>C2[Q-K-1+n]<sp/>=<sp/>C2_1[n];<sp/><sp/>C3[Q-K-1+n]<sp/>=<sp/>C3_1[n];</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Input.<ref refid="class_input_data_set_1ada8fc1785d2bf27fb13cfe04b98a1d55" kindref="member">XDot_N_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C1[Q-K-1+n]<sp/>=<sp/>C1_1[n];<sp/><sp/>C2[Q-K-1+n]<sp/>=<sp/>C2_1[n];<sp/><sp/>C3[Q-K-1+n]<sp/>=<sp/>C3_1[n];</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>C1[Q-K-1+n]<sp/>=<sp/>C1_1[n];<sp/><sp/>C2[Q-K-1+n]<sp/>=<sp/>C2_1[n];<sp/><sp/>C3[Q-K-1+n]<sp/>=<sp/>C3_1[n];</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a3b2764a644e3b29ce548af66138f7da3" kindref="member">U</ref><sp/>=<sp/>U;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a9f7c1c840ccb16e242d2c47ade6176fd" kindref="member">C1</ref><sp/>=<sp/>C1;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a9076a7ae5a8d6c88293b26ece54e3993" kindref="member">C2</ref><sp/>=<sp/>C2;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1ad697d14e89b488cefa1de3260f8bbcf5" kindref="member">C3</ref><sp/>=<sp/>C3;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt<sp/>=<sp/>1.0<sp/>/<sp/>(Num<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>interpolated<sp/>trajectory<sp/>information<sp/>into<sp/>Output<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a8dd09645367e6d9bedc90b41a7b1f5c5" kindref="member">T</ref>.resize(Num);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1ad10a7f4b13248f98858388b411318941" kindref="member">X1</ref>.resize(Num);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a8698f0f0eca6b82bb43e7b1959bbf3f5" kindref="member">X2</ref>.resize(Num);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a7caf71a10e7bed429c961fd2e3248d0d" kindref="member">X3</ref>.resize(Num);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a82a319835f63a62bc5493a82c7d864fd" kindref="member">XD1</ref>.resize(Num);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1aa95bc5ec1ed1157f5266a2b2188485ab" kindref="member">XD2</ref>.resize(Num);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a461cfb2ab6b59aae3f22acc9a5ff4a26" kindref="member">XD3</ref>.resize(Num);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a42deb08495a0753dd30a2215d70669f7" kindref="member">XDD1</ref>.resize(Num);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a66825a0696f3d719a67d7253dbcc7225" kindref="member">XDD2</ref>.resize(Num);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a39e39e4facb3b4b43cd1ad0f3ebea9b4" kindref="member">XDD3</ref>.resize(Num);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basisFunction(t,<sp/>U,<sp/>Q+1,<sp/>P,<sp/>&amp;NN[0],<sp/>&amp;NN1[0],<sp/>&amp;NN2[0]);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a8dd09645367e6d9bedc90b41a7b1f5c5" kindref="member">T</ref>[i]<sp/>=<sp/>t<sp/>*<sp/>Ttot;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1ad10a7f4b13248f98858388b411318941" kindref="member">X1</ref>[i]<sp/>=<sp/>NN.dot(C1);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a8698f0f0eca6b82bb43e7b1959bbf3f5" kindref="member">X2</ref>[i]<sp/>=<sp/>NN.dot(C2);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a7caf71a10e7bed429c961fd2e3248d0d" kindref="member">X3</ref>[i]<sp/>=<sp/>NN.dot(C3);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a82a319835f63a62bc5493a82c7d864fd" kindref="member">XD1</ref>[i]<sp/><sp/>=<sp/>NN1.dot(C1)<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1aa95bc5ec1ed1157f5266a2b2188485ab" kindref="member">XD2</ref>[i]<sp/><sp/>=<sp/>NN1.dot(C2)<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a461cfb2ab6b59aae3f22acc9a5ff4a26" kindref="member">XD3</ref>[i]<sp/><sp/>=<sp/>NN1.dot(C3)<sp/>/<sp/>Ttot;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a42deb08495a0753dd30a2215d70669f7" kindref="member">XDD1</ref>[i]<sp/>=<sp/>NN2.dot(C1)<sp/>/<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a66825a0696f3d719a67d7253dbcc7225" kindref="member">XDD2</ref>[i]<sp/>=<sp/>NN2.dot(C2)<sp/>/<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output-&gt;<ref refid="class_output_data_set_1a39e39e4facb3b4b43cd1ad0f3ebea9b4" kindref="member">XDD3</ref>[i]<sp/>=<sp/>NN2.dot(C3)<sp/>/<sp/>pow(Ttot,2);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dt;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>basisFunction(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/>Eigen::VectorXd<sp/>U,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>P,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*NN,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*NN1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*NN2)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>N(I,<sp/>P+1);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>N1(I,<sp/>P+1);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>N2(I,<sp/>P+1);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>populate<sp/>matrices<sp/>with<sp/>zeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>I;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>P+1;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N(i,p)<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N1(i,p)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N2(i,p)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>I;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(t<sp/>&gt;=<sp/>U(i))<sp/>&amp;&amp;<sp/>(t<sp/>&lt;<sp/>U(i+1))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N(i,0)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(t-1.0)<sp/>&lt;<sp/>1e-5)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N(I-1,0)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>higher<sp/>order<sp/>-<sp/>De<sp/>Boor<sp/>formula<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>1;<sp/>p<sp/>&lt;<sp/>P+1;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>I;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(U[i+p]-U[i]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N(i,p)<sp/><sp/>+=<sp/>(t-U[i])<sp/>/<sp/>(U[i+p]-U[i])<sp/>*<sp/>N(i,p-1);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N1(i,p)<sp/>+=<sp/>p<sp/>/<sp/>(U[i+p]-U[i])<sp/>*<sp/>N(i,p-1);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N2(i,p)<sp/>+=<sp/>p<sp/>/<sp/>(U[i+p]-U[i])<sp/>*<sp/>N1(i,p-1);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(U[i+p+1]-U[i+1]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N(i,p)<sp/><sp/>+=<sp/>(U[i+p+1]-t)<sp/>/<sp/>(U[i+p+1]-U[i+1])<sp/>*<sp/>N(i+1,p-1);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N1(i,p)<sp/>-=<sp/>p<sp/>/<sp/>(U[i+p+1]-U[i+1])<sp/>*<sp/>N(i+1,p-1);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N2(i,p)<sp/>-=<sp/>p<sp/>/<sp/>(U[i+p+1]-U[i+1])<sp/>*<sp/>N1(i+1,p-1);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>I;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(NN+i)<sp/><sp/>=<sp/>N(i,P);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(NN1+i)<sp/>=<sp/>N1(i,P);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(NN2+i)<sp/>=<sp/>N2(i,P);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/BSpline.cpp"/>
  </compounddef>
</doxygen>
