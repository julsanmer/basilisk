<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_sys_process" kind="class" language="C++" prot="public">
    <compoundname>SysProcess</compoundname>
    <includes refid="sys__process_8h" local="no">sys_process.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_sys_process_1afd0380bd84af65899e85ed7ab8ebb64d" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_model_schedule_entry" kindref="compound">ModelScheduleEntry</ref> &gt;</type>
        <definition>std::vector&lt;ModelScheduleEntry&gt; SysProcess::processTasks</definition>
        <argsstring></argsstring>
        <name>processTasks</name>
        <qualifiedname>SysProcess::processTasks</qualifiedname>
        <briefdescription>
<para><ndash/> Array that has pointers to all process tasks </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="64" column="17" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="64" bodyend="61"/>
      </memberdef>
      <memberdef kind="variable" id="class_sys_process_1a80256006e4a051a416b57ee0a5c59304" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t SysProcess::nextTaskTime</definition>
        <argsstring></argsstring>
        <name>nextTaskTime</name>
        <qualifiedname>SysProcess::nextTaskTime</qualifiedname>
        <briefdescription>
<para>[ns] time for the next Task </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="65" column="14" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sys_process_1a0b3aa0f5656a2da2a121d7dca25d0541" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t SysProcess::prevRouteTime</definition>
        <argsstring></argsstring>
        <name>prevRouteTime</name>
        <qualifiedname>SysProcess::prevRouteTime</qualifiedname>
        <briefdescription>
<para>[ns] Time that interfaces were previously routed </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="66" column="14" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sys_process_1ad8559b43f19138974c38064710cc0f15" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SysProcess::processName</definition>
        <argsstring></argsstring>
        <name>processName</name>
        <qualifiedname>SysProcess::processName</qualifiedname>
        <briefdescription>
<para><ndash/> Identifier for process </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="67" column="17" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sys_process_1ab1c7c2dc2a046937a2588632b5488797" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SysProcess::processActive</definition>
        <argsstring></argsstring>
        <name>processActive</name>
        <qualifiedname>SysProcess::processActive</qualifiedname>
        <briefdescription>
<para><ndash/> Flag indicating whether the Process is active </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="68" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sys_process_1aa98db6ac51eb59db12bffc667cbefbdd" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SysProcess::processOnThread</definition>
        <argsstring></argsstring>
        <name>processOnThread</name>
        <qualifiedname>SysProcess::processOnThread</qualifiedname>
        <briefdescription>
<para><ndash/> Flag indicating that the process has been added to a thread for execution </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="69" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sys_process_1a74174ceb262e4e77a76fdec964f6a465" prot="public" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t SysProcess::processPriority</definition>
        <argsstring></argsstring>
        <name>processPriority</name>
        <qualifiedname>SysProcess::processPriority</qualifiedname>
        <briefdescription>
<para>[-] Priority level for process (higher first) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="70" column="13" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sys_process_1a637eaa18695b0ca1150cee76eb1f759a" prot="public" static="no" mutable="no">
        <type>BSKLogger</type>
        <definition>BSKLogger SysProcess::bskLogger</definition>
        <argsstring></argsstring>
        <name>bskLogger</name>
        <qualifiedname>SysProcess::bskLogger</qualifiedname>
        <briefdescription>
<para><ndash/> BSK Logging </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="71" column="15" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="71" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sys_process_1aab3f08e283db63370898a7de0b003c2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SysProcess::SysProcess</definition>
        <argsstring>()</argsstring>
        <name>SysProcess</name>
        <qualifiedname>SysProcess::SysProcess</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The task constructor. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="41" column="5" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.cpp" bodystart="25" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1a123f3814748e484def8c529d547e5903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SysProcess::SysProcess</definition>
        <argsstring>(std::string messageContainer)</argsstring>
        <name>SysProcess</name>
        <qualifiedname>SysProcess::SysProcess</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>messageContainer</declname>
        </param>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
<para>Make a process AND attach a storage bucket with the provided name. Give the process the same name. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>messageContainer</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of nanoseconds between calls to this Task. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="42" column="5" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.cpp" bodystart="38" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1a852cb3f1831c1b7a7abda9322f9ee55d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SysProcess::~SysProcess</definition>
        <argsstring>()</argsstring>
        <name>~SysProcess</name>
        <qualifiedname>SysProcess::~SysProcess</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The destructor does nothing. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="43" column="5" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.cpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1aa08b48c5f3ab8b8f99257e164edffe5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::addNewTask</definition>
        <argsstring>(SysModelTask *newTask, int32_t taskPriority=-1)</argsstring>
        <name>addNewTask</name>
        <qualifiedname>SysProcess::addNewTask</qualifiedname>
        <param>
          <type><ref refid="class_sys_model_task" kindref="compound">SysModelTask</ref> *</type>
          <declname>newTask</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>taskPriority</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
<para>This method adds a new task into the Task list. Note that taskPriority parameter is option as it defaults to -1 (lowest) <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newTask</parametername>
</parameternamelist>
<parameterdescription>
<para>The new task that we are adding to the list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>taskPriority</parametername>
</parameternamelist>
<parameterdescription>
<para>The selected priority of the task being added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="44" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.cpp" bodystart="172" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1a81a83c16fe51bb6289f510512f8d46e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::selfInitProcess</definition>
        <argsstring>()</argsstring>
        <name>selfInitProcess</name>
        <qualifiedname>SysProcess::selfInitProcess</qualifiedname>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
<para>This method sets the nextTaskTime = 0 and calls SelfInitTaskList() for all process tasks. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Iterate through model list and call the Task model self-initializer</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="45" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.cpp" bodystart="59" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1a0aa7a5effa963db074a43221bb485227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::resetProcess</definition>
        <argsstring>(uint64_t currentTime)</argsstring>
        <name>resetProcess</name>
        <qualifiedname>SysProcess::resetProcess</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>currentTime</declname>
        </param>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
<para>This method resets each task and associated model-set inside the process ensuring that all parameters go back to their default state. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para>Current simulation time in ns that reset is occurring at </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Time of reset. Models that utilize currentTime will start at this.</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="46" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.cpp" bodystart="79" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1ac0b7700ed83f3a8c87584ac4e8aa9a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::reInitProcess</definition>
        <argsstring>()</argsstring>
        <name>reInitProcess</name>
        <qualifiedname>SysProcess::reInitProcess</qualifiedname>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
<para>This method does two things: 1) resets the next task time for all process tasks to the first task time. 2) clears the process list and then adds everything back into the process with the correct priority. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="47" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.cpp" bodystart="97" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1aea9aa958d5a36bef161dc438d63b3a13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::enableProcess</definition>
        <argsstring>()</argsstring>
        <name>enableProcess</name>
        <qualifiedname>SysProcess::enableProcess</qualifiedname>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="48" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1a9ad4d1733f0d5f1eef7ac8533adb67c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::disableProcess</definition>
        <argsstring>()</argsstring>
        <name>disableProcess</name>
        <qualifiedname>SysProcess::disableProcess</qualifiedname>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="49" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="49" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1aca49b161b978a035499205c7c7f5def2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::scheduleTask</definition>
        <argsstring>(ModelScheduleEntry &amp;taskCall)</argsstring>
        <name>scheduleTask</name>
        <qualifiedname>SysProcess::scheduleTask</qualifiedname>
        <param>
          <type><ref refid="struct_model_schedule_entry" kindref="compound">ModelScheduleEntry</ref> &amp;</type>
          <declname>taskCall</declname>
        </param>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
<para>This method is used to place the task from the caller into the correct place in the simulation schedule. The transaction for this model is that the caller will set the correct parameters in the calling argument and that the simulation will faithfully schedule it. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>taskCall</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a struct that contains start time and task handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Iteratre through all of the task models to find correct place</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>If the next Task starts after new Task, pop it on just prior</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Default case is to put the Task at the end of the schedule</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="50" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.cpp" bodystart="191" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1a051b0e9b3fd0ed22086fa0de5a7b19b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::setProcessName</definition>
        <argsstring>(std::string newName)</argsstring>
        <name>setProcessName</name>
        <qualifiedname>SysProcess::setProcessName</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>newName</declname>
        </param>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="51" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1a8b276080f03f39d09d56c61ce725067f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SysProcess::getProcessName</definition>
        <argsstring>()</argsstring>
        <name>getProcessName</name>
        <qualifiedname>SysProcess::getProcessName</qualifiedname>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="52" column="17" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="52" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1a953bb464d3adfec018adfc08d8bf9504" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t SysProcess::getNextTime</definition>
        <argsstring>()</argsstring>
        <name>getNextTime</name>
        <qualifiedname>SysProcess::getNextTime</qualifiedname>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="53" column="14" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="53" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1aefa433273e78326a62d24b6c76d7f1f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::singleStepNextTask</definition>
        <argsstring>(uint64_t currentNanos)</argsstring>
        <name>singleStepNextTask</name>
        <qualifiedname>SysProcess::singleStepNextTask</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>currentNanos</declname>
        </param>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
<para>This method steps the next task up to currentNanos unless it isn&apos;t supposed to run yet. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Check to make sure that there are models to be called.</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>If the requested time does not meet our next start time, just return</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Call the next scheduled model, and set the time to its start</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Figure out when we are going to be called next for scheduling purposes</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>If the requested time does not meet our next start time, just return</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="54" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.cpp" bodystart="121" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1a470863013890fa8ec35ab91ecd64cf58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SysProcess::processEnabled</definition>
        <argsstring>()</argsstring>
        <name>processEnabled</name>
        <qualifiedname>SysProcess::processEnabled</qualifiedname>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="55" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1ae92ff788c25018681ebd3d31bc8e23ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::changeTaskPeriod</definition>
        <argsstring>(std::string taskName, uint64_t newPeriod)</argsstring>
        <name>changeTaskPeriod</name>
        <qualifiedname>SysProcess::changeTaskPeriod</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>taskName</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>newPeriod</declname>
        </param>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
<para>This method updates a specified task&apos;s period once it locates that task in the list. It will warn the user if a task is not found. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>taskName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the task you want to change period of </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newPeriod</parametername>
</parameternamelist>
<parameterdescription>
<para>the new number of nanoseconds you want between calls </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Iteratre through all of the task models to disable them</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="56" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.cpp" bodystart="245" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1a49aa74400310ff454172f83b80b4c6f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::setPriority</definition>
        <argsstring>(int64_t newPriority)</argsstring>
        <name>setPriority</name>
        <qualifiedname>SysProcess::setPriority</qualifiedname>
        <param>
          <type>int64_t</type>
          <declname>newPriority</declname>
        </param>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="57" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1afeb4dcbd373d10a0b91ce2c21fbf4d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::disableAllTasks</definition>
        <argsstring>()</argsstring>
        <name>disableAllTasks</name>
        <qualifiedname>SysProcess::disableAllTasks</qualifiedname>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
<para>The name kind of says it all right? It is a shotgun used to disable all of a process&apos; tasks. It is handy for a FSW scheme where you have tons of tasks and you are really only turning one on at a time. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Iterate through all of the tasks to disable them</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="58" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.cpp" bodystart="215" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1a010e9ee28c348dc26e5a6ecfc64efad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::enableAllTasks</definition>
        <argsstring>()</argsstring>
        <name>enableAllTasks</name>
        <qualifiedname>SysProcess::enableAllTasks</qualifiedname>
        <briefdescription>
<para>class method </para>
        </briefdescription>
        <detaileddescription>
<para>The name kind of says it all right? It is a shotgun used to enable all of a processes tasks. It is handy for a process that starts out almost entirely inhibited but you want to turn it all on at once. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Iterate through all of the task models to disable them</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="59" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.cpp" bodystart="229" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1a0b13e02fce1c93b461be8f0fab36ad9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SysProcess::getProcessControlStatus</definition>
        <argsstring>()</argsstring>
        <name>getProcessControlStatus</name>
        <qualifiedname>SysProcess::getProcessControlStatus</qualifiedname>
        <briefdescription>
<para>Allows caller to see if this process is parented by a thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="60" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_sys_process_1a96c798436b6cf71bac56c2f821087878" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SysProcess::setProcessControlStatus</definition>
        <argsstring>(bool processTaken)</argsstring>
        <name>setProcessControlStatus</name>
        <qualifiedname>SysProcess::setProcessControlStatus</qualifiedname>
        <param>
          <type>bool</type>
          <declname>processTaken</declname>
        </param>
        <briefdescription>
<para>Provides a mechanism to say that this process is allocated to a thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="61" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="61" bodyend="60"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class used to group a set of tasks into one process (task group) of execution. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" line="37" column="1" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h" bodystart="38" bodyend="72"/>
    <listofallmembers>
      <member refid="class_sys_process_1aa08b48c5f3ab8b8f99257e164edffe5e" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>addNewTask</name></member>
      <member refid="class_sys_process_1a637eaa18695b0ca1150cee76eb1f759a" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>bskLogger</name></member>
      <member refid="class_sys_process_1ae92ff788c25018681ebd3d31bc8e23ba" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>changeTaskPeriod</name></member>
      <member refid="class_sys_process_1afeb4dcbd373d10a0b91ce2c21fbf4d0d" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>disableAllTasks</name></member>
      <member refid="class_sys_process_1a9ad4d1733f0d5f1eef7ac8533adb67c4" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>disableProcess</name></member>
      <member refid="class_sys_process_1a010e9ee28c348dc26e5a6ecfc64efad3" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>enableAllTasks</name></member>
      <member refid="class_sys_process_1aea9aa958d5a36bef161dc438d63b3a13" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>enableProcess</name></member>
      <member refid="class_sys_process_1a953bb464d3adfec018adfc08d8bf9504" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>getNextTime</name></member>
      <member refid="class_sys_process_1a0b13e02fce1c93b461be8f0fab36ad9d" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>getProcessControlStatus</name></member>
      <member refid="class_sys_process_1a8b276080f03f39d09d56c61ce725067f" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>getProcessName</name></member>
      <member refid="class_sys_process_1a80256006e4a051a416b57ee0a5c59304" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>nextTaskTime</name></member>
      <member refid="class_sys_process_1a0b3aa0f5656a2da2a121d7dca25d0541" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>prevRouteTime</name></member>
      <member refid="class_sys_process_1ab1c7c2dc2a046937a2588632b5488797" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>processActive</name></member>
      <member refid="class_sys_process_1a470863013890fa8ec35ab91ecd64cf58" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>processEnabled</name></member>
      <member refid="class_sys_process_1ad8559b43f19138974c38064710cc0f15" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>processName</name></member>
      <member refid="class_sys_process_1aa98db6ac51eb59db12bffc667cbefbdd" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>processOnThread</name></member>
      <member refid="class_sys_process_1a74174ceb262e4e77a76fdec964f6a465" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>processPriority</name></member>
      <member refid="class_sys_process_1afd0380bd84af65899e85ed7ab8ebb64d" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>processTasks</name></member>
      <member refid="class_sys_process_1ac0b7700ed83f3a8c87584ac4e8aa9a7e" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>reInitProcess</name></member>
      <member refid="class_sys_process_1a0aa7a5effa963db074a43221bb485227" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>resetProcess</name></member>
      <member refid="class_sys_process_1aca49b161b978a035499205c7c7f5def2" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>scheduleTask</name></member>
      <member refid="class_sys_process_1a81a83c16fe51bb6289f510512f8d46e8" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>selfInitProcess</name></member>
      <member refid="class_sys_process_1a49aa74400310ff454172f83b80b4c6f7" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>setPriority</name></member>
      <member refid="class_sys_process_1a96c798436b6cf71bac56c2f821087878" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>setProcessControlStatus</name></member>
      <member refid="class_sys_process_1a051b0e9b3fd0ed22086fa0de5a7b19b3" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>setProcessName</name></member>
      <member refid="class_sys_process_1aefa433273e78326a62d24b6c76d7f1f2" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>singleStepNextTask</name></member>
      <member refid="class_sys_process_1aab3f08e283db63370898a7de0b003c2a" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>SysProcess</name></member>
      <member refid="class_sys_process_1a123f3814748e484def8c529d547e5903" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>SysProcess</name></member>
      <member refid="class_sys_process_1a852cb3f1831c1b7a7abda9322f9ee55d" prot="public" virt="non-virtual"><scope>SysProcess</scope><name>~SysProcess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
