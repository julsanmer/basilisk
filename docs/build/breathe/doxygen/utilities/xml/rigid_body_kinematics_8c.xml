<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="rigid_body_kinematics_8c" kind="file" language="C++">
    <compoundname>rigidBodyKinematics.c</compoundname>
    <includes refid="rigid_body_kinematics_8h" local="yes">rigidBodyKinematics.h</includes>
    <includes refid="linear_algebra_8h" local="yes">linearAlgebra.h</includes>
    <includes refid="astro_constants_8h" local="yes">astroConstants.h</includes>
    <includes refid="bsk___print_8h" local="yes">architecture/utilities/bsk_Print.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="6">
        <label>astroConstants.h</label>
        <link refid="astro_constants_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>architecture/utilities/bskLogging.h</label>
        <link refid="bsk_logging_8h_source"/>
      </node>
      <node id="8">
        <label>architecture/utilities/bsk_Print.h</label>
        <link refid="bsk___print_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>linearAlgebra.h</label>
        <link refid="linear_algebra_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c</label>
        <link refid="rigid_body_kinematics_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>rigidBodyKinematics.h</label>
        <link refid="rigid_body_kinematics_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="9">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="rigid_body_kinematics_8c_1a18ac38be6d09e6976af7ca75cf7f94e9" prot="public" static="no">
        <name>nearZero</name>
        <initializer>0.0000000000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="27" column="9" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="27" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aa627dd9a2705e0f879793f56e048ac83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEP</definition>
        <argsstring>(double *b1, double *b2, double *result)</argsstring>
        <name>addEP</name>
        <param>
          <type>double *</type>
          <declname>b1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>b2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="34" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="34" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a48330fbae2330dc5dc795ab4b04b0e5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEuler121</definition>
        <argsstring>(double *e1, double *e2, double *result)</argsstring>
        <name>addEuler121</name>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="47" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="47" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a7eb362be412de0756e7c004f9495e9db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEuler131</definition>
        <argsstring>(double *e1, double *e2, double *result)</argsstring>
        <name>addEuler131</name>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="73" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="73" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a06635cc35cb762382f2220f8a06166fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEuler123</definition>
        <argsstring>(double *e1, double *e2, double *result)</argsstring>
        <name>addEuler123</name>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="99" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="99" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac5761ef324f691b409f5ee5a04042dd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEuler132</definition>
        <argsstring>(double *e1, double *e2, double *result)</argsstring>
        <name>addEuler132</name>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="116" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="116" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a48f41d96f7411c3baba090572af1242f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEuler212</definition>
        <argsstring>(double *e1, double *e2, double *result)</argsstring>
        <name>addEuler212</name>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="133" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="133" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ae0ad3be44bc7563348d52c29e9f22ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEuler213</definition>
        <argsstring>(double *e1, double *e2, double *result)</argsstring>
        <name>addEuler213</name>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="159" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="159" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aa9a4d9e8686bcb4bc4b8d6c3b384c97d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEuler231</definition>
        <argsstring>(double *e1, double *e2, double *result)</argsstring>
        <name>addEuler231</name>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="176" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="176" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ab93c68ea8c552fa4f3830424fd35bdd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEuler232</definition>
        <argsstring>(double *e1, double *e2, double *result)</argsstring>
        <name>addEuler232</name>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="193" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="193" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1afdb1d19fa45bcee5c255d7d61d0e9bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEuler312</definition>
        <argsstring>(double *e1, double *e2, double *result)</argsstring>
        <name>addEuler312</name>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="219" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="219" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ab29d952fe8741105857f4aad06236f91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEuler313</definition>
        <argsstring>(double *e1, double *e2, double *result)</argsstring>
        <name>addEuler313</name>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="236" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="236" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a5aefd020df5891c835148ec2da178a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEuler321</definition>
        <argsstring>(double *e1, double *e2, double *result)</argsstring>
        <name>addEuler321</name>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="262" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="262" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac5807741f669906436b89669a06d1ba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addEuler323</definition>
        <argsstring>(double *e1, double *e2, double *result)</argsstring>
        <name>addEuler323</name>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="279" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="279" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aaed0ae7bf7d6cf8ab15e613e98d8baf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addGibbs</definition>
        <argsstring>(double *q1, double *q2, double *result)</argsstring>
        <name>addGibbs</name>
        <param>
          <type>double *</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="305" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="305" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac75d73d5f7f463d327c44d6aa71dd87a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addMRP</definition>
        <argsstring>(double *q1, double *q2, double *result)</argsstring>
        <name>addMRP</name>
        <param>
          <type>double *</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="321" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="321" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1abd6a8159b72daaaf5375dd34687c14b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addPRV</definition>
        <argsstring>(double *qq1, double *qq2, double *result)</argsstring>
        <name>addPRV</name>
        <param>
          <type>double *</type>
          <declname>qq1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>qq2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="358" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="358" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aecbf9d9e5ef3577648c42e228f9b8a35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvEP</definition>
        <argsstring>(double *q, double B[3][4])</argsstring>
        <name>BinvEP</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][4]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="411" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="411" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a618d10772e63e10ac60de9239d4f5cba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvEuler121</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvEuler121</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="434" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="434" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1af856935859db71e56bbfd7435743b3b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvEuler123</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvEuler123</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="464" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="464" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a930576ef25c691cbed9ce5cb01327199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvEuler131</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvEuler131</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="494" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="494" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a31ca8131f5ecba2ed59d5c6cc221d389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvEuler132</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvEuler132</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="524" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="524" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aca8c27dcd7e7bf9515e673c533560977" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvEuler212</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvEuler212</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="554" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="554" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a587ccb4642285e4f3202ff1b92c525cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvEuler213</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvEuler213</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="584" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="584" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a33c9e6398428fab98452315452b1d9ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvEuler231</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvEuler231</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="614" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="614" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a58c81223f1aef6fb2a8941f7f6d3f2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvEuler232</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvEuler232</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="644" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="644" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a1ba6a10772da83c0b5d9f77cff66f1f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvEuler323</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvEuler323</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="674" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="674" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a6e160438f8235e640ae6ecbe8b0906cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvEuler313</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvEuler313</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="704" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="704" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a0a3ba90ed6acaa1ecb7099909dca9e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvEuler321</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvEuler321</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="734" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="734" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a5a49a9274d282313a8134697e3afca6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvEuler312</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvEuler312</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="764" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="764" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a0a2c26ed154998b3d316bbf8a5c424c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvGibbs</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvGibbs</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="794" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="794" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a1aa47f54583288240856099815a4a6d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvMRP</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvMRP</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="815" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="815" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a459c471177dfe07711269aa7409b1cc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinvPRV</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BinvPRV</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="839" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="839" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a514a00e3bd8827e5190d59c4a648a736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatEP</definition>
        <argsstring>(double *q, double B[4][3])</argsstring>
        <name>BmatEP</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[4][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="867" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="867" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a3bf314b8afa6a71bc5a3c40220a86769" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatEuler121</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatEuler121</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="890" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="890" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ab1bce39f5b198e32f8273767eb67f743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatEuler131</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatEuler131</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="921" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="921" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a4edae2b712eb7a59efff73f00a629ded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatEuler123</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatEuler123</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="952" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="952" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a85b5c9bc925f0e74fc151c3ee17d9c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatEuler132</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatEuler132</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="983" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="983" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1acc7a09cd43a776617a6eaae5e27a57b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatEuler212</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatEuler212</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1014" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1014" bodyend="1036"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a1b6bb3dc172078bc58d10201a97b1e08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatEuler213</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatEuler213</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1045" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1045" bodyend="1067"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a786e657679118ca2845212ae3266f41d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatEuler231</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatEuler231</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1076" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1076" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a6f35aa013e8163233cb8e4c38533fa3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatEuler232</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatEuler232</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1107" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1107" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a59d1a62c58449bd451accae928abceed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatEuler312</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatEuler312</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1138" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1138" bodyend="1160"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a389dbc5d2d8f98d42603677982ce9221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatEuler313</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatEuler313</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1169" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1169" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a805467dc33d8821d4d034a92170579b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatEuler321</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatEuler321</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1200" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1200" bodyend="1222"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1af28964244b72226bfadf5d05e824cee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatEuler323</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatEuler323</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1231" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1231" bodyend="1253"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1abcd14cad53b57fbda97662619e01da36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatGibbs</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatGibbs</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1262" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1262" bodyend="1273"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1af2fefcc473c88aedb533b197e1687338" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatMRP</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatMRP</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1282" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1282" bodyend="1296"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a83d4e7c0ba653fac7a0bbcdb9d478691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BdotmatMRP</definition>
        <argsstring>(double *q, double *dq, double B[3][3])</argsstring>
        <name>BdotmatMRP</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1306" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1306" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a703ba9e3c5f80cbb7808a94bc890a7ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BmatPRV</definition>
        <argsstring>(double *q, double B[3][3])</argsstring>
        <name>BmatPRV</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1329" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1329" bodyend="1344"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1af11ce373cb255ecc0384a614cc003322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2EP</definition>
        <argsstring>(double C[3][3], double b[4])</argsstring>
        <name>C2EP</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1354" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1354" bodyend="1415"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a15535e5247f1b385f6a6fc0adcfd8ebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2Euler121</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2Euler121</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1421" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1421" bodyend="1426"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a3474036ebe965b629f58d043e1dcf59a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2Euler123</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2Euler123</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1432" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1432" bodyend="1437"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a4f0340b7a796bbbfd1c654a9485303ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2Euler131</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2Euler131</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1443" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1443" bodyend="1448"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a03acd60a654f9fbbbd2286bb6d2a7cc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2Euler132</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2Euler132</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1454" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1454" bodyend="1459"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ade538186db143677d8d3b37a86558546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2Euler212</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2Euler212</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1465" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1465" bodyend="1470"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a3cd96be503202ddffa168657888bbb67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2Euler213</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2Euler213</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1476" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1476" bodyend="1481"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac8ca0d152bd096fb034a1648c4914fab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2Euler231</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2Euler231</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1487" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1487" bodyend="1492"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ae2ef88a57a67542acd6753ba861937b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2Euler232</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2Euler232</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1498" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1498" bodyend="1503"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a7ac5a51761b96fd0369b251b4e893cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2Euler312</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2Euler312</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1509" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1509" bodyend="1514"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1af9e38567044d38339937da0621b9460e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2Euler313</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2Euler313</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1520" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1520" bodyend="1525"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1abe4344051f49e9bf96e54878f795b97c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2Euler321</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2Euler321</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1531" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1531" bodyend="1536"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ad5e652ecf52fd0194942295499dc8a81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2Euler323</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2Euler323</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1542" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1542" bodyend="1547"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a1a9edee454b4a271b9c2982479058a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2Gibbs</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2Gibbs</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1553" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1553" bodyend="1562"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ab5d2448163a1b022ddfa57d4ac056cad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2MRP</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2MRP</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1569" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1569" bodyend="1580"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a9286b1610cd09a8825168e01d9621a82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void C2PRV</definition>
        <argsstring>(double C[3][3], double *q)</argsstring>
        <name>C2PRV</name>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1588" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1588" bodyend="1594"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a4396f393559bacc302793513a38555ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dEP</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dEP</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1603" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1603" bodyend="1619"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1af7c3cdb82e33aa760ca211bc36548041" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dEuler121</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dEuler121</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1628" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1628" bodyend="1634"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a0a58f3073e869a235b1ec2ea7cf62977" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dEuler123</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dEuler123</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1643" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1643" bodyend="1649"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a70e88cc7a29e28bdeed832ad6f8aa4cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dEuler131</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dEuler131</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1658" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1658" bodyend="1664"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a94804a78cefdcc6eba1046e20816a51f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dEuler132</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dEuler132</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1673" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1673" bodyend="1679"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a99019465b1dfe83f2f6a589cd1092589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dEuler212</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dEuler212</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1688" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1688" bodyend="1694"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a8b912af6201fa1adddca8b344e79f52f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dEuler213</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dEuler213</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1703" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1703" bodyend="1709"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aa075d1e13cb3cb392513155d658ceeff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dEuler231</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dEuler231</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1718" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1718" bodyend="1724"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aa965df45f1036e3d6bd155c524b3170a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dEuler232</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dEuler232</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1733" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1733" bodyend="1739"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a8fbd3cf6b16074059804c58b08a8c57c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dEuler312</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dEuler312</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1748" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1748" bodyend="1754"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a5a34145c3f31d66f4207b86b391333b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dEuler313</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dEuler313</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1763" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1763" bodyend="1769"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a39cfd87635e9578e20d3266e4665cdb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dEuler321</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dEuler321</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1778" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1778" bodyend="1784"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a86216989516bd28e3c894f950f372db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dEuler323</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dEuler323</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1793" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1793" bodyend="1799"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ab82a4c22d2af059406173c21ce19c61e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dGibbs</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dGibbs</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1808" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1808" bodyend="1815"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ab5efb6263245de2c374599b0baa9ff88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dMRP</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dMRP</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1824" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1824" bodyend="1831"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a06b48926da108daaddf89b5a2eba79b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dMRP2Omega</definition>
        <argsstring>(double *q, double *dq, double *w)</argsstring>
        <name>dMRP2Omega</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1840" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1840" bodyend="1847"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a323d489684595e1a106cbf82c1ce00b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ddMRP</definition>
        <argsstring>(double *q, double *dq, double *w, double *dw, double *ddq)</argsstring>
        <name>ddMRP</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ddq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1856" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1856" bodyend="1869"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a48ce96eaf2e3307ec4dd727ec4ceae75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ddMRP2dOmega</definition>
        <argsstring>(double *q, double *dq, double *ddq, double *dw)</argsstring>
        <name>ddMRP2dOmega</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ddq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1878" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1878" bodyend="1893"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a83acfbe58cab81739b00b9432af77fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dPRV</definition>
        <argsstring>(double *q, double *w, double *dq)</argsstring>
        <name>dPRV</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1902" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1902" bodyend="1908"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a227aa65e8f4d23bedbab4e58a3a8c988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void elem2PRV</definition>
        <argsstring>(double *r, double *q)</argsstring>
        <name>elem2PRV</name>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1915" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1915" bodyend="1920"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aa9c315997d4ebe85629ba98dae42f766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>EP2C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1929" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1929" bodyend="1950"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a7147fbbbd7e76ceb7060be12c3a6a426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2Euler121</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>EP2Euler121</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1957" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1957" bodyend="1968"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a72243dd89a5dee912a592e2c422939cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2Euler123</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>EP2Euler123</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1974" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1974" bodyend="1989"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1af144bd30c888f739c2b52472271fa733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2Euler131</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>EP2Euler131</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="1996" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="1996" bodyend="2007"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a2b1f0b6d6d2b05d84437cf6e17ed298d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2Euler132</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>EP2Euler132</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2013" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2013" bodyend="2028"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a784683535ecadf10669d17a3fd3e1b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2Euler212</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>EP2Euler212</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2035" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2035" bodyend="2046"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aebb01ca7add70c864ffad1e57c6bd0c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2Euler213</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>EP2Euler213</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2052" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2052" bodyend="2067"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1af0c6730735743d85740f9c75d8989f9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2Euler231</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>EP2Euler231</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2073" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2073" bodyend="2088"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a7f4810d2c076ff44b0fe47dcf73d84ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2Euler232</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>EP2Euler232</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2095" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2095" bodyend="2106"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a61575d6499dd29a58f0c285d765a9e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2Euler312</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>EP2Euler312</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2112" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2112" bodyend="2127"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ae2f8d77e5fdc002ee33a799424ac21aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2Euler313</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>EP2Euler313</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2134" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2134" bodyend="2145"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1afdaba0f60bf2184f7476055dc477a1c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2Euler321</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>EP2Euler321</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2151" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2151" bodyend="2166"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a583836314eddafa350263633823d5091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2Euler323</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>EP2Euler323</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2173" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2173" bodyend="2184"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a991fd0a591701d7d9c663d51ebe4dce2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2Gibbs</definition>
        <argsstring>(double *q1, double *q)</argsstring>
        <name>EP2Gibbs</name>
        <param>
          <type>double *</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2190" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2190" bodyend="2195"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ab9cc43f373776d8e94b6d702e8272a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2MRP</definition>
        <argsstring>(double *q1, double *q)</argsstring>
        <name>EP2MRP</name>
        <param>
          <type>double *</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2201" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2201" bodyend="2212"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a0e943c6c22a722bef6f709e92e0345a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EP2PRV</definition>
        <argsstring>(double *q1, double *q)</argsstring>
        <name>EP2PRV</name>
        <param>
          <type>double *</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2218" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2218" bodyend="2234"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a17fa4b78fa93aaff5be32861938962ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1</definition>
        <argsstring>(double x, double m[3][3])</argsstring>
        <name>Euler1</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2241" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2241" bodyend="2248"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a371fdea5ce6423c270cc79fdd1651647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2</definition>
        <argsstring>(double x, double m[3][3])</argsstring>
        <name>Euler2</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2255" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2255" bodyend="2262"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a0b45b3b19ee0e6950fdaca361ea18454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3</definition>
        <argsstring>(double x, double m[3][3])</argsstring>
        <name>Euler3</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2269" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2269" bodyend="2276"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a232c6d532a60b04aa5a0465b3ae85bb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1212C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>Euler1212C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2283" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2283" bodyend="2308"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a7240c9662bcddb96611d8d725be902d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1212EP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1212EP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2314" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2314" bodyend="2328"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ae7fb7dee1a8e98b7f8dd970c5059edf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1212Gibbs</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1212Gibbs</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2334" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2334" bodyend="2340"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a37be7c7c56d94b400854e82807ce781a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1212MRP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1212MRP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2346" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2346" bodyend="2352"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a39449e2f82bd31d5a0153d3996115d62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1212PRV</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1212PRV</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2358" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2358" bodyend="2364"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a3ba156b4f1319dd770d80102a3b222c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1232C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>Euler1232C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2371" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2371" bodyend="2396"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ae5653164ab59d5670a341e3f077d6055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1232EP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1232EP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2402" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2402" bodyend="2422"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aa5a05a3cfbc4e768e3950599784b31d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1232Gibbs</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1232Gibbs</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2428" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2428" bodyend="2434"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1af75114b10c97beb4ceef58c02e61681c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1232MRP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1232MRP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2440" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2440" bodyend="2446"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a807de142184dad4f1073b7fa01c63bf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1232PRV</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1232PRV</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2452" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2452" bodyend="2458"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a4e2f958e0c715b591dcb5d7f93d2004d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1312C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>Euler1312C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2465" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2465" bodyend="2490"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac7a911e787ed6e6721635451faf7e7b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1312EP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1312EP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2496" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2496" bodyend="2510"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a908c98ba80ac14fdaf791a114bc3a007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1312Gibbs</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1312Gibbs</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2516" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2516" bodyend="2522"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aa5ad7d9b2d9ed48f193cbbb9a43174f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1312MRP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1312MRP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2528" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2528" bodyend="2534"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a1fca883438b18d88cfc79a6aa2088b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1312PRV</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1312PRV</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2540" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2540" bodyend="2546"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a609650b953e88a0c53323aa173b0adde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1322C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>Euler1322C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2553" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2553" bodyend="2578"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ae6b53854edd0ff3c35325ca5d5b35507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1322EP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1322EP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2584" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2584" bodyend="2604"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a374e24b8724864561b231930ea1a3422" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1322Gibbs</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1322Gibbs</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2610" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2610" bodyend="2616"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a4dbe43a5f5d25652ce33904630199aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1322MRP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1322MRP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2622" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2622" bodyend="2628"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac594b1f327e279782e0fb66972c07359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler1322PRV</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler1322PRV</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2634" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2634" bodyend="2640"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a909737eb3a64695c014e85b3fe15d756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2122C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>Euler2122C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2647" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2647" bodyend="2672"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ad292f0b40f2999d67faf45e3d5499aeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2122EP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2122EP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2678" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2678" bodyend="2692"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a140002a7638bcb14c6b4f0990acc5658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2122Gibbs</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2122Gibbs</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2698" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2698" bodyend="2704"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a46d5676f30b7e13ff8f710ddf53afcd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2122MRP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2122MRP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2710" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2710" bodyend="2716"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a69b95513d90caca6ac9c3e9711ec8e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2122PRV</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2122PRV</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2722" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2722" bodyend="2728"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a61bcfaa8f3297d565c7a3e4d3485bbe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2132C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>Euler2132C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2735" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2735" bodyend="2760"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a7af17820e0dde2bf4af80156874b9b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2132EP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2132EP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2766" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2766" bodyend="2786"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a01156b803ec51fa8d191693834a3823a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2132Gibbs</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2132Gibbs</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2792" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2792" bodyend="2798"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac729e0b99535c354e55e1f651a69b8a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2132MRP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2132MRP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2804" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2804" bodyend="2810"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a1b5ae9420c8eae7bbc415a23ca3f5d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2132PRV</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2132PRV</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2816" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2816" bodyend="2822"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ab77f3fb6718894b96e7bf5afc4e31bb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2312C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>Euler2312C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2829" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2829" bodyend="2854"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a7fdd5f18769ffc6fdbde7383427193f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2312EP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2312EP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2860" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2860" bodyend="2880"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a2b03a2437db7660f40274816b35385fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2312Gibbs</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2312Gibbs</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2886" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2886" bodyend="2892"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1af0278fe3d42a1e8fb67e005fb895f42f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2312MRP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2312MRP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2898" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2898" bodyend="2904"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1adc7b820e82628f4078adc7c135dc2134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2312PRV</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2312PRV</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2910" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2910" bodyend="2916"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac02dfad88e0165dd04d88fa3bd51f511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2322C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>Euler2322C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2923" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2923" bodyend="2948"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1abde5bf47070b29e148f65984cc1d46fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2322EP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2322EP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2954" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2954" bodyend="2968"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a30fc9518a69ac0ee25ebb2f973aaef09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2322Gibbs</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2322Gibbs</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2974" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2974" bodyend="2980"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a576a2878c9335cd75c67c0d97f42e67b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2322MRP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2322MRP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2986" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2986" bodyend="2992"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a48be83d63bdd6752f8f5dfd5949396db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler2322PRV</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler2322PRV</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="2998" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="2998" bodyend="3004"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a02ceba2bb59dbd659c27a2bf21a292ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3122C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>Euler3122C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3011" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3011" bodyend="3036"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a8f4e6af03108e8d97096a4093bb86b40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3122EP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3122EP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3042" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3042" bodyend="3062"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a4003c6b36582edf5d626e035478ad0fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3122Gibbs</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3122Gibbs</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3068" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3068" bodyend="3074"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1afa44201d679f2882bb0dcf54d11dd504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3122MRP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3122MRP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3080" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3080" bodyend="3086"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac228b38d7d781e31d538bf38f3740fe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3122PRV</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3122PRV</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3092" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3092" bodyend="3098"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1abf75d31f4b409a64064c1fb1c653fe64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3132C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>Euler3132C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3105" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3105" bodyend="3130"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1afdec0cc11fe04782d2e13339e8dc1caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3132EP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3132EP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3136" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3136" bodyend="3150"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ad879b4b6f05d1e0eec9d699896a2a564" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3132Gibbs</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3132Gibbs</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3156" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3156" bodyend="3162"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a6ddc94723697040605b0ea3f05bde979" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3132MRP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3132MRP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3168" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3168" bodyend="3174"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a1c2247f53673a77f0112c3b80b1fe8f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3132PRV</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3132PRV</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3180" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3180" bodyend="3186"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a5ade80a15d4959b2434f8f901fa66d87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3212C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>Euler3212C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3193" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3193" bodyend="3218"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a14f48acad990cf506e670fa92b2b40c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3212EP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3212EP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3224" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3224" bodyend="3244"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1afbc957e95ca0e8a318393f5c633a711c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3212Gibbs</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3212Gibbs</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3250" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3250" bodyend="3256"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aabe80f660071f0a98f67de043cb0c355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3212MRP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3212MRP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3262" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3262" bodyend="3268"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aa625b045d3a3f9c52cefa603516c460f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3212PRV</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3212PRV</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3274" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3274" bodyend="3280"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a8b352637ff6db87e1481da4a0b2e995c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3232C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>Euler3232C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3287" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3287" bodyend="3312"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1af2cfe8b313d268b43a7499dcb50eb0a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3232EP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3232EP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3318" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3318" bodyend="3332"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a6903e25827e0dd37b4945b66237e4cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3232Gibbs</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3232Gibbs</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3338" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3338" bodyend="3344"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aef4dfa6a36614a0af1f47e9823d54432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3232MRP</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3232MRP</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3350" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3350" bodyend="3356"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a212f6d7d2f613ecf44a3b454d4210efb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Euler3232PRV</definition>
        <argsstring>(double *e, double *q)</argsstring>
        <name>Euler3232PRV</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3362" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3362" bodyend="3368"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a38638afd4a30a7230fb43583686beec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>Gibbs2C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3374" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3374" bodyend="3396"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a80534e6ecf609a625596bcf88047af9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2EP</definition>
        <argsstring>(double *q1, double *q)</argsstring>
        <name>Gibbs2EP</name>
        <param>
          <type>double *</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3402" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3402" bodyend="3408"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac73cc8de4a8b5d3f9a9aec223e1d9460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2Euler121</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>Gibbs2Euler121</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3414" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3414" bodyend="3420"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a11c2d371ddbada50f342e3abce9b6c03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2Euler123</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>Gibbs2Euler123</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3426" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3426" bodyend="3432"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a93ad64cd95d29be13679a3eb40f8e7a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2Euler131</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>Gibbs2Euler131</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3438" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3438" bodyend="3444"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a86a4f03f1874710d70fa0cf7200bb0ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2Euler132</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>Gibbs2Euler132</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3450" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3450" bodyend="3456"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ae2011c2bf219e3fc30fbcb49b7b61b9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2Euler212</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>Gibbs2Euler212</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3462" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3462" bodyend="3468"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a4514eab684f8eec0db76d51aec007509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2Euler213</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>Gibbs2Euler213</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3474" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3474" bodyend="3480"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a5e6163a653bd9bfbdc0b8a45aa290636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2Euler231</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>Gibbs2Euler231</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3486" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3486" bodyend="3492"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ae9f2c33fca816f77d93aec352a65ba23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2Euler232</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>Gibbs2Euler232</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3498" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3498" bodyend="3504"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a87264ca04d05573689cce48682cdb763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2Euler312</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>Gibbs2Euler312</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3510" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3510" bodyend="3516"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a8c3f21427ce2f3eaa4bd01f34600683c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2Euler313</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>Gibbs2Euler313</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3522" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3522" bodyend="3528"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a8bf3b162d7b2b854624f46dc17dbe255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2Euler321</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>Gibbs2Euler321</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3534" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3534" bodyend="3540"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac5d2709c8c4d580ae7e37ae29356e511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2Euler323</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>Gibbs2Euler323</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3546" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3546" bodyend="3552"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac72435caadd0db4a9192ecb0bcf14193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2MRP</definition>
        <argsstring>(double *q1, double *q)</argsstring>
        <name>Gibbs2MRP</name>
        <param>
          <type>double *</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3558" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3558" bodyend="3561"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a2edb671c94552d9995d9f6b833c93553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gibbs2PRV</definition>
        <argsstring>(double *q1, double *q)</argsstring>
        <name>Gibbs2PRV</name>
        <param>
          <type>double *</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3567" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3567" bodyend="3583"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aeea66335a7f301892151792473668d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>MRP2C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3589" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3589" bodyend="3615"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1af93f65a12b4f796c6e18f3720155ac13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2EP</definition>
        <argsstring>(double *q1, double *q)</argsstring>
        <name>MRP2EP</name>
        <param>
          <type>double *</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3621" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3621" bodyend="3630"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a16f3499261561ba50e2b36b7a2670c67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2Euler121</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>MRP2Euler121</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3636" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3636" bodyend="3642"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a17a3136e60b39d44117686fed8616941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2Euler123</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>MRP2Euler123</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3648" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3648" bodyend="3654"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a4e0653a48fd732cc8e694e4f7737475d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2Euler131</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>MRP2Euler131</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3660" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3660" bodyend="3666"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a3a76ecc215bae14398fe1c99643aa1ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2Euler132</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>MRP2Euler132</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3672" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3672" bodyend="3678"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a66d259445955d53e377581aa753639f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2Euler212</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>MRP2Euler212</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3684" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3684" bodyend="3690"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac619c55bf011e7b56fba764c5b9f04c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2Euler213</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>MRP2Euler213</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3696" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3696" bodyend="3702"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a32dc8e26507b37380b295d0e0c92cc87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2Euler231</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>MRP2Euler231</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3708" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3708" bodyend="3714"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a42a2c2ae1a255e51afc91fd0ca2987e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2Euler232</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>MRP2Euler232</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3720" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3720" bodyend="3726"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a3315a55b4c9de073b0c149d41909ab55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2Euler312</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>MRP2Euler312</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3732" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3732" bodyend="3738"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a14b17f40eff5d74f91094bc2e3592791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2Euler313</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>MRP2Euler313</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3744" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3744" bodyend="3750"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a3dc1ca019b1924912c3bcaab6dc6a0ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2Euler321</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>MRP2Euler321</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3756" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3756" bodyend="3762"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a70e099be6f05912943ab7529fc4a8672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2Euler323</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>MRP2Euler323</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3768" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3768" bodyend="3774"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a547b5b684975b7f8c804c8f9a78b6f65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2Gibbs</definition>
        <argsstring>(double *q1, double *q)</argsstring>
        <name>MRP2Gibbs</name>
        <param>
          <type>double *</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3780" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3780" bodyend="3783"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ab2160cea71477b20a515d63fe2165342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRP2PRV</definition>
        <argsstring>(double *q1, double *q)</argsstring>
        <name>MRP2PRV</name>
        <param>
          <type>double *</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3789" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3789" bodyend="3804"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a36479de2cb1a969536784a47d9d136a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRPswitch</definition>
        <argsstring>(double *q, double s2, double *s)</argsstring>
        <name>MRPswitch</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3810" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3810" bodyend="3820"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a4fc78cc3a2a254b4fe328206222712b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MRPshadow</definition>
        <argsstring>(double *qIn, double *qOut)</argsstring>
        <name>MRPshadow</name>
        <param>
          <type>double *</type>
          <declname>qIn</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>qOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3825" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3825" bodyend="3832"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aa7eb3e2be940338638086a8127d57713" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double wrapToPi</definition>
        <argsstring>(double x)</argsstring>
        <name>wrapToPi</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3837" column="8" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3837" bodyend="3852"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a6c23a0e2810e0427a6b149ece283c7c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2C</definition>
        <argsstring>(double *q, double C[3][3])</argsstring>
        <name>PRV2C</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3859" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3859" bodyend="3892"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a3d83866e46bb622db20f099f62e8fbbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2elem</definition>
        <argsstring>(double *r, double *q)</argsstring>
        <name>PRV2elem</name>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3898" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3898" bodyend="3911"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1abdb123c443cff0c564ff2bf996f4de67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2EP</definition>
        <argsstring>(double *q0, double *q)</argsstring>
        <name>PRV2EP</name>
        <param>
          <type>double *</type>
          <declname>q0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3917" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3917" bodyend="3928"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a358570ca98a554b416cff0da134ab325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2Euler121</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>PRV2Euler121</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3934" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3934" bodyend="3940"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a9ac5e6b1d420d8ba398e600d6c4d4283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2Euler123</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>PRV2Euler123</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3946" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3946" bodyend="3952"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a9ac51363037d3bac91899dabb4193c3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2Euler131</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>PRV2Euler131</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3958" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3958" bodyend="3964"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a58fefebe97c20d60830b91900f6b302e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2Euler132</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>PRV2Euler132</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3970" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3970" bodyend="3976"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a7f36e70291317ac711ab88564bb5812d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2Euler212</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>PRV2Euler212</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3982" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3982" bodyend="3988"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac771f3054c95c1a0995b3e1103646a8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2Euler213</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>PRV2Euler213</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="3994" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="3994" bodyend="4000"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a460228897d7b8b90887370ca6a85970d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2Euler231</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>PRV2Euler231</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4006" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4006" bodyend="4012"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a924aae8563d7afff63c9cbecf11a7317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2Euler232</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>PRV2Euler232</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4018" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4018" bodyend="4024"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a3921f2e153c452aff22d069056192cb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2Euler312</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>PRV2Euler312</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4030" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4030" bodyend="4036"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a65d97eb98c9e37bf232d1650a7dd27ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2Euler313</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>PRV2Euler313</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4042" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4042" bodyend="4048"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a841de1e071b09f7db3a2358db27a3d5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2Euler321</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>PRV2Euler321</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4054" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4054" bodyend="4060"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1abfa4180c892838be97ce01431859efb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2Euler323</definition>
        <argsstring>(double *q, double *e)</argsstring>
        <name>PRV2Euler323</name>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4066" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4066" bodyend="4072"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a1f5c29af166c4df42e2e118dfd46d6cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2Gibbs</definition>
        <argsstring>(double *q0, double *q)</argsstring>
        <name>PRV2Gibbs</name>
        <param>
          <type>double *</type>
          <declname>q0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4078" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4078" bodyend="4088"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1acc459a6f98405df9179b387e729c6932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PRV2MRP</definition>
        <argsstring>(double *q0, double *q)</argsstring>
        <name>PRV2MRP</name>
        <param>
          <type>double *</type>
          <declname>q0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4094" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4094" bodyend="4104"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a398d327371155249a1d1264640713014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subEP</definition>
        <argsstring>(double *b1, double *b2, double *q)</argsstring>
        <name>subEP</name>
        <param>
          <type>double *</type>
          <declname>b1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>b2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4111" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4111" bodyend="4117"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a79546af6c44f2ede30b456fd2f351c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subEuler121</definition>
        <argsstring>(double *e, double *e1, double *e2)</argsstring>
        <name>subEuler121</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4123" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4123" bodyend="4142"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a5f1214790a568b7929e6e6e65c926dde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subEuler123</definition>
        <argsstring>(double *e, double *e1, double *e2)</argsstring>
        <name>subEuler123</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4148" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4148" bodyend="4158"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a5b81bf2a43fff467f8b8acf3cf1dd985" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subEuler131</definition>
        <argsstring>(double *e, double *e1, double *e2)</argsstring>
        <name>subEuler131</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4164" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4164" bodyend="4183"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a271bd4d654c848da8c558241ba2cbee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subEuler132</definition>
        <argsstring>(double *e, double *e1, double *e2)</argsstring>
        <name>subEuler132</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4189" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4189" bodyend="4199"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a5d38495c9c33fc5e1c85ede6b662ae8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subEuler212</definition>
        <argsstring>(double *e, double *e1, double *e2)</argsstring>
        <name>subEuler212</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4205" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4205" bodyend="4224"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a856b785475786aca89099644b9161472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subEuler213</definition>
        <argsstring>(double *e, double *e1, double *e2)</argsstring>
        <name>subEuler213</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4230" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4230" bodyend="4240"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a0df5830b4647f8341cae1eb922068339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subEuler231</definition>
        <argsstring>(double *e, double *e1, double *e2)</argsstring>
        <name>subEuler231</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4246" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4246" bodyend="4256"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ae78a6b55d4badedc6aa7b1894dc184a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subEuler232</definition>
        <argsstring>(double *e, double *e1, double *e2)</argsstring>
        <name>subEuler232</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4262" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4262" bodyend="4281"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aa4d55953b87b63c721c53390d7ea0a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subEuler312</definition>
        <argsstring>(double *e, double *e1, double *e2)</argsstring>
        <name>subEuler312</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4287" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4287" bodyend="4297"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aba151e769c123f140fd829a03c885d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subEuler313</definition>
        <argsstring>(double *e, double *e1, double *e2)</argsstring>
        <name>subEuler313</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4303" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4303" bodyend="4322"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ae07844d09e9b06a8c23c397d67b872a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subEuler321</definition>
        <argsstring>(double *e, double *e1, double *e2)</argsstring>
        <name>subEuler321</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4328" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4328" bodyend="4338"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a495ad9b38ec6bb8ed29f9456ab2ee886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subEuler323</definition>
        <argsstring>(double *e, double *e1, double *e2)</argsstring>
        <name>subEuler323</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4344" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4344" bodyend="4363"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1aee5baa58cd7e09a13f918da56f996cb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subGibbs</definition>
        <argsstring>(double *q1, double *q2, double *q)</argsstring>
        <name>subGibbs</name>
        <param>
          <type>double *</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4370" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4370" bodyend="4378"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a36e3ff5c8e4765969323b2fd00710f1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subMRP</definition>
        <argsstring>(double *q1, double *q2, double *q)</argsstring>
        <name>subMRP</name>
        <param>
          <type>double *</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4385" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4385" bodyend="4414"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a49a8dd0ae7963d31955b872c966899e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void subPRV</definition>
        <argsstring>(double *q10, double *q20, double *q)</argsstring>
        <name>subPRV</name>
        <param>
          <type>double *</type>
          <declname>q10</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q20</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4421" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4421" bodyend="4453"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1ac52bacb2a751ecbb1a43d8f129529122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Mi</definition>
        <argsstring>(double theta, int a, double C[3][3])</argsstring>
        <name>Mi</name>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4459" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4459" bodyend="4507"/>
      </memberdef>
      <memberdef kind="function" id="rigid_body_kinematics_8c_1a58e631dbb6ab80fcbbbfb97ab7a4ffeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tilde</definition>
        <argsstring>(double *v, double mat[3][3])</argsstring>
        <name>tilde</name>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mat</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" line="4512" column="8" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c" bodystart="4512" bodyend="4523"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;astroConstants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/bsk_Print.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>nearZero<sp/>0.0000000000001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>Q<sp/>=<sp/>addEP(B1,B2)<sp/>provides<sp/>the<sp/>Euler<sp/>parameter<sp/>vector</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>which<sp/>corresponds<sp/>to<sp/>performing<sp/>to<sp/>successive</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>rotations<sp/>B1<sp/>and<sp/>B2.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addEP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*b1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*b2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>b2[0]<sp/>*<sp/>b1[0]<sp/>-<sp/>b2[1]<sp/>*<sp/>b1[1]<sp/>-<sp/>b2[2]<sp/>*<sp/>b1[2]<sp/>-<sp/>b2[3]<sp/>*<sp/>b1[3];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>b2[1]<sp/>*<sp/>b1[0]<sp/>+<sp/>b2[0]<sp/>*<sp/>b1[1]<sp/>+<sp/>b2[3]<sp/>*<sp/>b1[2]<sp/>-<sp/>b2[2]<sp/>*<sp/>b1[3];</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>b2[2]<sp/>*<sp/>b1[0]<sp/>-<sp/>b2[3]<sp/>*<sp/>b1[1]<sp/>+<sp/>b2[0]<sp/>*<sp/>b1[2]<sp/>+<sp/>b2[1]<sp/>*<sp/>b1[3];</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>result[3]<sp/>=<sp/>b2[3]<sp/>*<sp/>b1[0]<sp/>+<sp/>b2[2]<sp/>*<sp/>b1[1]<sp/>-<sp/>b2[1]<sp/>*<sp/>b1[2]<sp/>+<sp/>b2[0]<sp/>*<sp/>b1[3];</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>addEuler121(E1,E2,Q)<sp/>computes<sp/>the<sp/>overall<sp/>(1-2-1)<sp/>Euler</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>corresponding<sp/>to<sp/>two<sp/>successive</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>(1-2-1)<sp/>rotations<sp/>E1<sp/>and<sp/>E2.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addEuler121(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp2;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dum;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp3;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(e1[1]);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(e2[1]);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(e1[1]);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>sp2<sp/>=<sp/>sin(e2[1]);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>dum<sp/>=<sp/>e1[2]<sp/>+<sp/>e2[0];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>safeAcos(cp1<sp/>*<sp/>cp2<sp/>-<sp/>sp1<sp/>*<sp/>sp2<sp/>*<sp/>cos(dum));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>cp3<sp/>=<sp/>cos(result[1]);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>wrapToPi(e1[0]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp2<sp/>*<sp/>sin(dum),<sp/>cp2<sp/>-<sp/>cp3<sp/>*<sp/>cp1));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>wrapToPi(e2[2]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp2<sp/>*<sp/>sin(dum),<sp/>cp1<sp/>-<sp/>cp3<sp/>*<sp/>cp2));</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>addEuler131(E1,E2,Q)<sp/>computes<sp/>the<sp/>overall<sp/>(1-3-1)<sp/>Euler</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>corresponding<sp/>to<sp/>two<sp/>successive</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>(1-3-1)<sp/>rotations<sp/>E1<sp/>and<sp/>E2.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addEuler131(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp2;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dum;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp3;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(e1[1]);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(e2[1]);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(e1[1]);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>sp2<sp/>=<sp/>sin(e2[1]);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>dum<sp/>=<sp/>e1[2]<sp/>+<sp/>e2[0];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>safeAcos(cp1<sp/>*<sp/>cp2<sp/>-<sp/>sp1<sp/>*<sp/>sp2<sp/>*<sp/>cos(dum));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>cp3<sp/>=<sp/>cos(result[1]);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>wrapToPi(e1[0]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp2<sp/>*<sp/>sin(dum),<sp/>cp2<sp/>-<sp/>cp3<sp/>*<sp/>cp1));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>wrapToPi(e2[2]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp2<sp/>*<sp/>sin(dum),<sp/>cp1<sp/>-<sp/>cp3<sp/>*<sp/>cp2));</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>addEuler123(E1,E2,Q)<sp/>computes<sp/>the<sp/>overall<sp/>(1-2-3)<sp/>Euler</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>corresponding<sp/>to<sp/>two<sp/>successive</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>(1-2-3)<sp/>rotations<sp/>E1<sp/>and<sp/>E2.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addEuler123(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C1[3][3];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C2[3][3];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1232C(e1,<sp/>C1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1232C(e2,<sp/>C2);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33(C2,<sp/>C1,<sp/>C);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>C2Euler123(C,<sp/>result);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>addEuler132(E1,E2,Q)<sp/>computes<sp/>the<sp/>overall<sp/>(1-3-2)<sp/>Euler</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>corresponding<sp/>to<sp/>two<sp/>successive</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>(1-3-2)<sp/>rotations<sp/>E1<sp/>and<sp/>E2.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addEuler132(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C1[3][3];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C2[3][3];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1322C(e1,<sp/>C1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1322C(e2,<sp/>C2);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33(C2,<sp/>C1,<sp/>C);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>C2Euler132(C,<sp/>result);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>addEuler212(E1,E2,Q)<sp/>computes<sp/>the<sp/>overall<sp/>(2-1-2)<sp/>Euler</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>corresponding<sp/>to<sp/>two<sp/>successive</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>(2-1-2)<sp/>rotations<sp/>E1<sp/>and<sp/>E2.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addEuler212(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp2;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dum;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp3;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(e1[1]);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(e2[1]);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(e1[1]);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>sp2<sp/>=<sp/>sin(e2[1]);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>dum<sp/>=<sp/>e1[2]<sp/>+<sp/>e2[0];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>safeAcos(cp1<sp/>*<sp/>cp2<sp/>-<sp/>sp1<sp/>*<sp/>sp2<sp/>*<sp/>cos(dum));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>cp3<sp/>=<sp/>cos(result[1]);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>wrapToPi(e1[0]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp2<sp/>*<sp/>sin(dum),<sp/>cp2<sp/>-<sp/>cp3<sp/>*<sp/>cp1));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>wrapToPi(e2[2]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp2<sp/>*<sp/>sin(dum),<sp/>cp1<sp/>-<sp/>cp3<sp/>*<sp/>cp2));</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>addEuler213(E1,E2,Q)<sp/>computes<sp/>the<sp/>overall<sp/>(2-1-3)<sp/>Euler</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>corresponding<sp/>to<sp/>two<sp/>successive</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>(2-1-3)<sp/>rotations<sp/>E1<sp/>and<sp/>E2.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addEuler213(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C1[3][3];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C2[3][3];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2132C(e1,<sp/>C1);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2132C(e2,<sp/>C2);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33(C2,<sp/>C1,<sp/>C);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>C2Euler213(C,<sp/>result);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>addEuler231(E1,E2,Q)<sp/>computes<sp/>the<sp/>overall<sp/>(2-3-1)<sp/>Euler</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>corresponding<sp/>to<sp/>two<sp/>successive</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>(2-3-1)<sp/>rotations<sp/>E1<sp/>and<sp/>E2.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addEuler231(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C1[3][3];</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C2[3][3];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2312C(e1,<sp/>C1);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2312C(e2,<sp/>C2);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33(C2,<sp/>C1,<sp/>C);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>C2Euler231(C,<sp/>result);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>addEuler232(E1,E2,Q)<sp/>computes<sp/>the<sp/>overall<sp/>(2-3-2)<sp/>Euler</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>corresponding<sp/>to<sp/>two<sp/>successive</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>(2-3-2)<sp/>rotations<sp/>E1<sp/>and<sp/>E2.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addEuler232(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp2;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dum;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp3;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(e1[1]);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(e2[1]);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(e1[1]);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>sp2<sp/>=<sp/>sin(e2[1]);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>dum<sp/>=<sp/>e1[2]<sp/>+<sp/>e2[0];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>safeAcos(cp1<sp/>*<sp/>cp2<sp/>-<sp/>sp1<sp/>*<sp/>sp2<sp/>*<sp/>cos(dum));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>cp3<sp/>=<sp/>cos(result[1]);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>wrapToPi(e1[0]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp2<sp/>*<sp/>sin(dum),<sp/>cp2<sp/>-<sp/>cp3<sp/>*<sp/>cp1));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>wrapToPi(e2[2]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp2<sp/>*<sp/>sin(dum),<sp/>cp1<sp/>-<sp/>cp3<sp/>*<sp/>cp2));</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>addEuler312(E1,E2,Q)<sp/>computes<sp/>the<sp/>overall<sp/>(3-1-2)<sp/>Euler</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>corresponding<sp/>to<sp/>two<sp/>successive</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>(3-1-2)<sp/>rotations<sp/>E1<sp/>and<sp/>E2.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addEuler312(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C1[3][3];</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C2[3][3];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3122C(e1,<sp/>C1);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3122C(e2,<sp/>C2);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33(C2,<sp/>C1,<sp/>C);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>C2Euler312(C,<sp/>result);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/>addEuler313(E1,E2,Q)<sp/>computes<sp/>the<sp/>overall<sp/>(3-1-3)<sp/>Euler</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>corresponding<sp/>to<sp/>two<sp/>successive</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>(3-1-3)<sp/>rotations<sp/>E1<sp/>and<sp/>E2.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addEuler313(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp2;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dum;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp3;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(e1[1]);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(e2[1]);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(e1[1]);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>sp2<sp/>=<sp/>sin(e2[1]);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>dum<sp/>=<sp/>e1[2]<sp/>+<sp/>e2[0];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>safeAcos(cp1<sp/>*<sp/>cp2<sp/>-<sp/>sp1<sp/>*<sp/>sp2<sp/>*<sp/>cos(dum));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>cp3<sp/>=<sp/>cos(result[1]);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>wrapToPi(e1[0]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp2<sp/>*<sp/>sin(dum),<sp/>cp2<sp/>-<sp/>cp3<sp/>*<sp/>cp1));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>wrapToPi(e2[2]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp2<sp/>*<sp/>sin(dum),<sp/>cp1<sp/>-<sp/>cp3<sp/>*<sp/>cp2));</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*<sp/>addEuler321(E1,E2,Q)<sp/>computes<sp/>the<sp/>overall<sp/>(3-2-1)<sp/>Euler</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>corresponding<sp/>to<sp/>two<sp/>successive</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/>(3-2-1)<sp/>rotations<sp/>E1<sp/>and<sp/>E2.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addEuler321(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C1[3][3];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C2[3][3];</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3212C(e1,<sp/>C1);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3212C(e2,<sp/>C2);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33(C2,<sp/>C1,<sp/>C);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>C2Euler321(C,<sp/>result);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>addEuler323(E1,E2,Q)<sp/>computes<sp/>the<sp/>overall<sp/>(3-2-3)<sp/>Euler</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>corresponding<sp/>to<sp/>two<sp/>successive</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>(3-2-3)<sp/>rotations<sp/>E1<sp/>and<sp/>E2.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addEuler323(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp2;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dum;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp3;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(e1[1]);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(e2[1]);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(e1[1]);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>sp2<sp/>=<sp/>sin(e2[1]);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>dum<sp/>=<sp/>e1[2]<sp/>+<sp/>e2[0];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>safeAcos(cp1<sp/>*<sp/>cp2<sp/>-<sp/>sp1<sp/>*<sp/>sp2<sp/>*<sp/>cos(dum));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>cp3<sp/>=<sp/>cos(result[1]);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>wrapToPi(e1[0]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp2<sp/>*<sp/>sin(dum),<sp/>cp2<sp/>-<sp/>cp3<sp/>*<sp/>cp1));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>wrapToPi(e2[2]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp2<sp/>*<sp/>sin(dum),<sp/>cp1<sp/>-<sp/>cp3<sp/>*<sp/>cp2));</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>Q<sp/>=<sp/>addGibbs(Q1,Q2)<sp/>provides<sp/>the<sp/>Gibbs<sp/>vector</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/>which<sp/>corresponds<sp/>to<sp/>performing<sp/>to<sp/>successive</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>rotations<sp/>Q1<sp/>and<sp/>Q2.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addGibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v1[3];</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v2[3];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(q1,<sp/>q2,<sp/>v1);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(q2,<sp/>v1,<sp/>v2);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(q1,<sp/>v2,<sp/>v1);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(1.<sp/>/<sp/>(1.<sp/>-<sp/>v3Dot(q1,<sp/>q2)),<sp/>v1,<sp/>result);</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>addMRP(Q1,Q2,Q)<sp/>provides<sp/>the<sp/>MRP<sp/>vector</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>which<sp/>corresponds<sp/>to<sp/>performing<sp/>to<sp/>successive</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>rotations<sp/>Q1<sp/>and<sp/>Q2.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addMRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v1[3];</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v2[3];</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1[3];</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mag;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(q1,<sp/>s1);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>det<sp/>=<sp/>(1<sp/>+<sp/>v3Dot(s1,<sp/>s1)*v3Dot(q2,<sp/>q2)<sp/>-<sp/>2<sp/>*<sp/>v3Dot(s1,<sp/>q2));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(det)<sp/>&lt;<sp/>0.1)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mag<sp/>=<sp/>v3Dot(s1,<sp/>s1);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Scale(-1./mag,<sp/>s1,<sp/>s1);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det<sp/>=<sp/>(1<sp/>+<sp/>v3Dot(s1,<sp/>s1)*v3Dot(q2,<sp/>q2)<sp/>-<sp/>2<sp/>*<sp/>v3Dot(s1,<sp/>q2));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(s1,<sp/>q2,<sp/>v1);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(2.,<sp/>v1,<sp/>v2);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(1<sp/>-<sp/>v3Dot(q2,<sp/>q2),<sp/>s1,<sp/>result);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(result,<sp/>v2,<sp/>result);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(1<sp/>-<sp/>v3Dot(s1,<sp/>s1),<sp/>q2,<sp/>v1);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(result,<sp/>v1,<sp/>result);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(1<sp/>/<sp/>det,<sp/>result,<sp/>result);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>map<sp/>MRP<sp/>to<sp/>inner<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>mag<sp/>=<sp/>v3Dot(result,<sp/>result);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mag<sp/>&gt;<sp/>1.0){</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Scale(-1./mag,<sp/>result,<sp/>result);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/>addPRV(Q1,Q2,Q)<sp/>provides<sp/>the<sp/>principal<sp/>rotation<sp/>vector</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/>which<sp/>corresponds<sp/>to<sp/>performing<sp/>to<sp/>successive</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*<sp/>prinicipal<sp/>rotations<sp/>Q1<sp/>and<sp/>Q2.</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addPRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*qq1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*qq2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp2;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e1[3];</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e2[3];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>compSum[3];</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1[4];</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2[4];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(qq1,<sp/>qq2,<sp/>compSum);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((v3Norm(qq1)<sp/>&lt;<sp/>1.0E-7<sp/>||<sp/>v3Norm(qq2)<sp/>&lt;<sp/>1.0E-7))</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Add(qq1,<sp/>qq2,<sp/>result);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2elem(qq1,<sp/>q1);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2elem(qq2,<sp/>q2);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(q1[0]<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(q2[0]<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(q1[0]<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>sp2<sp/>=<sp/>sin(q2[0]<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Set(q1[1],<sp/>q1[2],<sp/>q1[3],<sp/>e1);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Set(q2[1],<sp/>q2[2],<sp/>q2[3],<sp/>e2);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>2<sp/>*<sp/>safeAcos(cp1<sp/>*<sp/>cp2<sp/>-<sp/>sp1<sp/>*<sp/>sp2<sp/>*<sp/>v3Dot(e1,<sp/>e2));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(p)<sp/>&lt;<sp/>1.0E-13)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3SetZero(result);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>sin(p<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(cp1<sp/>*<sp/>sp2,<sp/>e2,<sp/>q1);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(cp2<sp/>*<sp/>sp1,<sp/>e1,<sp/>q2);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(q1,<sp/>q2,<sp/>result);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(e1,<sp/>e2,<sp/>q1);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(sp1<sp/>*<sp/>sp2,<sp/>q1,<sp/>q2);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(result,<sp/>q2,<sp/>result);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(p<sp/>/<sp/>sp,<sp/>result,<sp/>result);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/>BinvEP(Q,B)<sp/>returns<sp/>the<sp/>3x4<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>2<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvEP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][4])</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>-q[1];</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>q[3];</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][3]<sp/>=<sp/>-q[2];</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>-q[2];</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>-q[3];</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][3]<sp/>=<sp/>q[1];</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>-q[3];</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>q[2];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>-q[1];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][3]<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*<sp/>BinvEuler121(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>the<sp/>(1-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvEuler121(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>-s3;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>*<sp/>BinvEuler123(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>the<sp/>(1-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvEuler123(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>-c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*<sp/>BinvEuler131(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>the<sp/>(1-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvEuler131(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>-s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/>*<sp/>BinvEuler132(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>the<sp/>(1-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvEuler132(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>-s3;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>-s2;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/>*<sp/>BinvEuler212(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>the<sp/>(2-1-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvEuler212(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>-s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*<sp/>BinvEuler213(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>the<sp/>(2-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvEuler213(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>-s3;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>-s2;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*<sp/>BinvEuler231(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>the<sp/>(2-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvEuler231(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>-c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*<sp/>BinvEuler232(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>the<sp/>(2-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvEuler232(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>-s3;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/>*<sp/>BinvEuler323(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>the<sp/>(3-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="673"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvEuler323(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>-s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/>*<sp/>BinvEuler313(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>the<sp/>(3-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvEuler313(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="705"><highlight class="normal">{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>-s3;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/>*<sp/>BinvEuler321(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>the<sp/>(3-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvEuler321(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>-s2;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>-s3;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/>*<sp/>BinvEuler312(Q)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>the<sp/>(3-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="761"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvEuler312(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>-c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/>*<sp/>BinvGibbs(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>Gibbs<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>2<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvGibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>q[2];</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>-q[1];</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>-q[2];</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>q[1];</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>-q[0];</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>(1<sp/>+<sp/>v3Dot(q,<sp/>q)),<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="809"><highlight class="comment">*<sp/>BinvMRP(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="810"><highlight class="comment">*<sp/>the<sp/>derivative<sp/>of<sp/>MRP<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="811"><highlight class="comment">*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="812"><highlight class="comment">*</highlight></codeline>
<codeline lineno="813"><highlight class="comment">*<sp/>w<sp/>=<sp/>4<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="814"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvMRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="816"><highlight class="normal">{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>v3Dot(q,<sp/>q);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>1<sp/>-<sp/>s2<sp/>+<sp/>2<sp/>*<sp/>q[0]<sp/>*<sp/>q[0];</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>2<sp/>*<sp/>(q[0]<sp/>*<sp/>q[1]<sp/>+<sp/>q[2]);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>2<sp/>*<sp/>(q[0]<sp/>*<sp/>q[2]<sp/>-<sp/>q[1]);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>2<sp/>*<sp/>(q[1]<sp/>*<sp/>q[0]<sp/>-<sp/>q[2]);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>1<sp/>-<sp/>s2<sp/>+<sp/>2<sp/>*<sp/>q[1]<sp/>*<sp/>q[1];</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>2<sp/>*<sp/>(q[1]<sp/>*<sp/>q[2]<sp/>+<sp/>q[0]);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>2<sp/>*<sp/>(q[2]<sp/>*<sp/>q[0]<sp/>+<sp/>q[1]);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>2<sp/>*<sp/>(q[2]<sp/>*<sp/>q[1]<sp/>-<sp/>q[0]);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>1<sp/>-<sp/>s2<sp/>+<sp/>2<sp/>*<sp/>q[2]<sp/>*<sp/>q[2];</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>(1<sp/>+<sp/>s2)<sp/>/<sp/>(1<sp/>+<sp/>s2),<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/>*<sp/>BinvPRV(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/>*<sp/>the<sp/>derivative<sp/>of<sp/>principal<sp/>rotation<sp/>vector<sp/>Q<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="835"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="837"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinvPRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="840"><highlight class="normal">{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>sqrt(v3Dot(q,<sp/>q));</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>(1<sp/>-<sp/>cos(p))<sp/>/<sp/>p<sp/>/<sp/>p;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>(p<sp/>-<sp/>sin(p))<sp/>/<sp/>p<sp/>/<sp/>p<sp/>/<sp/>p;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>1<sp/>-<sp/>c2<sp/>*<sp/>(q[1]<sp/>*<sp/>q[1]<sp/>+<sp/>q[2]<sp/>*<sp/>q[2]);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>c1<sp/>*<sp/>q[2]<sp/>+<sp/>c2<sp/>*<sp/>q[0]<sp/>*<sp/>q[1];</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>-c1<sp/>*<sp/>q[1]<sp/>+<sp/>c2<sp/>*<sp/>q[0]<sp/>*<sp/>q[2];</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>-c1<sp/>*<sp/>q[2]<sp/>+<sp/>c2<sp/>*<sp/>q[0]<sp/>*<sp/>q[1];</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>1<sp/>-<sp/>c2<sp/>*<sp/>(q[0]<sp/>*<sp/>q[0]<sp/>+<sp/>q[2]<sp/>*<sp/>q[2]);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>c1<sp/>*<sp/>q[0]<sp/>+<sp/>c2<sp/>*<sp/>q[1]<sp/>*<sp/>q[2];</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>c1<sp/>*<sp/>q[1]<sp/>+<sp/>c2<sp/>*<sp/>q[2]<sp/>*<sp/>q[0];</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>-c1<sp/>*<sp/>q[0]<sp/>+<sp/>c2<sp/>*<sp/>q[2]<sp/>*<sp/>q[1];</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>1<sp/>-<sp/>c2<sp/>*<sp/>(q[0]<sp/>*<sp/>q[0]<sp/>+<sp/>q[1]<sp/>*<sp/>q[1]);</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/>*<sp/>BmatEP(Q,B)<sp/>returns<sp/>the<sp/>4x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/>*<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>1/2<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatEP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[4][3])</highlight></codeline>
<codeline lineno="868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>-q[1];</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>-q[2];</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>-q[3];</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>-q[3];</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>q[2];</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>q[3];</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>-q[1];</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>B[3][0]<sp/>=<sp/>-q[2];</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>B[3][1]<sp/>=<sp/>q[1];</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>B[3][2]<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/>*<sp/>BmatEuler121(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/>*<sp/>(1-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="888"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="889"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatEuler121(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="891"><highlight class="normal">{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>-s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>-c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>-c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>s2,<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="915"><highlight class="comment"><sp/>*<sp/>BmatEuler131(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="916"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="917"><highlight class="comment"><sp/>*<sp/>(1-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="920"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatEuler131(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="922"><highlight class="normal">{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>-c3;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>-c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>s2,<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/>*<sp/>BmatEuler123(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/>*<sp/>(1-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatEuler123(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>-s3;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>-s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>c2,<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/>*<sp/>BmatEuler132(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="978"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/>*<sp/>(1-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatEuler132(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>-c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>c2,<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/>*<sp/>BmatEuler212(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/>*<sp/>(2-1-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatEuler212(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>-c3;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>-c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>s2,<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1039"><highlight class="comment"><sp/>*<sp/>BmatEuler213(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="1040"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="1041"><highlight class="comment"><sp/>*<sp/>(2-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1042"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1043"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1044"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatEuler213(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>-c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>c2,<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1070"><highlight class="comment"><sp/>*<sp/>BmatEuler231(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="1071"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="1072"><highlight class="comment"><sp/>*<sp/>(2-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1073"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1074"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1075"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatEuler231(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>-s3;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>-s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>c2,<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/>*<sp/>B<sp/>=<sp/>BmatEuler232(Q)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="1102"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="1103"><highlight class="comment"><sp/>*<sp/>(2-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatEuler232(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>-s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>-c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>-c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>s2,<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1132"><highlight class="comment"><sp/>*<sp/>BmatEuler312(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="1133"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="1134"><highlight class="comment"><sp/>*<sp/>(3-1-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1135"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1136"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1137"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatEuler312(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>-s3;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>-s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>c2,<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1163"><highlight class="comment"><sp/>*<sp/>BmatEuler313(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="1164"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="1165"><highlight class="comment"><sp/>*<sp/>(3-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1166"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1167"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1168"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatEuler313(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>c3<sp/>*<sp/>s2;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>-s3<sp/>*<sp/>s2;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>-s3<sp/>*<sp/>c2;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>-c3<sp/>*<sp/>c2;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>s2,<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1194"><highlight class="comment"><sp/>*<sp/>BmatEuler321(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="1195"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="1196"><highlight class="comment"><sp/>*<sp/>(3-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1197"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1198"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1199"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatEuler321(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>-c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>c2,<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1225"><highlight class="comment"><sp/>*<sp/>BmatEuler323(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="1226"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="1227"><highlight class="comment"><sp/>*<sp/>(3-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1228"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1229"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1230"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatEuler323(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>-c3;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>s3;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>c2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>-c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>s2,<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/>*<sp/>BmatGibbs(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="1257"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="1258"><highlight class="comment"><sp/>*<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>1/2<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatGibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>1<sp/>+<sp/>q[0]<sp/>*<sp/>q[0];</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>q[0]<sp/>*<sp/>q[1]<sp/>-<sp/>q[2];</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>q[0]<sp/>*<sp/>q[2]<sp/>+<sp/>q[1];</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>q[1]<sp/>*<sp/>q[0]<sp/>+<sp/>q[2];</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>1<sp/>+<sp/>q[1]<sp/>*<sp/>q[1];</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>q[1]<sp/>*<sp/>q[2]<sp/>-<sp/>q[0];</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>q[2]<sp/>*<sp/>q[0]<sp/>-<sp/>q[1];</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>q[2]<sp/>*<sp/>q[1]<sp/>+<sp/>q[0];</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>1<sp/>+<sp/>q[2]<sp/>*<sp/>q[2];</highlight></codeline>
<codeline lineno="1273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1276"><highlight class="comment"><sp/>*<sp/>BmatMRP(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="1277"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="1278"><highlight class="comment"><sp/>*<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1279"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1280"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>1/4<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1281"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatMRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="1283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>v3Dot(q,<sp/>q);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>1<sp/>-<sp/>s2<sp/>+<sp/>2<sp/>*<sp/>q[0]<sp/>*<sp/>q[0];</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>2<sp/>*<sp/>(q[0]<sp/>*<sp/>q[1]<sp/>-<sp/>q[2]);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>2<sp/>*<sp/>(q[0]<sp/>*<sp/>q[2]<sp/>+<sp/>q[1]);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>2<sp/>*<sp/>(q[1]<sp/>*<sp/>q[0]<sp/>+<sp/>q[2]);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>1<sp/>-<sp/>s2<sp/>+<sp/>2<sp/>*<sp/>q[1]<sp/>*<sp/>q[1];</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>2<sp/>*<sp/>(q[1]<sp/>*<sp/>q[2]<sp/>-<sp/>q[0]);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>2<sp/>*<sp/>(q[2]<sp/>*<sp/>q[0]<sp/>-<sp/>q[1]);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>2<sp/>*<sp/>(q[2]<sp/>*<sp/>q[1]<sp/>+<sp/>q[0]);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>1<sp/>-<sp/>s2<sp/>+<sp/>2<sp/>*<sp/>q[2]<sp/>*<sp/>q[2];</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1299"><highlight class="comment"><sp/>*<sp/>BdotmatMRP(Q,dQ,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>derivative<sp/>of<sp/></highlight></codeline>
<codeline lineno="1300"><highlight class="comment"><sp/>*<sp/>the<sp/>BmatMRP<sp/>matrix,<sp/>and<sp/>it<sp/>is<sp/>used<sp/>to<sp/>relate<sp/>the<sp/></highlight></codeline>
<codeline lineno="1301"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>acceleration<sp/>vector<sp/>dw<sp/>to<sp/>the<sp/>second<sp/>order<sp/></highlight></codeline>
<codeline lineno="1302"><highlight class="comment"><sp/>*<sp/>derivative<sp/>of<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1303"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1304"><highlight class="comment"><sp/>*<sp/>(d^2Q)/(dt^2)<sp/>=<sp/>1/4<sp/>(<sp/>[B(Q)]<sp/>dw<sp/>+<sp/>[Bdot(Q,dQ)]<sp/>w<sp/>)</highlight></codeline>
<codeline lineno="1305"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BdotmatMRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="1307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>-2<sp/>*<sp/>v3Dot(q,<sp/>dq);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>s<sp/>+<sp/>4<sp/>*<sp/>(<sp/>q[0]<sp/>*<sp/>dq[0]<sp/>);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>2<sp/>*<sp/>(-dq[2]<sp/>+<sp/>q[0]<sp/>*<sp/>dq[1]<sp/>+<sp/>dq[0]<sp/>*<sp/>q[1]<sp/>);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>2<sp/>*<sp/>(<sp/>dq[1]<sp/>+<sp/>q[0]<sp/>*<sp/>dq[2]<sp/>+<sp/>dq[0]<sp/>*<sp/>q[2]<sp/>);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>2<sp/>*<sp/>(<sp/>dq[2]<sp/>+<sp/>q[0]<sp/>*<sp/>dq[1]<sp/>+<sp/>dq[0]<sp/>*<sp/>q[1]<sp/>);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>s<sp/>+<sp/>4<sp/>*<sp/>(<sp/>q[1]<sp/>*<sp/>dq[1]<sp/>);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>2<sp/>*<sp/>(-dq[0]<sp/>+<sp/>q[1]<sp/>*<sp/>dq[2]<sp/>+<sp/>dq[1]<sp/>*<sp/>q[2]<sp/>);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>2<sp/>*<sp/>(-dq[1]<sp/>+<sp/>q[0]<sp/>*<sp/>dq[2]<sp/>+<sp/>dq[0]<sp/>*<sp/>q[2]<sp/>);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>2<sp/>*<sp/>(<sp/>dq[0]<sp/>+<sp/>q[1]<sp/>*<sp/>dq[2]<sp/>+<sp/>dq[1]<sp/>*<sp/>q[2]<sp/>);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>s<sp/>+<sp/>4<sp/>*<sp/>(<sp/>q[2]<sp/>*<sp/>dq[2]<sp/>);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/>*<sp/>BmatPRV(Q,B)<sp/>returns<sp/>the<sp/>3x3<sp/>matrix<sp/>which<sp/>relates<sp/>the</highlight></codeline>
<codeline lineno="1324"><highlight class="comment"><sp/>*<sp/>body<sp/>angular<sp/>velocity<sp/>vector<sp/>w<sp/>to<sp/>the<sp/>derivative<sp/>of</highlight></codeline>
<codeline lineno="1325"><highlight class="comment"><sp/>*<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1326"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BmatPRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3])</highlight></codeline>
<codeline lineno="1330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>v3Norm(q);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>1.<sp/>/<sp/>p<sp/>/<sp/>p<sp/>*<sp/>(1.<sp/>-<sp/>p<sp/>/<sp/>2.<sp/>/<sp/>tan(p<sp/>/<sp/>2.));</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>1<sp/>-<sp/>c<sp/>*<sp/>(q[1]<sp/>*<sp/>q[1]<sp/>+<sp/>q[2]<sp/>*<sp/>q[2]);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>-q[2]<sp/>/<sp/>2<sp/>+<sp/>c<sp/>*<sp/>(q[0]<sp/>*<sp/>q[1]);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>q[1]<sp/>/<sp/>2<sp/>+<sp/>c<sp/>*<sp/>(q[0]<sp/>*<sp/>q[2]);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>q[2]<sp/>/<sp/>2<sp/>+<sp/>c<sp/>*<sp/>(q[0]<sp/>*<sp/>q[1]);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>1<sp/>-<sp/>c<sp/>*<sp/>(q[0]<sp/>*<sp/>q[0]<sp/>+<sp/>q[2]<sp/>*<sp/>q[2]);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>-q[0]<sp/>/<sp/>2<sp/>+<sp/>c<sp/>*<sp/>(q[1]<sp/>*<sp/>q[2]);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>-q[1]<sp/>/<sp/>2<sp/>+<sp/>c<sp/>*<sp/>(q[0]<sp/>*<sp/>q[2]);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>q[0]<sp/>/<sp/>2<sp/>+<sp/>c<sp/>*<sp/>(q[1]<sp/>*<sp/>q[2]);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>1<sp/>-<sp/>c<sp/>*<sp/>(q[0]<sp/>*<sp/>q[0]<sp/>+<sp/>q[1]<sp/>*<sp/>q[1]);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1347"><highlight class="comment"><sp/>*<sp/>C2EP(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1348"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>4x1<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q,</highlight></codeline>
<codeline lineno="1349"><highlight class="comment"><sp/>*<sp/>where<sp/>the<sp/>first<sp/>component<sp/>of<sp/>Q<sp/>is<sp/>the<sp/>non-dimensional</highlight></codeline>
<codeline lineno="1350"><highlight class="comment"><sp/>*<sp/>Euler<sp/>parameter<sp/>Beta_0<sp/>&gt;=<sp/>0.<sp/>Transformation<sp/>is<sp/>done</highlight></codeline>
<codeline lineno="1351"><highlight class="comment"><sp/>*<sp/>using<sp/>the<sp/>Stanley<sp/>method.</highlight></codeline>
<codeline lineno="1352"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1353"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b[4])</highlight></codeline>
<codeline lineno="1355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tr;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2[4];</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>tr<sp/>=<sp/>C[0][0]<sp/>+<sp/>C[1][1]<sp/>+<sp/>C[2][2];</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>b2[0]<sp/>=<sp/>(1<sp/>+<sp/>tr)<sp/>/<sp/>4.;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>b2[1]<sp/>=<sp/>(1<sp/>+<sp/>2<sp/>*<sp/>C[0][0]<sp/>-<sp/>tr)<sp/>/<sp/>4.;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>b2[2]<sp/>=<sp/>(1<sp/>+<sp/>2<sp/>*<sp/>C[1][1]<sp/>-<sp/>tr)<sp/>/<sp/>4.;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>b2[3]<sp/>=<sp/>(1<sp/>+<sp/>2<sp/>*<sp/>C[2][2]<sp/>-<sp/>tr)<sp/>/<sp/>4.;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>max<sp/>=<sp/>b2[0];</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>4;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b2[j]<sp/>&gt;<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>b2[j];</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(i)<sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[0]<sp/>=<sp/>sqrt(b2[0]);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[1]<sp/>=<sp/>(C[1][2]<sp/>-<sp/>C[2][1])<sp/>/<sp/>4<sp/>/<sp/>b[0];</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[2]<sp/>=<sp/>(C[2][0]<sp/>-<sp/>C[0][2])<sp/>/<sp/>4<sp/>/<sp/>b[0];</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[3]<sp/>=<sp/>(C[0][1]<sp/>-<sp/>C[1][0])<sp/>/<sp/>4<sp/>/<sp/>b[0];</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[1]<sp/>=<sp/>sqrt(b2[1]);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[0]<sp/>=<sp/>(C[1][2]<sp/>-<sp/>C[2][1])<sp/>/<sp/>4<sp/>/<sp/>b[1];</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b[0]<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[1]<sp/>=<sp/>-b[1];</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[0]<sp/>=<sp/>-b[0];</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[2]<sp/>=<sp/>(C[0][1]<sp/>+<sp/>C[1][0])<sp/>/<sp/>4<sp/>/<sp/>b[1];</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[3]<sp/>=<sp/>(C[2][0]<sp/>+<sp/>C[0][2])<sp/>/<sp/>4<sp/>/<sp/>b[1];</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[2]<sp/>=<sp/>sqrt(b2[2]);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[0]<sp/>=<sp/>(C[2][0]<sp/>-<sp/>C[0][2])<sp/>/<sp/>4<sp/>/<sp/>b[2];</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b[0]<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[2]<sp/>=<sp/>-b[2];</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[0]<sp/>=<sp/>-b[0];</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[1]<sp/>=<sp/>(C[0][1]<sp/>+<sp/>C[1][0])<sp/>/<sp/>4<sp/>/<sp/>b[2];</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[3]<sp/>=<sp/>(C[1][2]<sp/>+<sp/>C[2][1])<sp/>/<sp/>4<sp/>/<sp/>b[2];</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[3]<sp/>=<sp/>sqrt(b2[3]);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[0]<sp/>=<sp/>(C[0][1]<sp/>-<sp/>C[1][0])<sp/>/<sp/>4<sp/>/<sp/>b[3];</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b[0]<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[3]<sp/>=<sp/>-b[3];</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[0]<sp/>=<sp/>-b[0];</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[1]<sp/>=<sp/>(C[2][0]<sp/>+<sp/>C[0][2])<sp/>/<sp/>4<sp/>/<sp/>b[3];</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[2]<sp/>=<sp/>(C[1][2]<sp/>+<sp/>C[2][1])<sp/>/<sp/>4<sp/>/<sp/>b[3];</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1418"><highlight class="comment"><sp/>*<sp/>C2Euler121(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1419"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>(1-2-1)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="1420"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2Euler121(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>atan2(C[0][1],<sp/>-C[0][2]);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>safeAcos(C[0][0]);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>atan2(C[1][0],<sp/>C[2][0]);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1429"><highlight class="comment"><sp/>*<sp/>C2Euler123(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1430"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>(1-2-3)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="1431"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2Euler123(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>atan2(-C[2][1],<sp/>C[2][2]);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>safeAsin(C[2][0]);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>atan2(-C[1][0],<sp/>C[0][0]);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1440"><highlight class="comment"><sp/>*<sp/>C2Euler131(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>(1-3-1)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2Euler131(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>atan2(C[0][2],<sp/>C[0][1]);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>safeAcos(C[0][0]);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>atan2(C[2][0],<sp/>-C[1][0]);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"><sp/>*<sp/>C2Euler132(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1452"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>(1-3-2)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="1453"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2Euler132(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>atan2(C[1][2],<sp/>C[1][1]);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>safeAsin(-C[1][0]);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>atan2(C[2][0],<sp/>C[0][0]);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1462"><highlight class="comment"><sp/>*<sp/>C2Euler212(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1463"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>(2-1-2)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="1464"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2Euler212(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>atan2(C[1][0],<sp/>C[1][2]);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>safeAcos(C[1][1]);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>atan2(C[0][1],<sp/>-C[2][1]);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1473"><highlight class="comment"><sp/>*<sp/>C2Euler213(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1474"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>(2-1-3)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="1475"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2Euler213(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>atan2(C[2][0],<sp/>C[2][2]);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>safeAsin(-C[2][1]);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>atan2(C[0][1],<sp/>C[1][1]);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1484"><highlight class="comment"><sp/>*<sp/>C2Euler231(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1485"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>(2-3-1)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="1486"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2Euler231(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>atan2(-C[0][2],<sp/>C[0][0]);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>safeAsin(C[0][1]);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>atan2(-C[2][1],<sp/>C[1][1]);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1495"><highlight class="comment"><sp/>*<sp/>C2Euler232(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1496"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>(2-3-2)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="1497"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2Euler232(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>atan2(C[1][2],<sp/>-C[1][0]);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>safeAcos(C[1][1]);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>atan2(C[2][1],<sp/>C[0][1]);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1506"><highlight class="comment"><sp/>*<sp/>C2Euler312(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1507"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>(3-1-2)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="1508"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2Euler312(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>atan2(-C[1][0],<sp/>C[1][1]);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>safeAsin(C[1][2]);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>atan2(-C[0][2],<sp/>C[2][2]);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1517"><highlight class="comment"><sp/>*<sp/>C2Euler313(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1518"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>(3-1-3)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="1519"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2Euler313(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>atan2(C[2][0],<sp/>-C[2][1]);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>safeAcos(C[2][2]);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>atan2(C[0][2],<sp/>C[1][2]);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1528"><highlight class="comment"><sp/>*<sp/>C2Euler321(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1529"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>(3-2-1)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="1530"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2Euler321(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>atan2(C[0][1],<sp/>C[0][0]);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>safeAsin(-C[0][2]);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>atan2(C[1][2],<sp/>C[2][2]);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1539"><highlight class="comment"><sp/>*<sp/>C2Euler323(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1540"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>(3-2-3)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="1541"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2Euler323(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>atan2(C[2][1],<sp/>C[2][0]);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>safeAcos(C[2][2]);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>atan2(C[1][2],<sp/>-C[0][2]);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1550"><highlight class="comment"><sp/>*<sp/>C2Gibbs(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1551"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>3x1<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1552"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b[4];</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>C2EP(C,<sp/>b);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>b[1]<sp/>/<sp/>b[0];</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>b[2]<sp/>/<sp/>b[0];</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>b[3]<sp/>/<sp/>b[0];</highlight></codeline>
<codeline lineno="1562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1565"><highlight class="comment"><sp/>*<sp/>C2MRP(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1566"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>3x1<sp/>MRP<sp/>vector<sp/>Q<sp/>where<sp/>the</highlight></codeline>
<codeline lineno="1567"><highlight class="comment"><sp/>*<sp/>MRP<sp/>vector<sp/>is<sp/>chosen<sp/>such<sp/>that<sp/>|Q|<sp/>&lt;=<sp/>1.</highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b[4];</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/>v4SetZero(b);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>b[0]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>C2EP(C,<sp/>b);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>b[1]<sp/>/<sp/>(1<sp/>+<sp/>b[0]);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>b[2]<sp/>/<sp/>(1<sp/>+<sp/>b[0]);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>b[3]<sp/>/<sp/>(1<sp/>+<sp/>b[0]);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1583"><highlight class="comment"><sp/>*<sp/>C2PRV(C,Q)<sp/>translates<sp/>the<sp/>3x3<sp/>direction<sp/>cosine<sp/>matrix</highlight></codeline>
<codeline lineno="1584"><highlight class="comment"><sp/>*<sp/>C<sp/>into<sp/>the<sp/>corresponding<sp/>3x1<sp/>principal<sp/>rotation<sp/>vector<sp/>Q,</highlight></codeline>
<codeline lineno="1585"><highlight class="comment"><sp/>*<sp/>where<sp/>the<sp/>first<sp/>component<sp/>of<sp/>Q<sp/>is<sp/>the<sp/>principal<sp/>rotation<sp/>angle</highlight></codeline>
<codeline lineno="1586"><highlight class="comment"><sp/>*<sp/>phi<sp/>(0&lt;=<sp/>phi<sp/>&lt;=<sp/>Pi)</highlight></codeline>
<codeline lineno="1587"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>C2PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta[4];</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>C2EP(C,beta);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2PRV(beta,q);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1597"><highlight class="comment"><sp/>*<sp/>dEP(Q,W,dq)<sp/>returns<sp/>the<sp/>Euler<sp/>parameter<sp/>derivative</highlight></codeline>
<codeline lineno="1598"><highlight class="comment"><sp/>*<sp/>for<sp/>a<sp/>given<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1599"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1600"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1601"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>1/2<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1602"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dEP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[4][3];</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatEP(q,<sp/>B);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dq[i]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dq[i]<sp/>+=<sp/>B[i][j]<sp/>*<sp/>w[j];</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(.5,<sp/>dq,<sp/>dq);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>dq[3]<sp/>=<sp/>0.5<sp/>*<sp/>dq[3];</highlight></codeline>
<codeline lineno="1619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1622"><highlight class="comment"><sp/>*<sp/>dEuler121(Q,W,dq)<sp/>returns<sp/>the<sp/>(1-2-1)<sp/>Euler<sp/>angle<sp/>derivative</highlight></codeline>
<codeline lineno="1623"><highlight class="comment"><sp/>*<sp/>vector<sp/>for<sp/>a<sp/>given<sp/>(1-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1624"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1625"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1626"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/><sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1627"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dEuler121(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatEuler121(q,<sp/>B);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1637"><highlight class="comment"><sp/>*<sp/>dEuler123(Q,W,dq)<sp/>returns<sp/>the<sp/>(1-2-3)<sp/>Euler<sp/>angle<sp/>derivative</highlight></codeline>
<codeline lineno="1638"><highlight class="comment"><sp/>*<sp/>vector<sp/>for<sp/>a<sp/>given<sp/>(1-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1639"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1640"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1641"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/><sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1642"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dEuler123(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatEuler123(q,<sp/>B);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1652"><highlight class="comment"><sp/>*<sp/>dEuler131(Q,W,dq)<sp/>returns<sp/>the<sp/>(1-3-1)<sp/>Euler<sp/>angle<sp/>derivative</highlight></codeline>
<codeline lineno="1653"><highlight class="comment"><sp/>*<sp/>vector<sp/>for<sp/>a<sp/>given<sp/>(1-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1654"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1655"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1656"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/><sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1657"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dEuler131(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatEuler131(q,<sp/>B);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1667"><highlight class="comment"><sp/>*<sp/>dEuler132(Q,W,dq)<sp/>returns<sp/>the<sp/>(1-3-2)<sp/>Euler<sp/>angle<sp/>derivative</highlight></codeline>
<codeline lineno="1668"><highlight class="comment"><sp/>*<sp/>vector<sp/>for<sp/>a<sp/>given<sp/>(1-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1669"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1670"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1671"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/><sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1672"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dEuler132(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatEuler132(q,<sp/>B);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1682"><highlight class="comment"><sp/>*<sp/>dEuler212(Q,W,dq)<sp/>returns<sp/>the<sp/>(2-1-2)<sp/>Euler<sp/>angle<sp/>derivative</highlight></codeline>
<codeline lineno="1683"><highlight class="comment"><sp/>*<sp/>vector<sp/>for<sp/>a<sp/>given<sp/>(2-1-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1684"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1685"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1686"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/><sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1687"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dEuler212(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatEuler212(q,<sp/>B);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1697"><highlight class="comment"><sp/>*<sp/>dEuler213(Q,W,dq)<sp/>returns<sp/>the<sp/>(2-1-3)<sp/>Euler<sp/>angle<sp/>derivative</highlight></codeline>
<codeline lineno="1698"><highlight class="comment"><sp/>*<sp/>vector<sp/>for<sp/>a<sp/>given<sp/>(2-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1699"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1700"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1701"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/><sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1702"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dEuler213(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatEuler213(q,<sp/>B);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1712"><highlight class="comment"><sp/>*<sp/>dEuler231(Q,W,dq)<sp/>returns<sp/>the<sp/>(2-3-1)<sp/>Euler<sp/>angle<sp/>derivative</highlight></codeline>
<codeline lineno="1713"><highlight class="comment"><sp/>*<sp/>vector<sp/>for<sp/>a<sp/>given<sp/>(2-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1714"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1715"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1716"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/><sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1717"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dEuler231(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatEuler231(q,<sp/>B);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1727"><highlight class="comment"><sp/>*<sp/>dEuler232(Q,W,dq)<sp/>returns<sp/>the<sp/>(2-3-2)<sp/>Euler<sp/>angle<sp/>derivative</highlight></codeline>
<codeline lineno="1728"><highlight class="comment"><sp/>*<sp/>vector<sp/>for<sp/>a<sp/>given<sp/>(2-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1729"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1730"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1731"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/><sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1732"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dEuler232(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatEuler232(q,<sp/>B);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1742"><highlight class="comment"><sp/>*<sp/>dEuler312(Q,W,dq)<sp/>returns<sp/>the<sp/>(3-1-2)<sp/>Euler<sp/>angle<sp/>derivative</highlight></codeline>
<codeline lineno="1743"><highlight class="comment"><sp/>*<sp/>vector<sp/>for<sp/>a<sp/>given<sp/>(3-1-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1744"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1745"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1746"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/><sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1747"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dEuler312(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatEuler312(q,<sp/>B);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1757"><highlight class="comment"><sp/>*<sp/>dEuler313(Q,W,dq)<sp/>returns<sp/>the<sp/>(3-1-3)<sp/>Euler<sp/>angle<sp/>derivative</highlight></codeline>
<codeline lineno="1758"><highlight class="comment"><sp/>*<sp/>vector<sp/>for<sp/>a<sp/>given<sp/>(3-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1759"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1760"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1761"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/><sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1762"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dEuler313(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatEuler313(q,<sp/>B);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1772"><highlight class="comment"><sp/>*<sp/>dEuler321(Q,W,dq)<sp/>returns<sp/>the<sp/>(3-2-1)<sp/>Euler<sp/>angle<sp/>derivative</highlight></codeline>
<codeline lineno="1773"><highlight class="comment"><sp/>*<sp/>vector<sp/>for<sp/>a<sp/>given<sp/>(3-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1774"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1775"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1776"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/><sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1777"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dEuler321(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatEuler321(q,<sp/>B);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1787"><highlight class="comment"><sp/>*<sp/>dEuler323(Q,W,dq)<sp/>returns<sp/>the<sp/>(3-2-3)<sp/>Euler<sp/>angle<sp/>derivative</highlight></codeline>
<codeline lineno="1788"><highlight class="comment"><sp/>*<sp/>vector<sp/>for<sp/>a<sp/>given<sp/>(3-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1789"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1790"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1791"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/><sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1792"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dEuler323(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatEuler323(q,<sp/>B);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1802"><highlight class="comment"><sp/>*<sp/>dGibbs(Q,W,dq)<sp/>returns<sp/>the<sp/>Gibbs<sp/>derivative</highlight></codeline>
<codeline lineno="1803"><highlight class="comment"><sp/>*<sp/>for<sp/>a<sp/>given<sp/>Gibbs<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1804"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1805"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1806"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>1/2<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1807"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dGibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatGibbs(q,<sp/>B);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(0.5,<sp/>dq,<sp/>dq);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1818"><highlight class="comment"><sp/>*<sp/>dMRP(Q,W,dq)<sp/>returns<sp/>the<sp/>MRP<sp/>derivative</highlight></codeline>
<codeline lineno="1819"><highlight class="comment"><sp/>*<sp/>for<sp/>a<sp/>given<sp/>MRP<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1820"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1821"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1822"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/>1/4<sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1823"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dMRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1825"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatMRP(q,<sp/>B);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(0.25,<sp/>dq,<sp/>dq);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1834"><highlight class="comment"><sp/>*<sp/>dMRP2omega(Q,dQ,W)<sp/>returns<sp/>the<sp/>angular<sp/>rate<sp/>W</highlight></codeline>
<codeline lineno="1835"><highlight class="comment"><sp/>*<sp/>for<sp/>a<sp/>given<sp/>MRP<sp/>vector<sp/>Q<sp/>and<sp/></highlight></codeline>
<codeline lineno="1836"><highlight class="comment"><sp/>*<sp/>MRP<sp/>derivative<sp/>dQ.</highlight></codeline>
<codeline lineno="1837"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1838"><highlight class="comment"><sp/>*<sp/>w<sp/>=<sp/>4<sp/>[B(Q)]^(-1)<sp/>dQ/dt</highlight></codeline>
<codeline lineno="1839"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dMRP2Omega(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w)</highlight></codeline>
<codeline lineno="1841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/>BinvMRP(q,<sp/>B);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>dq,<sp/>w);</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(4,<sp/>w,<sp/>w);</highlight></codeline>
<codeline lineno="1847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1850"><highlight class="comment"><sp/>*<sp/>ddMRP(Q,dQ,W,dW)<sp/>returns<sp/>the<sp/>second<sp/>order<sp/>MRP<sp/>derivative</highlight></codeline>
<codeline lineno="1851"><highlight class="comment"><sp/>*<sp/>for<sp/>a<sp/>given<sp/>MRP<sp/>vector<sp/>Q,<sp/>first<sp/>MRP<sp/>derivative<sp/>dQ,<sp/>body<sp/>angular</highlight></codeline>
<codeline lineno="1852"><highlight class="comment"><sp/>*<sp/>velocity<sp/>vector<sp/>w<sp/>and<sp/>body<sp/>angular<sp/>acceleration<sp/>vector<sp/>dw.</highlight></codeline>
<codeline lineno="1853"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1854"><highlight class="comment"><sp/>*<sp/>(d^2Q)/(dt^2)<sp/>=<sp/>1/4<sp/>(<sp/>[B(Q)]<sp/>dw<sp/>+<sp/>[Bdot(Q,dQ)]<sp/>w<sp/>)</highlight></codeline>
<codeline lineno="1855"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ddMRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dw,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ddq)</highlight></codeline>
<codeline lineno="1857"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3],<sp/>Bdot[3][3];</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1[3],<sp/>s2[3];</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatMRP(q,<sp/>B);</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/>BdotmatMRP(q,<sp/>dq,<sp/>Bdot);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>dw,<sp/>s1);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(Bdot,<sp/>w,<sp/>s2);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddq[i]<sp/>=<sp/>0.25<sp/>*<sp/>(<sp/>s1[i]<sp/>+<sp/>s2[i]<sp/>);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1872"><highlight class="comment"><sp/>*<sp/>ddMRP2omegaDot(Q,dQ,ddQ)<sp/>returns<sp/>the<sp/>angular<sp/>rate<sp/>W</highlight></codeline>
<codeline lineno="1873"><highlight class="comment"><sp/>*<sp/>for<sp/>a<sp/>given<sp/>MRP<sp/>vector<sp/>Q<sp/>and<sp/></highlight></codeline>
<codeline lineno="1874"><highlight class="comment"><sp/>*<sp/>MRP<sp/>derivative<sp/>dQ.</highlight></codeline>
<codeline lineno="1875"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1876"><highlight class="comment"><sp/>*<sp/>dW/dt<sp/>=<sp/>4<sp/>[B(Q)]^(-1)<sp/>(<sp/>ddQ<sp/>-<sp/>[Bdot(Q,dQ)]<sp/>[B(Q)]^(-1)<sp/>dQ<sp/>)</highlight></codeline>
<codeline lineno="1877"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ddMRP2dOmega(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ddq,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dw)</highlight></codeline>
<codeline lineno="1879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3],<sp/>Bdot[3][3];</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1[3],<sp/>s2[3],<sp/>s3[3];</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/>BinvMRP(q,<sp/>B);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/>BdotmatMRP(q,<sp/>dq,<sp/>Bdot);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>dq,<sp/>s1);</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(Bdot,<sp/>s1,<sp/>s2);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3[i]<sp/>=<sp/>ddq[i]<sp/>-<sp/>s2[i];</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>s3,<sp/>dw);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(4,<sp/>dw,<sp/>dw);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1896"><highlight class="comment"><sp/>*<sp/>dPRV(Q,W,dq)<sp/>returns<sp/>the<sp/>PRV<sp/>derivative</highlight></codeline>
<codeline lineno="1897"><highlight class="comment"><sp/>*<sp/>for<sp/>a<sp/>given<sp/>PRV<sp/>vector<sp/>Q<sp/>and<sp/>body</highlight></codeline>
<codeline lineno="1898"><highlight class="comment"><sp/>*<sp/>angular<sp/>velocity<sp/>vector<sp/>w.</highlight></codeline>
<codeline lineno="1899"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1900"><highlight class="comment"><sp/>*<sp/>dQ/dt<sp/>=<sp/><sp/>[B(Q)]<sp/>w</highlight></codeline>
<codeline lineno="1901"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dPRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*w,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dq)</highlight></codeline>
<codeline lineno="1903"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatPRV(q,<sp/>B);</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>w,<sp/>dq);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1911"><highlight class="comment"><sp/>*<sp/>elem2PRV(R,Q)<sp/>translates<sp/>a<sp/>prinicpal<sp/>rotation</highlight></codeline>
<codeline lineno="1912"><highlight class="comment"><sp/>*<sp/>element<sp/>set<sp/>R<sp/>into<sp/>the<sp/>corresponding<sp/>principal</highlight></codeline>
<codeline lineno="1913"><highlight class="comment"><sp/>*<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="1914"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>elem2PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="1916"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>r[1]<sp/>*<sp/>r[0];</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>r[2]<sp/>*<sp/>r[0];</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>r[3]<sp/>*<sp/>r[0];</highlight></codeline>
<codeline lineno="1920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1923"><highlight class="comment"><sp/>*<sp/>EP2C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="1924"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>4x1<sp/>Euler<sp/>parameter<sp/>vector</highlight></codeline>
<codeline lineno="1925"><highlight class="comment"><sp/>*<sp/>Q.<sp/><sp/>The<sp/>first<sp/>element<sp/>is<sp/>the<sp/>non-dimensional<sp/>Euler</highlight></codeline>
<codeline lineno="1926"><highlight class="comment"><sp/>*<sp/>parameter,<sp/>while<sp/>the<sp/>remain<sp/>three<sp/>elements<sp/>form</highlight></codeline>
<codeline lineno="1927"><highlight class="comment"><sp/>*<sp/>the<sp/>Eulerparameter<sp/>vector.</highlight></codeline>
<codeline lineno="1928"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="1930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q0;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q3;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/>q0<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>q[1];</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/>q2<sp/>=<sp/>q[2];</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/>q3<sp/>=<sp/>q[3];</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>q0<sp/>*<sp/>q0<sp/>+<sp/>q1<sp/>*<sp/>q1<sp/>-<sp/>q2<sp/>*<sp/>q2<sp/>-<sp/>q3<sp/>*<sp/>q3;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>2<sp/>*<sp/>(q1<sp/>*<sp/>q2<sp/>+<sp/>q0<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>2<sp/>*<sp/>(q1<sp/>*<sp/>q3<sp/>-<sp/>q0<sp/>*<sp/>q2);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>2<sp/>*<sp/>(q1<sp/>*<sp/>q2<sp/>-<sp/>q0<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>q0<sp/>*<sp/>q0<sp/>-<sp/>q1<sp/>*<sp/>q1<sp/>+<sp/>q2<sp/>*<sp/>q2<sp/>-<sp/>q3<sp/>*<sp/>q3;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>2<sp/>*<sp/>(q2<sp/>*<sp/>q3<sp/>+<sp/>q0<sp/>*<sp/>q1);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>2<sp/>*<sp/>(q1<sp/>*<sp/>q3<sp/>+<sp/>q0<sp/>*<sp/>q2);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>2<sp/>*<sp/>(q2<sp/>*<sp/>q3<sp/>-<sp/>q0<sp/>*<sp/>q1);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>q0<sp/>*<sp/>q0<sp/>-<sp/>q1<sp/>*<sp/>q1<sp/>-<sp/>q2<sp/>*<sp/>q2<sp/>+<sp/>q3<sp/>*<sp/>q3;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1953"><highlight class="comment"><sp/>*<sp/>EP2Euler121(Q,E)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter</highlight></codeline>
<codeline lineno="1954"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>corresponding<sp/>(1-2-1)<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="1955"><highlight class="comment"><sp/>*<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="1956"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2Euler121(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="1958"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t2;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>atan2(q[3],<sp/>q[2]);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>atan2(q[1],<sp/>q[0]);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>e[0]<sp/>=<sp/>t1<sp/>+<sp/>t2;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/>e[1]<sp/>=<sp/>2<sp/>*<sp/>safeAcos(sqrt(q[0]<sp/>*<sp/>q[0]<sp/>+<sp/>q[1]<sp/>*<sp/>q[1]));</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/>t2<sp/>-<sp/>t1;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1971"><highlight class="comment"><sp/>*<sp/>EP2Euler123(Q,E)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter<sp/>vector</highlight></codeline>
<codeline lineno="1972"><highlight class="comment"><sp/>*<sp/>Q<sp/>into<sp/>the<sp/>corresponding<sp/>(1-2-3)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="1973"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2Euler123(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="1975"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q0;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q3;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/>q0<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>q[1];</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/>q2<sp/>=<sp/>q[2];</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>q3<sp/>=<sp/>q[3];</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>e[0]<sp/>=<sp/>atan2(-2<sp/>*<sp/>(q2<sp/>*<sp/>q3<sp/>-<sp/>q0<sp/>*<sp/>q1),<sp/>q0<sp/>*<sp/>q0<sp/>-<sp/>q1<sp/>*<sp/>q1<sp/>-<sp/>q2<sp/>*<sp/>q2<sp/>+<sp/>q3<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/>e[1]<sp/>=<sp/>safeAsin(2<sp/>*<sp/>(q1<sp/>*<sp/>q3<sp/>+<sp/>q0<sp/>*<sp/>q2));</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/>atan2(-2<sp/>*<sp/>(q1<sp/>*<sp/>q2<sp/>-<sp/>q0<sp/>*<sp/>q3),<sp/>q0<sp/>*<sp/>q0<sp/>+<sp/>q1<sp/>*<sp/>q1<sp/>-<sp/>q2<sp/>*<sp/>q2<sp/>-<sp/>q3<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1992"><highlight class="comment"><sp/>*<sp/>EP2Euler131(Q,E)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter</highlight></codeline>
<codeline lineno="1993"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>corresponding<sp/>(1-3-1)<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="1994"><highlight class="comment"><sp/>*<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="1995"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2Euler131(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="1997"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1;</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t2;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>atan2(q[2],<sp/>q[3]);</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>atan2(q[1],<sp/>q[0]);</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/>e[0]<sp/>=<sp/>t2<sp/>-<sp/>t1;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/>e[1]<sp/>=<sp/>2<sp/>*<sp/>safeAcos(sqrt(q[0]<sp/>*<sp/>q[0]<sp/>+<sp/>q[1]<sp/>*<sp/>q[1]));</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/>t2<sp/>+<sp/>t1;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2010"><highlight class="comment"><sp/>*<sp/>EP2Euler132(Q,E)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter<sp/>vector</highlight></codeline>
<codeline lineno="2011"><highlight class="comment"><sp/>*<sp/>Q<sp/>into<sp/>the<sp/>corresponding<sp/>(1-3-2)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="2012"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2Euler132(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="2014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q0;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q3;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/>q0<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>q[1];</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/>q2<sp/>=<sp/>q[2];</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/>q3<sp/>=<sp/>q[3];</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/>e[0]<sp/>=<sp/>atan2(2<sp/>*<sp/>(q2<sp/>*<sp/>q3<sp/>+<sp/>q0<sp/>*<sp/>q1),<sp/>q0<sp/>*<sp/>q0<sp/>-<sp/>q1<sp/>*<sp/>q1<sp/>+<sp/>q2<sp/>*<sp/>q2<sp/>-<sp/>q3<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>e[1]<sp/>=<sp/>safeAsin(-2<sp/>*<sp/>(q1<sp/>*<sp/>q2<sp/>-<sp/>q0<sp/>*<sp/>q3));</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/>atan2(2<sp/>*<sp/>(q1<sp/>*<sp/>q3<sp/>+<sp/>q0<sp/>*<sp/>q2),<sp/>q0<sp/>*<sp/>q0<sp/>+<sp/>q1<sp/>*<sp/>q1<sp/>-<sp/>q2<sp/>*<sp/>q2<sp/>-<sp/>q3<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2031"><highlight class="comment"><sp/>*<sp/>EP2Euler212(Q,E)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter</highlight></codeline>
<codeline lineno="2032"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>corresponding<sp/>(2-1-2)<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="2033"><highlight class="comment"><sp/>*<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="2034"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2Euler212(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="2036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t2;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>atan2(q[3],<sp/>q[1]);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>atan2(q[2],<sp/>q[0]);</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/>e[0]<sp/>=<sp/>t2<sp/>-<sp/>t1;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/>e[1]<sp/>=<sp/>2<sp/>*<sp/>safeAcos(sqrt(q[0]<sp/>*<sp/>q[0]<sp/>+<sp/>q[2]<sp/>*<sp/>q[2]));</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/>t2<sp/>+<sp/>t1;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2049"><highlight class="comment"><sp/>*<sp/>EP2Euler213(Q,E)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter<sp/>vector</highlight></codeline>
<codeline lineno="2050"><highlight class="comment"><sp/>*<sp/>Q<sp/>into<sp/>the<sp/>corresponding<sp/>(2-1-3)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="2051"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2Euler213(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="2053"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q0;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q3;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>q0<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>q[1];</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>q2<sp/>=<sp/>q[2];</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>q3<sp/>=<sp/>q[3];</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/>e[0]<sp/>=<sp/>atan2(2<sp/>*<sp/>(q1<sp/>*<sp/>q3<sp/>+<sp/>q0<sp/>*<sp/>q2),<sp/>q0<sp/>*<sp/>q0<sp/>-<sp/>q1<sp/>*<sp/>q1<sp/>-<sp/>q2<sp/>*<sp/>q2<sp/>+<sp/>q3<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/>e[1]<sp/>=<sp/>safeAsin(-2<sp/>*<sp/>(q2<sp/>*<sp/>q3<sp/>-<sp/>q0<sp/>*<sp/>q1));</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/>atan2(2<sp/>*<sp/>(q1<sp/>*<sp/>q2<sp/>+<sp/>q0<sp/>*<sp/>q3),<sp/>q0<sp/>*<sp/>q0<sp/>-<sp/>q1<sp/>*<sp/>q1<sp/>+<sp/>q2<sp/>*<sp/>q2<sp/>-<sp/>q3<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2070"><highlight class="comment"><sp/>*<sp/>EP2Euler231(Q,E)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter<sp/>vector</highlight></codeline>
<codeline lineno="2071"><highlight class="comment"><sp/>*<sp/>Q<sp/>into<sp/>the<sp/>corresponding<sp/>(2-3-1)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="2072"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2Euler231(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="2074"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q0;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q3;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/>q0<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>q[1];</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/>q2<sp/>=<sp/>q[2];</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>q3<sp/>=<sp/>q[3];</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/>e[0]<sp/>=<sp/>atan2(-2<sp/>*<sp/>(q1<sp/>*<sp/>q3<sp/>-<sp/>q0<sp/>*<sp/>q2),<sp/>q0<sp/>*<sp/>q0<sp/>+<sp/>q1<sp/>*<sp/>q1<sp/>-<sp/>q2<sp/>*<sp/>q2<sp/>-<sp/>q3<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>e[1]<sp/>=<sp/>safeAsin(2<sp/>*<sp/>(q1<sp/>*<sp/>q2<sp/>+<sp/>q0<sp/>*<sp/>q3));</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/>atan2(-2<sp/>*<sp/>(q2<sp/>*<sp/>q3<sp/>-<sp/>q0<sp/>*<sp/>q1),<sp/>q0<sp/>*<sp/>q0<sp/>-<sp/>q1<sp/>*<sp/>q1<sp/>+<sp/>q2<sp/>*<sp/>q2<sp/>-<sp/>q3<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2091"><highlight class="comment"><sp/>*<sp/>EP2Euler232(Q,E)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter</highlight></codeline>
<codeline lineno="2092"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>corresponding<sp/>(2-3-2)<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="2093"><highlight class="comment"><sp/>*<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="2094"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2Euler232(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t2;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>atan2(q[1],<sp/>q[3]);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>atan2(q[2],<sp/>q[0]);</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/>e[0]<sp/>=<sp/>t1<sp/>+<sp/>t2;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>e[1]<sp/>=<sp/>2<sp/>*<sp/>safeAcos(sqrt(q[0]<sp/>*<sp/>q[0]<sp/>+<sp/>q[2]<sp/>*<sp/>q[2]));</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/>t2<sp/>-<sp/>t1;</highlight></codeline>
<codeline lineno="2106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2109"><highlight class="comment"><sp/>*<sp/>EP2Euler312(Q,E)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter<sp/>vector</highlight></codeline>
<codeline lineno="2110"><highlight class="comment"><sp/>*<sp/>Q<sp/>into<sp/>the<sp/>corresponding<sp/>(3-1-2)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="2111"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2Euler312(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="2113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q0;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q3;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/>q0<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>q[1];</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/>q2<sp/>=<sp/>q[2];</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/>q3<sp/>=<sp/>q[3];</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/>e[0]<sp/>=<sp/>atan2(-2<sp/>*<sp/>(q1<sp/>*<sp/>q2<sp/>-<sp/>q0<sp/>*<sp/>q3),<sp/>q0<sp/>*<sp/>q0<sp/>-<sp/>q1<sp/>*<sp/>q1<sp/>+<sp/>q2<sp/>*<sp/>q2<sp/>-<sp/>q3<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>e[1]<sp/>=<sp/>safeAsin(2<sp/>*<sp/>(q2<sp/>*<sp/>q3<sp/>+<sp/>q0<sp/>*<sp/>q1));</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/>atan2(-2<sp/>*<sp/>(q1<sp/>*<sp/>q3<sp/>-<sp/>q0<sp/>*<sp/>q2),<sp/>q0<sp/>*<sp/>q0<sp/>-<sp/>q1<sp/>*<sp/>q1<sp/>-<sp/>q2<sp/>*<sp/>q2<sp/>+<sp/>q3<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2130"><highlight class="comment"><sp/>*<sp/>EP2Euler313(Q,E)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter</highlight></codeline>
<codeline lineno="2131"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>corresponding<sp/>(3-1-3)<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="2132"><highlight class="comment"><sp/>*<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="2133"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2Euler313(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="2135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t2;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>atan2(q[2],<sp/>q[1]);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>atan2(q[3],<sp/>q[0]);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/>e[0]<sp/>=<sp/>t1<sp/>+<sp/>t2;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/>e[1]<sp/>=<sp/>2<sp/>*<sp/>safeAcos(sqrt(q[0]<sp/>*<sp/>q[0]<sp/>+<sp/>q[3]<sp/>*<sp/>q[3]));</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/>t2<sp/>-<sp/>t1;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2148"><highlight class="comment"><sp/>*<sp/>EP2Euler321(Q,E)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter<sp/>vector</highlight></codeline>
<codeline lineno="2149"><highlight class="comment"><sp/>*<sp/>Q<sp/>into<sp/>the<sp/>corresponding<sp/>(3-2-1)<sp/>Euler<sp/>angle<sp/>set.</highlight></codeline>
<codeline lineno="2150"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2Euler321(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="2152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q0;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2;</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q3;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>q0<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>q[1];</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>q2<sp/>=<sp/>q[2];</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/>q3<sp/>=<sp/>q[3];</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/>e[0]<sp/>=<sp/>atan2(2<sp/>*<sp/>(q1<sp/>*<sp/>q2<sp/>+<sp/>q0<sp/>*<sp/>q3),<sp/>q0<sp/>*<sp/>q0<sp/>+<sp/>q1<sp/>*<sp/>q1<sp/>-<sp/>q2<sp/>*<sp/>q2<sp/>-<sp/>q3<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/>e[1]<sp/>=<sp/>safeAsin(-2<sp/>*<sp/>(q1<sp/>*<sp/>q3<sp/>-<sp/>q0<sp/>*<sp/>q2));</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/>atan2(2<sp/>*<sp/>(q2<sp/>*<sp/>q3<sp/>+<sp/>q0<sp/>*<sp/>q1),<sp/>q0<sp/>*<sp/>q0<sp/>-<sp/>q1<sp/>*<sp/>q1<sp/>-<sp/>q2<sp/>*<sp/>q2<sp/>+<sp/>q3<sp/>*<sp/>q3);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2169"><highlight class="comment"><sp/>*<sp/>EP2Euler323(Q,E)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter</highlight></codeline>
<codeline lineno="2170"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>corresponding<sp/>(3-2-3)<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="2171"><highlight class="comment"><sp/>*<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="2172"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2Euler323(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="2174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1;</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t2;</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>atan2(q[1],<sp/>q[2]);</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>atan2(q[3],<sp/>q[0]);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>e[0]<sp/>=<sp/>t2<sp/>-<sp/>t1;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/>e[1]<sp/>=<sp/>2<sp/>*<sp/>safeAcos(sqrt(q[0]<sp/>*<sp/>q[0]<sp/>+<sp/>q[3]<sp/>*<sp/>q[3]));</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/>t2<sp/>+<sp/>t1;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2187"><highlight class="comment"><sp/>*<sp/>EP2Gibbs(Q1,Q)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q1</highlight></codeline>
<codeline lineno="2188"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2189"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>q1[1]<sp/>/<sp/>q1[0];</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>q1[2]<sp/>/<sp/>q1[0];</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>q1[3]<sp/>/<sp/>q1[0];</highlight></codeline>
<codeline lineno="2195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2198"><highlight class="comment"><sp/>*<sp/>EP2MRP(Q1,Q)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q1</highlight></codeline>
<codeline lineno="2199"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2200"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q1[0]<sp/>&gt;=<sp/>0){</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>q1[1]<sp/>/<sp/>(1<sp/>+<sp/>q1[0]);</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>q1[2]<sp/>/<sp/>(1<sp/>+<sp/>q1[0]);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>q1[3]<sp/>/<sp/>(1<sp/>+<sp/>q1[0]);</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>-q1[1]<sp/>/<sp/>(1<sp/>-<sp/>q1[0]);</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>-q1[2]<sp/>/<sp/>(1<sp/>-<sp/>q1[0]);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>-q1[3]<sp/>/<sp/>(1<sp/>-<sp/>q1[0]);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2215"><highlight class="comment"><sp/>*<sp/>EP2PRV(Q1,Q)<sp/>translates<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q1</highlight></codeline>
<codeline lineno="2216"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2217"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EP2PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>2<sp/>*<sp/>safeAcos(q1[0]);</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>sin(p<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(sp)<sp/>&lt;<sp/>nearZero)<sp/>{</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>q1[1]<sp/>/<sp/>sp<sp/>*<sp/>p;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>q1[2]<sp/>/<sp/>sp<sp/>*<sp/>p;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>q1[3]<sp/>/<sp/>sp<sp/>*<sp/>p;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2237"><highlight class="comment"><sp/>*<sp/><sp/>Euler1(X,M)<sp/><sp/>Elementary<sp/>rotation<sp/>matrix</highlight></codeline>
<codeline lineno="2238"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>elementary<sp/>rotation<sp/>matrix<sp/>about<sp/>the</highlight></codeline>
<codeline lineno="2239"><highlight class="comment"><sp/>*<sp/>first<sp/>body<sp/>axis.</highlight></codeline>
<codeline lineno="2240"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m[3][3])</highlight></codeline>
<codeline lineno="2242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/>m33SetIdentity(m);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][1]<sp/>=<sp/>cos(x);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][2]<sp/>=<sp/>sin(x);</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][1]<sp/>=<sp/>-m[1][2];</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][2]<sp/>=<sp/>m[1][1];</highlight></codeline>
<codeline lineno="2248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2251"><highlight class="comment"><sp/>*<sp/><sp/>Euler2(X,M)<sp/><sp/>Elementary<sp/>rotation<sp/>matrix</highlight></codeline>
<codeline lineno="2252"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>elementary<sp/>rotation<sp/>matrix<sp/>about<sp/>the</highlight></codeline>
<codeline lineno="2253"><highlight class="comment"><sp/>*<sp/>second<sp/>body<sp/>axis.</highlight></codeline>
<codeline lineno="2254"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m[3][3])</highlight></codeline>
<codeline lineno="2256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/>m33SetIdentity(m);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][0]<sp/>=<sp/>cos(x);</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][2]<sp/>=<sp/>-sin(x);</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][0]<sp/>=<sp/>-m[0][2];</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/>m[2][2]<sp/>=<sp/>m[0][0];</highlight></codeline>
<codeline lineno="2262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2265"><highlight class="comment"><sp/>*<sp/><sp/>Euler3(X,M)<sp/><sp/>Elementary<sp/>rotation<sp/>matrix</highlight></codeline>
<codeline lineno="2266"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>elementary<sp/>rotation<sp/>matrix<sp/>about<sp/>the</highlight></codeline>
<codeline lineno="2267"><highlight class="comment"><sp/>*<sp/>third<sp/>body<sp/>axis.</highlight></codeline>
<codeline lineno="2268"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m[3][3])</highlight></codeline>
<codeline lineno="2270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>m33SetIdentity(m);</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][0]<sp/>=<sp/>cos(x);</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>m[0][1]<sp/>=<sp/>sin(x);</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][0]<sp/>=<sp/>-m[0][1];</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1][1]<sp/>=<sp/>m[0][0];</highlight></codeline>
<codeline lineno="2276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2279"><highlight class="comment"><sp/>*<sp/>Euler1212C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="2280"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>1-2-1<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2281"><highlight class="comment"><sp/>*<sp/>Input<sp/>Q<sp/>must<sp/>be<sp/>a<sp/>3x1<sp/>vector<sp/>of<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2282"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1212C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="2284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st1;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct1;</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st2;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct2;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st3;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct3;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/>st1<sp/>=<sp/>sin(q[0]);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/>ct1<sp/>=<sp/>cos(q[0]);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/>st2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/>ct2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/>st3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/>ct3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>ct2;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>st1<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>-ct1<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>ct1<sp/>*<sp/>ct3<sp/>-<sp/>ct2<sp/>*<sp/>st1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>ct3<sp/>*<sp/>st1<sp/>+<sp/>ct1<sp/>*<sp/>ct2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>ct3<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>-ct2<sp/>*<sp/>ct3<sp/>*<sp/>st1<sp/>-<sp/>ct1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>ct1<sp/>*<sp/>ct2<sp/>*<sp/>ct3<sp/>-<sp/>st1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2311"><highlight class="comment"><sp/>*<sp/>Euler1212EP(E,Q)<sp/>translates<sp/>the<sp/>121<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="2312"><highlight class="comment"><sp/>*<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2313"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1212EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e1;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e2;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e3;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/>e1<sp/>=<sp/>e[0]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/>e2<sp/>=<sp/>e[1]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/>e3<sp/>=<sp/>e[2]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>cos(e2)<sp/>*<sp/>cos(e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>cos(e2)<sp/>*<sp/>sin(e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>sin(e2)<sp/>*<sp/>cos(e1<sp/>-<sp/>e3);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>sin(e2)<sp/>*<sp/>sin(e1<sp/>-<sp/>e3);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2331"><highlight class="comment"><sp/>*<sp/>Euler1212Gibbs(E,Q)<sp/>translates<sp/>the<sp/>(1-2-1)<sp/>Euler</highlight></codeline>
<codeline lineno="2332"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2333"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1212Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1212EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Gibbs(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2343"><highlight class="comment"><sp/>*<sp/>Euler1212MRP(E,Q)<sp/>translates<sp/>the<sp/>(1-2-1)<sp/>Euler</highlight></codeline>
<codeline lineno="2344"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2345"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1212MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1212EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2MRP(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2355"><highlight class="comment"><sp/>*<sp/>Euler1212PRV(E,Q)<sp/>translates<sp/>the<sp/>(1-2-1)<sp/>Euler</highlight></codeline>
<codeline lineno="2356"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2357"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1212PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1212EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2PRV(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2367"><highlight class="comment"><sp/>*<sp/>Euler1232C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="2368"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>1-2-3<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2369"><highlight class="comment"><sp/>*<sp/>Input<sp/>Q<sp/>must<sp/>be<sp/>a<sp/>3x1<sp/>vector<sp/>of<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2370"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1232C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="2372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st1;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st2;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st3;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct1;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct2;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct3;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/>st1<sp/>=<sp/>sin(q[0]);</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/>ct1<sp/>=<sp/>cos(q[0]);</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/>st2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/>ct2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>st3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/>ct3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>ct2<sp/>*<sp/>ct3;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>ct3<sp/>*<sp/>st1<sp/>*<sp/>st2<sp/>+<sp/>ct1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>st1<sp/>*<sp/>st3<sp/>-<sp/>ct1<sp/>*<sp/>ct3<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>-ct2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>ct1<sp/>*<sp/>ct3<sp/>-<sp/>st1<sp/>*<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>ct3<sp/>*<sp/>st1<sp/>+<sp/>ct1<sp/>*<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>st2;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>-ct2<sp/>*<sp/>st1;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>ct1<sp/>*<sp/>ct2;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2399"><highlight class="comment"><sp/>*<sp/>Euler1232EP(E,Q)<sp/>translates<sp/>the<sp/>123<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="2400"><highlight class="comment"><sp/>*<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2401"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1232EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>cos(e[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>sin(e[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(e[1]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(e[1]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(e[2]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(e[2]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>c1<sp/>*<sp/>c2<sp/>*<sp/>c3<sp/>-<sp/>s1<sp/>*<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>s1<sp/>*<sp/>c2<sp/>*<sp/>c3<sp/>+<sp/>c1<sp/>*<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>c1<sp/>*<sp/>s2<sp/>*<sp/>c3<sp/>-<sp/>s1<sp/>*<sp/>c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>c1<sp/>*<sp/>c2<sp/>*<sp/>s3<sp/>+<sp/>s1<sp/>*<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2425"><highlight class="comment"><sp/>*<sp/>Euler1232Gibbs(E,Q)<sp/>translates<sp/>the<sp/>(1-2-3)<sp/>Euler</highlight></codeline>
<codeline lineno="2426"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2427"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1232Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1232EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Gibbs(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2437"><highlight class="comment"><sp/>*<sp/>Euler1232MRP(E,Q)<sp/>translates<sp/>the<sp/>(1-2-3)<sp/>Euler</highlight></codeline>
<codeline lineno="2438"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2439"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1232MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1232EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2MRP(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2449"><highlight class="comment"><sp/>*<sp/>Euler1232PRV(E,Q)<sp/>translates<sp/>the<sp/>(1-2-3)<sp/>Euler</highlight></codeline>
<codeline lineno="2450"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2451"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1232PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1232EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2PRV(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2461"><highlight class="comment"><sp/>*<sp/>Euler1312C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="2462"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>1-3-1<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2463"><highlight class="comment"><sp/>*<sp/>Input<sp/>Q<sp/>must<sp/>be<sp/>a<sp/>3x1<sp/>vector<sp/>of<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2464"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1312C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="2466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st1;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st2;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st3;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct1;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct2;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct3;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/>st1<sp/>=<sp/>sin(q[0]);</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/>ct1<sp/>=<sp/>cos(q[0]);</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/>st2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/>ct2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/>st3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/>ct3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>ct2;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>ct1<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>st1<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>-ct3<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>ct1<sp/>*<sp/>ct2<sp/>*<sp/>ct3<sp/>-<sp/>st1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>ct2<sp/>*<sp/>ct3<sp/>*<sp/>st1<sp/>+<sp/>ct1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>-ct3<sp/>*<sp/>st1<sp/>-<sp/>ct1<sp/>*<sp/>ct2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>ct1<sp/>*<sp/>ct3<sp/>-<sp/>ct2<sp/>*<sp/>st1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2493"><highlight class="comment"><sp/>*<sp/>Euler1312EP(E,Q)<sp/>translates<sp/>the<sp/>131<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="2494"><highlight class="comment"><sp/>*<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2495"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1312EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e1;</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e2;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e3;</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/>e1<sp/>=<sp/>e[0]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/>e2<sp/>=<sp/>e[1]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/>e3<sp/>=<sp/>e[2]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>cos(e2)<sp/>*<sp/>cos(e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>cos(e2)<sp/>*<sp/>sin(e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>sin(e2)<sp/>*<sp/>sin(-e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>sin(e2)<sp/>*<sp/>cos(-e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2513"><highlight class="comment"><sp/>*<sp/>Euler1312Gibbs(E,Q)<sp/>translates<sp/>the<sp/>(1-3-1)<sp/>Euler</highlight></codeline>
<codeline lineno="2514"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2515"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1312Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1312EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Gibbs(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2525"><highlight class="comment"><sp/>*<sp/>Euler1312MRP(E,Q)<sp/>translates<sp/>the<sp/>(1-3-1)<sp/>Euler</highlight></codeline>
<codeline lineno="2526"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2527"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1312MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1312EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2MRP(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2537"><highlight class="comment"><sp/>*<sp/>Euler1312PRV(E,Q)<sp/>translates<sp/>the<sp/>(1-3-1)<sp/>Euler</highlight></codeline>
<codeline lineno="2538"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2539"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1312PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1312EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2PRV(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2549"><highlight class="comment"><sp/>*<sp/>Euler1322C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="2550"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>1-3-2<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2551"><highlight class="comment"><sp/>*<sp/>Input<sp/>Q<sp/>must<sp/>be<sp/>a<sp/>3x1<sp/>vector<sp/>of<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2552"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1322C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="2554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st1;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st2;</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st3;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct1;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct2;</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct3;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/>st1<sp/>=<sp/>sin(q[0]);</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/>ct1<sp/>=<sp/>cos(q[0]);</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/>st2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/>ct2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/>st3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/>ct3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>ct2<sp/>*<sp/>ct3;</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>ct1<sp/>*<sp/>ct3<sp/>*<sp/>st2<sp/>+<sp/>st1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>ct3<sp/>*<sp/>st1<sp/>*<sp/>st2<sp/>-<sp/>ct1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>-st2;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>ct1<sp/>*<sp/>ct2;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>ct2<sp/>*<sp/>st1;</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>ct2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>-ct3<sp/>*<sp/>st1<sp/>+<sp/>ct1<sp/>*<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>ct1<sp/>*<sp/>ct3<sp/>+<sp/>st1<sp/>*<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2581"><highlight class="comment"><sp/>*<sp/>Euler1322EP(E,Q)<sp/>translates<sp/>the<sp/>132<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="2582"><highlight class="comment"><sp/>*<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2583"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1322EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1;</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>cos(e[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>sin(e[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(e[1]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(e[1]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(e[2]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(e[2]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>c1<sp/>*<sp/>c2<sp/>*<sp/>c3<sp/>+<sp/>s1<sp/>*<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>s1<sp/>*<sp/>c2<sp/>*<sp/>c3<sp/>-<sp/>c1<sp/>*<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>c1<sp/>*<sp/>c2<sp/>*<sp/>s3<sp/>-<sp/>s1<sp/>*<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>c1<sp/>*<sp/>s2<sp/>*<sp/>c3<sp/>+<sp/>s1<sp/>*<sp/>c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="2604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2607"><highlight class="comment"><sp/>*<sp/>Euler1322Gibbs(E,Q)<sp/>translates<sp/>the<sp/>(1-3-2)<sp/>Euler</highlight></codeline>
<codeline lineno="2608"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2609"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1322Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1322EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Gibbs(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2619"><highlight class="comment"><sp/>*<sp/>Euler1322MRP(E,Q)<sp/>translates<sp/>the<sp/>(1-3-2)<sp/>Euler</highlight></codeline>
<codeline lineno="2620"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2621"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1322MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1322EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2MRP(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2631"><highlight class="comment"><sp/>*<sp/>Euler1322PRV(E,Q)<sp/>translates<sp/>the<sp/>(1-3-2)<sp/>Euler</highlight></codeline>
<codeline lineno="2632"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2633"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler1322PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1322EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2PRV(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2643"><highlight class="comment"><sp/>*<sp/>Euler2122C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="2644"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>2-1-2<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2645"><highlight class="comment"><sp/>*<sp/>Input<sp/>Q<sp/>must<sp/>be<sp/>a<sp/>3x1<sp/>vector<sp/>of<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2646"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2122C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="2648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st1;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st2;</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st3;</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct1;</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct2;</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct3;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/>st1<sp/>=<sp/>sin(q[0]);</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/>ct1<sp/>=<sp/>cos(q[0]);</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/>st2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/>ct2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/>st3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/>ct3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>ct1<sp/>*<sp/>ct3<sp/>-<sp/>ct2<sp/>*<sp/>st1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>-ct3<sp/>*<sp/>st1<sp/>-<sp/>ct1<sp/>*<sp/>ct2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>st1<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>ct2;</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>ct1<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>ct2<sp/>*<sp/>ct3<sp/>*<sp/>st1<sp/>+<sp/>ct1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>-ct3<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>ct1<sp/>*<sp/>ct2<sp/>*<sp/>ct3<sp/>-<sp/>st1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2675"><highlight class="comment"><sp/>*<sp/>Euler2122EP(E,Q)<sp/>translates<sp/>the<sp/>212<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="2676"><highlight class="comment"><sp/>*<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2677"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2122EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e1;</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e2;</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e3;</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/>e1<sp/>=<sp/>e[0]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/>e2<sp/>=<sp/>e[1]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/>e3<sp/>=<sp/>e[2]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>cos(e2)<sp/>*<sp/>cos(e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>sin(e2)<sp/>*<sp/>cos(-e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>cos(e2)<sp/>*<sp/>sin(e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>sin(e2)<sp/>*<sp/>sin(-e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="2692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2695"><highlight class="comment"><sp/>*<sp/>Euler2122Gibbs(E,Q)<sp/>translates<sp/>the<sp/>(2-1-2)<sp/>Euler</highlight></codeline>
<codeline lineno="2696"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2697"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2122Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2699"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2122EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Gibbs(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2707"><highlight class="comment"><sp/>*<sp/>Euler2122MRP(E,Q)<sp/>translates<sp/>the<sp/>(2-1-2)<sp/>Euler</highlight></codeline>
<codeline lineno="2708"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2709"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2122MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2711"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2122EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2MRP(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2719"><highlight class="comment"><sp/>*<sp/>Euler2122PRV(E,Q)<sp/>translates<sp/>the<sp/>(2-1-2)<sp/>Euler</highlight></codeline>
<codeline lineno="2720"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2721"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2122PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2122EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2PRV(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2731"><highlight class="comment"><sp/>*<sp/>Euler2132C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="2732"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>2-1-3<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2733"><highlight class="comment"><sp/>*<sp/>Input<sp/>Q<sp/>must<sp/>be<sp/>a<sp/>3x1<sp/>vector<sp/>of<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2734"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2132C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="2736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st1;</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st2;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st3;</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct1;</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct2;</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct3;</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/>st1<sp/>=<sp/>sin(q[0]);</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/>ct1<sp/>=<sp/>cos(q[0]);</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/>st2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/>ct2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/>st3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/>ct3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>ct1<sp/>*<sp/>ct3<sp/>+<sp/>st1<sp/>*<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>ct2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>-ct3<sp/>*<sp/>st1<sp/>+<sp/>ct1<sp/>*<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>ct3<sp/>*<sp/>st1<sp/>*<sp/>st2<sp/>-<sp/>ct1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>ct2<sp/>*<sp/>ct3;</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>ct1<sp/>*<sp/>ct3<sp/>*<sp/>st2<sp/>+<sp/>st1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>ct2<sp/>*<sp/>st1;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>-st2;</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>ct1<sp/>*<sp/>ct2;</highlight></codeline>
<codeline lineno="2760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2763"><highlight class="comment"><sp/>*<sp/>Euler2132EP(E,Q)<sp/>translates<sp/>the<sp/>213<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="2764"><highlight class="comment"><sp/>*<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2765"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2132EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1;</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1;</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>cos(e[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>sin(e[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(e[1]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(e[1]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(e[2]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(e[2]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>c1<sp/>*<sp/>c2<sp/>*<sp/>c3<sp/>+<sp/>s1<sp/>*<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>c1<sp/>*<sp/>s2<sp/>*<sp/>c3<sp/>+<sp/>s1<sp/>*<sp/>c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>s1<sp/>*<sp/>c2<sp/>*<sp/>c3<sp/>-<sp/>c1<sp/>*<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>c1<sp/>*<sp/>c2<sp/>*<sp/>s3<sp/>-<sp/>s1<sp/>*<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2789"><highlight class="comment"><sp/>*<sp/>Euler2132Gibbs(E,Q)<sp/>translates<sp/>the<sp/>(2-1-3)<sp/>Euler</highlight></codeline>
<codeline lineno="2790"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2791"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2132Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2132EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Gibbs(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"></highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2801"><highlight class="comment"><sp/>*<sp/>Euler2132MRP(E,Q)<sp/>translates<sp/>the<sp/>(2-1-3)<sp/>Euler</highlight></codeline>
<codeline lineno="2802"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2803"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2132MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2132EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2MRP(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2813"><highlight class="comment"><sp/>*<sp/>Euler2132PRV(E,Q)<sp/>translates<sp/>the<sp/>(2-1-3)<sp/>Euler</highlight></codeline>
<codeline lineno="2814"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2815"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2132PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2132EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2PRV(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2825"><highlight class="comment"><sp/>*<sp/>Euler2312C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="2826"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>2-3-1<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2827"><highlight class="comment"><sp/>*<sp/>Input<sp/>Q<sp/>must<sp/>be<sp/>a<sp/>3x1<sp/>vector<sp/>of<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2828"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2312C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="2830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st1;</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st2;</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st3;</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct1;</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct2;</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct3;</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/>st1<sp/>=<sp/>sin(q[0]);</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/>ct1<sp/>=<sp/>cos(q[0]);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/>st2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/>ct2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/>st3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/>ct3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"></highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>ct1<sp/>*<sp/>ct2;</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>st2;</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>-ct2<sp/>*<sp/>st1;</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>-ct1<sp/>*<sp/>ct3<sp/>*<sp/>st2<sp/>+<sp/>st1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>ct2<sp/>*<sp/>ct3;</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>ct3<sp/>*<sp/>st1<sp/>*<sp/>st2<sp/>+<sp/>ct1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>ct3<sp/>*<sp/>st1<sp/>+<sp/>ct1<sp/>*<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>-ct2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>ct1<sp/>*<sp/>ct3<sp/>-<sp/>st1<sp/>*<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"></highlight></codeline>
<codeline lineno="2856"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2857"><highlight class="comment"><sp/>*<sp/>Euler2312EP(E,Q)<sp/>translates<sp/>the<sp/>231<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="2858"><highlight class="comment"><sp/>*<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2859"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2860"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2312EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1;</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1;</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>cos(e[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>sin(e[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(e[1]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(e[1]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(e[2]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(e[2]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>c1<sp/>*<sp/>c2<sp/>*<sp/>c3<sp/>-<sp/>s1<sp/>*<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>c1<sp/>*<sp/>c2<sp/>*<sp/>s3<sp/>+<sp/>s1<sp/>*<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>s1<sp/>*<sp/>c2<sp/>*<sp/>c3<sp/>+<sp/>c1<sp/>*<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>c1<sp/>*<sp/>s2<sp/>*<sp/>c3<sp/>-<sp/>s1<sp/>*<sp/>c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="2880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2883"><highlight class="comment"><sp/>*<sp/>Euler2312Gibbs(E,Q)<sp/>translates<sp/>the<sp/>(2-3-1)<sp/>Euler</highlight></codeline>
<codeline lineno="2884"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2885"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2312Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2887"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2312EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Gibbs(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2895"><highlight class="comment"><sp/>*<sp/>Euler2312MRP(E,Q)<sp/>translates<sp/>the<sp/>(2-3-1)<sp/>Euler</highlight></codeline>
<codeline lineno="2896"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2897"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2312MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"></highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2312EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2MRP(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2907"><highlight class="comment"><sp/>*<sp/>Euler2312PRV(E,Q)<sp/>translates<sp/>the<sp/>(2-3-1)<sp/>Euler</highlight></codeline>
<codeline lineno="2908"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2909"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2910"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2312PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2911"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2312EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2PRV(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2919"><highlight class="comment"><sp/>*<sp/>Euler2322C(Q)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="2920"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>2-3-2<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2921"><highlight class="comment"><sp/>*<sp/>Input<sp/>Q<sp/>must<sp/>be<sp/>a<sp/>3x1<sp/>vector<sp/>of<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="2922"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2923"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2322C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="2924"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st1;</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st2;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st3;</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct1;</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct2;</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct3;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"></highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/>st1<sp/>=<sp/>sin(q[0]);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/>ct1<sp/>=<sp/>cos(q[0]);</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/>st2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/>ct2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/>st3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/>ct3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>ct1<sp/>*<sp/>ct2<sp/>*<sp/>ct3<sp/>-<sp/>st1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>ct3<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>-ct2<sp/>*<sp/>ct3<sp/>*<sp/>st1<sp/>-<sp/>ct1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>-ct1<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>ct2;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>st1<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>ct3<sp/>*<sp/>st1<sp/>+<sp/>ct1<sp/>*<sp/>ct2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>ct1<sp/>*<sp/>ct3<sp/>-<sp/>ct2<sp/>*<sp/>st1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="2948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"></highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2951"><highlight class="comment">*<sp/>Euler2322EP(E,Q)<sp/>translates<sp/>the<sp/>232<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="2952"><highlight class="comment">*<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2953"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2322EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2955"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e1;</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e2;</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e3;</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/>e1<sp/>=<sp/>e[0]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/>e2<sp/>=<sp/>e[1]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/>e3<sp/>=<sp/>e[2]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>cos(e2)<sp/>*<sp/>cos(e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>sin(e2)<sp/>*<sp/>sin(e1<sp/>-<sp/>e3);</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>cos(e2)<sp/>*<sp/>sin(e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>sin(e2)<sp/>*<sp/>cos(e1<sp/>-<sp/>e3);</highlight></codeline>
<codeline lineno="2968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2971"><highlight class="comment"><sp/>*<sp/>Euler2322Gibbs(E)<sp/>translates<sp/>the<sp/>(2-3-2)<sp/>Euler</highlight></codeline>
<codeline lineno="2972"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2973"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2322Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2975"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"></highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2322EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Gibbs(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"></highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2983"><highlight class="comment"><sp/>*<sp/>Euler2322MRP(E,Q)<sp/>translates<sp/>the<sp/>(2-3-2)<sp/>Euler</highlight></codeline>
<codeline lineno="2984"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2985"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2322MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2322EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2MRP(ep,<sp/>q);</highlight></codeline>
<codeline lineno="2992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2995"><highlight class="comment"><sp/>*<sp/>Euler2322PRV(E,Q)<sp/>translates<sp/>the<sp/>(2-3-2)<sp/>Euler</highlight></codeline>
<codeline lineno="2996"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="2997"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2998"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler2322PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="2999"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2322EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2PRV(ep,<sp/>q);</highlight></codeline>
<codeline lineno="3004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3007"><highlight class="comment"><sp/>*<sp/>Euler3122C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="3008"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>1-2-3<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="3009"><highlight class="comment"><sp/>*<sp/>Input<sp/>Q<sp/>must<sp/>be<sp/>a<sp/>3x1<sp/>vector<sp/>of<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="3010"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3011"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3122C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="3012"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st1;</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st2;</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st3;</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct1;</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct2;</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct3;</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"></highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/>st1<sp/>=<sp/>sin(q[0]);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/>ct1<sp/>=<sp/>cos(q[0]);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/>st2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/>ct2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/>st3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/>ct3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>ct1<sp/>*<sp/>ct3<sp/>-<sp/>st1<sp/>*<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>ct3<sp/>*<sp/>st1<sp/>+<sp/>ct1<sp/>*<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>-ct2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>-ct2<sp/>*<sp/>st1;</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>ct1<sp/>*<sp/>ct2;</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>st2;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>ct3<sp/>*<sp/>st1<sp/>*<sp/>st2<sp/>+<sp/>ct1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>st1<sp/>*<sp/>st3<sp/>-<sp/>ct1<sp/>*<sp/>ct3<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>ct2<sp/>*<sp/>ct3;</highlight></codeline>
<codeline lineno="3036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3039"><highlight class="comment"><sp/>*<sp/>Euler3122EP(E,Q)<sp/>translates<sp/>the<sp/>312<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="3040"><highlight class="comment"><sp/>*<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3041"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3042"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3122EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1;</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1;</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>cos(e[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>sin(e[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(e[1]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(e[1]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(e[2]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(e[2]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>c1<sp/>*<sp/>c2<sp/>*<sp/>c3<sp/>-<sp/>s1<sp/>*<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>c1<sp/>*<sp/>s2<sp/>*<sp/>c3<sp/>-<sp/>s1<sp/>*<sp/>c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>c1<sp/>*<sp/>c2<sp/>*<sp/>s3<sp/>+<sp/>s1<sp/>*<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>s1<sp/>*<sp/>c2<sp/>*<sp/>c3<sp/>+<sp/>c1<sp/>*<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="3062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3065"><highlight class="comment"><sp/>*<sp/>Euler3122Gibbs(E,Q)<sp/>translates<sp/>the<sp/>(3-1-2)<sp/>Euler</highlight></codeline>
<codeline lineno="3066"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3067"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3068"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3122Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3069"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3122EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Gibbs(ep,<sp/>q);</highlight></codeline>
<codeline lineno="3074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"></highlight></codeline>
<codeline lineno="3076"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3077"><highlight class="comment"><sp/>*<sp/>Euler3122MRP(E,Q)<sp/>translates<sp/>the<sp/>(3-1-2)<sp/>Euler</highlight></codeline>
<codeline lineno="3078"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3079"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3122MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3081"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3122EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2MRP(ep,<sp/>q);</highlight></codeline>
<codeline lineno="3086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3089"><highlight class="comment"><sp/>*<sp/>Euler3122PRV(E,Q)<sp/>translates<sp/>the<sp/>(3-1-2)<sp/>Euler</highlight></codeline>
<codeline lineno="3090"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3091"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3092"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3122PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3093"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3122EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2PRV(ep,<sp/>q);</highlight></codeline>
<codeline lineno="3098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3101"><highlight class="comment"><sp/>*<sp/>Euler3132C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="3102"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>3-1-3<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="3103"><highlight class="comment"><sp/>*<sp/>Input<sp/>Q<sp/>must<sp/>be<sp/>a<sp/>3x1<sp/>vector<sp/>of<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="3104"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3132C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="3106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st1;</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st2;</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st3;</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct1;</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct2;</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct3;</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/>st1<sp/>=<sp/>sin(q[0]);</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/>ct1<sp/>=<sp/>cos(q[0]);</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/>st2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/>ct2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/>st3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/>ct3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>ct3<sp/>*<sp/>ct1<sp/>-<sp/>st3<sp/>*<sp/>ct2<sp/>*<sp/>st1;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>ct3<sp/>*<sp/>st1<sp/>+<sp/>st3<sp/>*<sp/>ct2<sp/>*<sp/>ct1;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>st3<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>-st3<sp/>*<sp/>ct1<sp/>-<sp/>ct3<sp/>*<sp/>ct2<sp/>*<sp/>st1;</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>-st3<sp/>*<sp/>st1<sp/>+<sp/>ct3<sp/>*<sp/>ct2<sp/>*<sp/>ct1;</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>ct3<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>st2<sp/>*<sp/>st1;</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>-st2<sp/>*<sp/>ct1;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>ct2;</highlight></codeline>
<codeline lineno="3130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3133"><highlight class="comment"><sp/>*<sp/>Euler3132EP(E,Q)<sp/>translates<sp/>the<sp/>313<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="3134"><highlight class="comment"><sp/>*<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3135"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3132EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e1;</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e2;</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e3;</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"></highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/>e1<sp/>=<sp/>e[0]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/>e2<sp/>=<sp/>e[1]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/>e3<sp/>=<sp/>e[2]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"></highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>cos(e2)<sp/>*<sp/>cos(e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>sin(e2)<sp/>*<sp/>cos(e1<sp/>-<sp/>e3);</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>sin(e2)<sp/>*<sp/>sin(e1<sp/>-<sp/>e3);</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>cos(e2)<sp/>*<sp/>sin(e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="3150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3153"><highlight class="comment"><sp/>*<sp/>Euler3132Gibbs(E,Q)<sp/>translates<sp/>the<sp/>(3-1-3)<sp/>Euler</highlight></codeline>
<codeline lineno="3154"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3155"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3132Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"></highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3132EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Gibbs(ep,<sp/>q);</highlight></codeline>
<codeline lineno="3162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3165"><highlight class="comment"><sp/>*<sp/>Euler3132MRP(E,Q)<sp/>translates<sp/>the<sp/>(3-1-3)<sp/>Euler</highlight></codeline>
<codeline lineno="3166"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3167"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3132MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3132EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2MRP(ep,<sp/>q);</highlight></codeline>
<codeline lineno="3174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"></highlight></codeline>
<codeline lineno="3176"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3177"><highlight class="comment"><sp/>*<sp/>Euler3132PRV(E,Q)<sp/>translates<sp/>the<sp/>(3-1-3)<sp/>Euler</highlight></codeline>
<codeline lineno="3178"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3179"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3132PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3132EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2PRV(ep,<sp/>q);</highlight></codeline>
<codeline lineno="3186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3189"><highlight class="comment"><sp/>*<sp/>Euler3212C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="3190"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>3-2-1<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="3191"><highlight class="comment"><sp/>*<sp/>Input<sp/>Q<sp/>must<sp/>be<sp/>a<sp/>3x1<sp/>vector<sp/>of<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="3192"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3212C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="3194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st1;</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st2;</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st3;</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct1;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct2;</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct3;</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/>st1<sp/>=<sp/>sin(q[0]);</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/>ct1<sp/>=<sp/>cos(q[0]);</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/>st2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/>ct2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/>st3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/>ct3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>ct2<sp/>*<sp/>ct1;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>ct2<sp/>*<sp/>st1;</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>-st2;</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>st3<sp/>*<sp/>st2<sp/>*<sp/>ct1<sp/>-<sp/>ct3<sp/>*<sp/>st1;</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>st3<sp/>*<sp/>st2<sp/>*<sp/>st1<sp/>+<sp/>ct3<sp/>*<sp/>ct1;</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>st3<sp/>*<sp/>ct2;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>ct3<sp/>*<sp/>st2<sp/>*<sp/>ct1<sp/>+<sp/>st3<sp/>*<sp/>st1;</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>ct3<sp/>*<sp/>st2<sp/>*<sp/>st1<sp/>-<sp/>st3<sp/>*<sp/>ct1;</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>ct3<sp/>*<sp/>ct2;</highlight></codeline>
<codeline lineno="3218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"></highlight></codeline>
<codeline lineno="3220"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3221"><highlight class="comment"><sp/>*<sp/>Euler3212EPE,Q)<sp/>translates<sp/>the<sp/>321<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="3222"><highlight class="comment"><sp/>*<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3223"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3212EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1;</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2;</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3;</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1;</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2;</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3;</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>cos(e[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>sin(e[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>cos(e[1]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>sin(e[1]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>cos(e[2]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/>s3<sp/>=<sp/>sin(e[2]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>c1<sp/>*<sp/>c2<sp/>*<sp/>c3<sp/>+<sp/>s1<sp/>*<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>c1<sp/>*<sp/>c2<sp/>*<sp/>s3<sp/>-<sp/>s1<sp/>*<sp/>s2<sp/>*<sp/>c3;</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>c1<sp/>*<sp/>s2<sp/>*<sp/>c3<sp/>+<sp/>s1<sp/>*<sp/>c2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>s1<sp/>*<sp/>c2<sp/>*<sp/>c3<sp/>-<sp/>c1<sp/>*<sp/>s2<sp/>*<sp/>s3;</highlight></codeline>
<codeline lineno="3244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3247"><highlight class="comment"><sp/>*<sp/>Euler3212Gibbs(E,Q)<sp/>translates<sp/>the<sp/>(3-2-1)<sp/>Euler</highlight></codeline>
<codeline lineno="3248"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3249"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3212Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3212EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Gibbs(ep,<sp/>q);</highlight></codeline>
<codeline lineno="3256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"></highlight></codeline>
<codeline lineno="3258"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3259"><highlight class="comment"><sp/>*<sp/>Euler3212MRP(E,Q)<sp/>translates<sp/>the<sp/>(3-2-1)<sp/>Euler</highlight></codeline>
<codeline lineno="3260"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3261"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3212MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"></highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3212EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2MRP(ep,<sp/>q);</highlight></codeline>
<codeline lineno="3268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"></highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3271"><highlight class="comment"><sp/>*<sp/>Euler3212PRV(E,Q)<sp/>translates<sp/>the<sp/>(3-2-1)<sp/>Euler</highlight></codeline>
<codeline lineno="3272"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3273"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3212PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3212EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2PRV(ep,<sp/>q);</highlight></codeline>
<codeline lineno="3280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3283"><highlight class="comment"><sp/>*<sp/>Euler3232C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="3284"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>3-2-3<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="3285"><highlight class="comment"><sp/>*<sp/>Input<sp/>Q<sp/>must<sp/>be<sp/>a<sp/>3x1<sp/>vector<sp/>of<sp/>Euler<sp/>angles.</highlight></codeline>
<codeline lineno="3286"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3232C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="3288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st1;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st2;</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st3;</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct1;</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct2;</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct3;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"></highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/>st1<sp/>=<sp/>sin(q[0]);</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/>ct1<sp/>=<sp/>cos(q[0]);</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/>st2<sp/>=<sp/>sin(q[1]);</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/>ct2<sp/>=<sp/>cos(q[1]);</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/>st3<sp/>=<sp/>sin(q[2]);</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/>ct3<sp/>=<sp/>cos(q[2]);</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>ct1<sp/>*<sp/>ct2<sp/>*<sp/>ct3<sp/>-<sp/>st1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>ct2<sp/>*<sp/>ct3<sp/>*<sp/>st1<sp/>+<sp/>ct1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>-ct3<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>-ct3<sp/>*<sp/>st1<sp/>-<sp/>ct1<sp/>*<sp/>ct2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>ct1<sp/>*<sp/>ct3<sp/>-<sp/>ct2<sp/>*<sp/>st1<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>st2<sp/>*<sp/>st3;</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>ct1<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>st1<sp/>*<sp/>st2;</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>ct2;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3314"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3315"><highlight class="comment"><sp/>*<sp/>Euler3232EP(E,Q)<sp/>translates<sp/>the<sp/>323<sp/>Euler<sp/>angle</highlight></codeline>
<codeline lineno="3316"><highlight class="comment"><sp/>*<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3317"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3318"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3232EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e1;</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e2;</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e3;</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/>e1<sp/>=<sp/>e[0]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/>e2<sp/>=<sp/>e[1]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/>e3<sp/>=<sp/>e[2]<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"></highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>cos(e2)<sp/>*<sp/>cos(e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>sin(e2)<sp/>*<sp/>sin(-e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>sin(e2)<sp/>*<sp/>cos(-e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>cos(e2)<sp/>*<sp/>sin(e1<sp/>+<sp/>e3);</highlight></codeline>
<codeline lineno="3332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3335"><highlight class="comment"><sp/>*<sp/>Euler3232Gibbs(E,Q)<sp/>translates<sp/>the<sp/>(3-2-3)<sp/>Euler</highlight></codeline>
<codeline lineno="3336"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3337"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3232Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3232EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Gibbs(ep,<sp/>q);</highlight></codeline>
<codeline lineno="3344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3347"><highlight class="comment"><sp/>*<sp/>Euler3232MRP(E,Q)<sp/>translates<sp/>the<sp/>(3-2-3)<sp/>Euler</highlight></codeline>
<codeline lineno="3348"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>E<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3349"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3232MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3232EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2MRP(ep,<sp/>q);</highlight></codeline>
<codeline lineno="3356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3359"><highlight class="comment"><sp/>*<sp/>Euler3232PRV(E,Q)<sp/>translates<sp/>the<sp/>(3-2-3)<sp/>Euler</highlight></codeline>
<codeline lineno="3360"><highlight class="comment"><sp/>*<sp/>angle<sp/>vector<sp/>Q1<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3361"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Euler3232PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"></highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3232EP(e,<sp/>ep);</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2PRV(ep,<sp/>q);</highlight></codeline>
<codeline lineno="3368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3371"><highlight class="comment"><sp/>*<sp/>Gibbs2C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="3372"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>3x1<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3373"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="3375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1;</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2;</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q3;</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1;</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/>q2<sp/>=<sp/>q[1];</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/>q3<sp/>=<sp/>q[2];</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"></highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>v3Dot(q,<sp/>q);</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>1<sp/>+<sp/>2<sp/>*<sp/>q1<sp/>*<sp/>q1<sp/>-<sp/>d1;</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>2<sp/>*<sp/>(q1<sp/>*<sp/>q2<sp/>+<sp/>q3);</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>2<sp/>*<sp/>(q1<sp/>*<sp/>q3<sp/>-<sp/>q2);</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>2<sp/>*<sp/>(q2<sp/>*<sp/>q1<sp/>-<sp/>q3);</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>1<sp/>+<sp/>2<sp/>*<sp/>q2<sp/>*<sp/>q2<sp/>-<sp/>d1;</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>2<sp/>*<sp/>(q2<sp/>*<sp/>q3<sp/>+<sp/>q1);</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>2<sp/>*<sp/>(q3<sp/>*<sp/>q1<sp/>+<sp/>q2);</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>2<sp/>*<sp/>(q3<sp/>*<sp/>q2<sp/>-<sp/>q1);</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>1<sp/>+<sp/>2<sp/>*<sp/>q3<sp/>*<sp/>q3<sp/>-<sp/>d1;</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>(1<sp/>+<sp/>d1),<sp/>C,<sp/>C);</highlight></codeline>
<codeline lineno="3396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"></highlight></codeline>
<codeline lineno="3398"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3399"><highlight class="comment"><sp/>*<sp/>Gibbs2EP(Q1,Q)<sp/>translates<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q1</highlight></codeline>
<codeline lineno="3400"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3401"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>1<sp/>/<sp/>sqrt(1<sp/>+<sp/>v3Dot(q1,<sp/>q1));</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>q1[0]<sp/>*<sp/>q[0];</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>q1[1]<sp/>*<sp/>q[0];</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>q1[2]<sp/>*<sp/>q[0];</highlight></codeline>
<codeline lineno="3408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"></highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3411"><highlight class="comment"><sp/>*<sp/>Gibbs2Euler121(Q,E)<sp/>translates<sp/>the<sp/>Gibbs</highlight></codeline>
<codeline lineno="3412"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(1-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3413"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3414"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2Euler121(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"></highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/>Gibbs2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler121(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"></highlight></codeline>
<codeline lineno="3422"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3423"><highlight class="comment"><sp/>*<sp/>Gibbs2Euler123(Q,E)<sp/>translates<sp/>the<sp/>Gibbs</highlight></codeline>
<codeline lineno="3424"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(1-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3425"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2Euler123(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"></highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/>Gibbs2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler123(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"></highlight></codeline>
<codeline lineno="3434"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3435"><highlight class="comment"><sp/>*<sp/>Gibbs2Euler131(Q,E)<sp/>translates<sp/>the<sp/>Gibbs</highlight></codeline>
<codeline lineno="3436"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(1-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3437"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3438"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2Euler131(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"></highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/>Gibbs2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler131(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"></highlight></codeline>
<codeline lineno="3446"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3447"><highlight class="comment"><sp/>*<sp/>Gibbs2Euler132(Q,E)<sp/>translates<sp/>the<sp/>Gibbs</highlight></codeline>
<codeline lineno="3448"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(1-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3449"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3450"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2Euler132(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"></highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/>Gibbs2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler132(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"></highlight></codeline>
<codeline lineno="3458"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3459"><highlight class="comment"><sp/>*<sp/>Gibbs2Euler212(Q,E)<sp/>translates<sp/>the<sp/>Gibbs</highlight></codeline>
<codeline lineno="3460"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(2-1-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3461"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3462"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2Euler212(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/>Gibbs2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler212(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"></highlight></codeline>
<codeline lineno="3470"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3471"><highlight class="comment"><sp/>*<sp/>Gibbs2Euler213(Q,E)<sp/>translates<sp/>the<sp/>Gibbs</highlight></codeline>
<codeline lineno="3472"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(2-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3473"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3474"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2Euler213(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"></highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/>Gibbs2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler213(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3483"><highlight class="comment"><sp/>*<sp/>Gibbs2Euler231(Q,E)<sp/>translates<sp/>the<sp/>Gibbs</highlight></codeline>
<codeline lineno="3484"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(2-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3485"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2Euler231(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/>Gibbs2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler231(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight></codeline>
<codeline lineno="3494"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3495"><highlight class="comment"><sp/>*<sp/>Gibbs2Euler232(Q,E)<sp/>translates<sp/>the<sp/>Gibbs</highlight></codeline>
<codeline lineno="3496"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(2-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3497"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2Euler232(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"></highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/>Gibbs2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler232(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3507"><highlight class="comment"><sp/>*<sp/>Gibbs2Euler312(Q,E)<sp/>translates<sp/>the<sp/>Gibbs</highlight></codeline>
<codeline lineno="3508"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(3-1-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3509"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2Euler312(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/>Gibbs2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler312(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"></highlight></codeline>
<codeline lineno="3518"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3519"><highlight class="comment"><sp/>*<sp/>Gibbs2Euler313(Q,E)<sp/>translates<sp/>the<sp/>Gibbs</highlight></codeline>
<codeline lineno="3520"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(3-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3521"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2Euler313(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"></highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/>Gibbs2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler313(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3531"><highlight class="comment"><sp/>*<sp/>Gibbs2Euler321(Q,E)<sp/>translates<sp/>the<sp/>Gibbs</highlight></codeline>
<codeline lineno="3532"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(3-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3533"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2Euler321(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/>Gibbs2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler321(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3543"><highlight class="comment"><sp/>*<sp/>Gibbs2Euler323(Q,E)<sp/>translates<sp/>the<sp/>Gibbs</highlight></codeline>
<codeline lineno="3544"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(3-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3545"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3546"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2Euler323(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/>Gibbs2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler323(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"></highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3555"><highlight class="comment"><sp/>*<sp/>Gibbs2MRP(Q1,Q)<sp/>translates<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q1</highlight></codeline>
<codeline lineno="3556"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3557"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(1.0<sp/>/<sp/>(1<sp/>+<sp/>sqrt(1<sp/>+<sp/>v3Dot(q1,<sp/>q1))),<sp/>q1,<sp/>q);</highlight></codeline>
<codeline lineno="3561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3564"><highlight class="comment"><sp/>*<sp/>Gibbs2PRV(Q1,Q)<sp/>translates<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q1</highlight></codeline>
<codeline lineno="3565"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3566"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3567"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gibbs2PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tp;</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/>tp<sp/>=<sp/>sqrt(v3Dot(q1,<sp/>q1));</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>2<sp/>*<sp/>atan(tp);</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tp<sp/>&lt;<sp/>nearZero)<sp/>{</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>q1[0]<sp/>/<sp/>tp<sp/>*<sp/>p;</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>q1[1]<sp/>/<sp/>tp<sp/>*<sp/>p;</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>q1[2]<sp/>/<sp/>tp<sp/>*<sp/>p;</highlight></codeline>
<codeline lineno="3583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"></highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3586"><highlight class="comment"><sp/>*<sp/>MRP2C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="3587"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>3x1<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3588"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="3590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1;</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2;</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q3;</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S;</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1;</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>q[0];</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/>q2<sp/>=<sp/>q[1];</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/>q3<sp/>=<sp/>q[2];</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>v3Dot(q,<sp/>q);</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/>S<sp/>=<sp/>1<sp/>-<sp/>d1;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>(1<sp/>+<sp/>d1)<sp/>*<sp/>(1<sp/>+<sp/>d1);</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>4<sp/>*<sp/>(2<sp/>*<sp/>q1<sp/>*<sp/>q1<sp/>-<sp/>d1)<sp/>+<sp/>S<sp/>*<sp/>S;</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>8<sp/>*<sp/>q1<sp/>*<sp/>q2<sp/>+<sp/>4<sp/>*<sp/>q3<sp/>*<sp/>S;</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>8<sp/>*<sp/>q1<sp/>*<sp/>q3<sp/>-<sp/>4<sp/>*<sp/>q2<sp/>*<sp/>S;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>8<sp/>*<sp/>q2<sp/>*<sp/>q1<sp/>-<sp/>4<sp/>*<sp/>q3<sp/>*<sp/>S;</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>4<sp/>*<sp/>(2<sp/>*<sp/>q2<sp/>*<sp/>q2<sp/>-<sp/>d1)<sp/>+<sp/>S<sp/>*<sp/>S;</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>8<sp/>*<sp/>q2<sp/>*<sp/>q3<sp/>+<sp/>4<sp/>*<sp/>q1<sp/>*<sp/>S;</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>8<sp/>*<sp/>q3<sp/>*<sp/>q1<sp/>+<sp/>4<sp/>*<sp/>q2<sp/>*<sp/>S;</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>8<sp/>*<sp/>q3<sp/>*<sp/>q2<sp/>-<sp/>4<sp/>*<sp/>q1<sp/>*<sp/>S;</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>4<sp/>*<sp/>(2<sp/>*<sp/>q3<sp/>*<sp/>q3<sp/>-<sp/>d1)<sp/>+<sp/>S<sp/>*<sp/>S;</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(1.<sp/>/<sp/>d,<sp/>C,<sp/>C);</highlight></codeline>
<codeline lineno="3615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"></highlight></codeline>
<codeline lineno="3617"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3618"><highlight class="comment"><sp/>*<sp/>MRP2EP(Q1,Q)<sp/>translates<sp/>the<sp/>MRP<sp/>vector<sp/>Q1</highlight></codeline>
<codeline lineno="3619"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3620"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3621"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ps;</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"></highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/>ps<sp/>=<sp/>1<sp/>+<sp/>v3Dot(q1,<sp/>q1);</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>(1<sp/>-<sp/>v3Dot(q1,<sp/>q1))<sp/>/<sp/>ps;</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>2<sp/>*<sp/>q1[0]<sp/>/<sp/>ps;</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>2<sp/>*<sp/>q1[1]<sp/>/<sp/>ps;</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>2<sp/>*<sp/>q1[2]<sp/>/<sp/>ps;</highlight></codeline>
<codeline lineno="3630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"></highlight></codeline>
<codeline lineno="3632"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3633"><highlight class="comment"><sp/>*<sp/>MRP2Euler121(Q,E)<sp/>translates<sp/>the<sp/>MRP</highlight></codeline>
<codeline lineno="3634"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(1-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3635"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2Euler121(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"></highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler121(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3645"><highlight class="comment"><sp/>*<sp/>MRP2Euler123(Q,E)<sp/>translates<sp/>the<sp/>MRP</highlight></codeline>
<codeline lineno="3646"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(1-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3647"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3648"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2Euler123(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"></highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler123(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3657"><highlight class="comment"><sp/>*<sp/>MRP2Euler131(Q,E)<sp/>translates<sp/>the<sp/>MRP</highlight></codeline>
<codeline lineno="3658"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(1-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3659"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3660"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2Euler131(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler131(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"></highlight></codeline>
<codeline lineno="3668"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3669"><highlight class="comment"><sp/>*<sp/>MRP2Euler132(Q,E)<sp/>translates<sp/>the<sp/>MRP</highlight></codeline>
<codeline lineno="3670"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(1-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3671"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3672"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2Euler132(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler132(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"></highlight></codeline>
<codeline lineno="3680"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3681"><highlight class="comment"><sp/>*<sp/>E<sp/>=<sp/>MRP2Euler212(Q)<sp/>translates<sp/>the<sp/>MRP</highlight></codeline>
<codeline lineno="3682"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(2-1-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3683"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3684"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2Euler212(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler212(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"></highlight></codeline>
<codeline lineno="3692"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3693"><highlight class="comment"><sp/>*<sp/>MRP2Euler213(Q,E)<sp/>translates<sp/>the<sp/>MRP</highlight></codeline>
<codeline lineno="3694"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(2-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3695"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3696"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2Euler213(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"></highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler213(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"></highlight></codeline>
<codeline lineno="3704"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3705"><highlight class="comment"><sp/>*<sp/>MRP2Euler231(Q,E)<sp/>translates<sp/>the<sp/>MRP</highlight></codeline>
<codeline lineno="3706"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(2-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3707"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2Euler231(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler231(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3717"><highlight class="comment"><sp/>*<sp/>MRP2Euler232(Q,E)<sp/>translates<sp/>the<sp/>MRP</highlight></codeline>
<codeline lineno="3718"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(2-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3719"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2Euler232(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler232(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3729"><highlight class="comment"><sp/>*<sp/>MRP2Euler312(Q,E)<sp/>translates<sp/>the<sp/>MRP</highlight></codeline>
<codeline lineno="3730"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(3-1-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3731"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2Euler312(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler312(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3741"><highlight class="comment"><sp/>*<sp/>MRP2Euler313(Q,E)<sp/>translates<sp/>the<sp/>MRP</highlight></codeline>
<codeline lineno="3742"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(3-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3743"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2Euler313(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler313(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"></highlight></codeline>
<codeline lineno="3752"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3753"><highlight class="comment"><sp/>*<sp/>MRP2Euler321(Q,E)<sp/>translates<sp/>the<sp/>MRP</highlight></codeline>
<codeline lineno="3754"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(3-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3755"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3756"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2Euler321(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3757"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"></highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler321(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3765"><highlight class="comment"><sp/>*<sp/>MRP2Euler323(Q,E)<sp/>translates<sp/>the<sp/>MRP</highlight></codeline>
<codeline lineno="3766"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(3-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3767"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2Euler323(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler323(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3777"><highlight class="comment"><sp/>*<sp/>MRP2Gibbs(Q1,Q)<sp/>translates<sp/>the<sp/>MRP<sp/>vector<sp/>Q1</highlight></codeline>
<codeline lineno="3778"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3779"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3780"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3781"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(2.<sp/>/<sp/>(1.<sp/>-<sp/>v3Dot(q1,<sp/>q1)),<sp/>q1,<sp/>q);</highlight></codeline>
<codeline lineno="3783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"></highlight></codeline>
<codeline lineno="3785"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3786"><highlight class="comment"><sp/>*<sp/>MRP2PRV(Q1,Q)<sp/>translates<sp/>the<sp/>MRP<sp/>vector<sp/>Q1</highlight></codeline>
<codeline lineno="3787"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3788"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3789"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRP2PRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tp;</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/>tp<sp/>=<sp/>sqrt(v3Dot(q1,<sp/>q1));</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tp<sp/>&lt;<sp/>nearZero)</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(q,<sp/>0x0,<sp/>3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>4<sp/>*<sp/>atan(tp);</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>q1[0]<sp/>/<sp/>tp<sp/>*<sp/>p;</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>q1[1]<sp/>/<sp/>tp<sp/>*<sp/>p;</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>q1[2]<sp/>/<sp/>tp<sp/>*<sp/>p;</highlight></codeline>
<codeline lineno="3804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3807"><highlight class="comment"><sp/>*<sp/>MRPswitch(Q,s2,s)<sp/>checks<sp/>to<sp/>see<sp/>if<sp/>v3Norm(Q)<sp/>is<sp/>larger<sp/>than<sp/>s2.</highlight></codeline>
<codeline lineno="3808"><highlight class="comment"><sp/>*<sp/>If<sp/>yes,<sp/>then<sp/>the<sp/>MRP<sp/>vector<sp/>Q<sp/>is<sp/>mapped<sp/>to<sp/>its<sp/>shadow<sp/>set.</highlight></codeline>
<codeline lineno="3809"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRPswitch(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*s)</highlight></codeline>
<codeline lineno="3811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2;</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/>q2<sp/>=<sp/>v3Dot(q,<sp/>q);</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(q2<sp/>&gt;<sp/>s2<sp/>*<sp/>s2)<sp/>{</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Scale(-1.<sp/>/<sp/>q2,<sp/>q,<sp/>s);</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(q,<sp/>s);</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"></highlight></codeline>
<codeline lineno="3822"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3823"><highlight class="comment"><sp/>*<sp/>MRPshadow<sp/>forces<sp/>a<sp/>switch<sp/>from<sp/>the<sp/>current<sp/>MRP<sp/>to<sp/>its<sp/>shadow<sp/>set</highlight></codeline>
<codeline lineno="3824"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3825"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MRPshadow(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*qIn,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*qOut)</highlight></codeline>
<codeline lineno="3826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2;</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/>q2<sp/>=<sp/>v3Dot(qIn,<sp/>qIn);</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(-1.<sp/>/<sp/>q2,<sp/>qIn,<sp/>qOut);</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"></highlight></codeline>
<codeline lineno="3834"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3835"><highlight class="comment"><sp/>*<sp/>Makes<sp/>sure<sp/>that<sp/>the<sp/>angle<sp/>x<sp/>lies<sp/>within<sp/>+/-<sp/>Pi.</highlight></codeline>
<codeline lineno="3836"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3837"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wrapToPi(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="3838"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q;</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"></highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/>q<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&gt;<sp/><sp/>M_PI)<sp/>{</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>x<sp/>-<sp/>2<sp/>*<sp/>M_PI;</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"></highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&lt;<sp/>-M_PI)<sp/>{</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>x<sp/>+<sp/>2<sp/>*<sp/>M_PI;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>q;</highlight></codeline>
<codeline lineno="3852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3855"><highlight class="comment"><sp/>*<sp/>PRV2C(Q,C)<sp/>returns<sp/>the<sp/>direction<sp/>cosine</highlight></codeline>
<codeline lineno="3856"><highlight class="comment"><sp/>*<sp/>matrix<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>3x1<sp/>principal<sp/>rotation<sp/>vector</highlight></codeline>
<codeline lineno="3857"><highlight class="comment"><sp/>*<sp/>Q.</highlight></codeline>
<codeline lineno="3858"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3859"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2C(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="3860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q0;</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1;</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2;</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q3;</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp;</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp;</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1;</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v3Norm(q)<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m33SetIdentity(C);</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/>q0<sp/>=<sp/>sqrt(v3Dot(q,<sp/>q));</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>q[0]<sp/>/<sp/>q0;</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/>q2<sp/>=<sp/>q[1]<sp/>/<sp/>q0;</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/>q3<sp/>=<sp/>q[2]<sp/>/<sp/>q0;</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"></highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>cos(q0);</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>sin(q0);</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>1<sp/>-<sp/>cp;</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>q1<sp/>*<sp/>q1<sp/>*<sp/>d1<sp/>+<sp/>cp;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>q1<sp/>*<sp/>q2<sp/>*<sp/>d1<sp/>+<sp/>q3<sp/>*<sp/>sp;</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>q1<sp/>*<sp/>q3<sp/>*<sp/>d1<sp/>-<sp/>q2<sp/>*<sp/>sp;</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>q2<sp/>*<sp/>q1<sp/>*<sp/>d1<sp/>-<sp/>q3<sp/>*<sp/>sp;</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>q2<sp/>*<sp/>q2<sp/>*<sp/>d1<sp/>+<sp/>cp;</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>q2<sp/>*<sp/>q3<sp/>*<sp/>d1<sp/>+<sp/>q1<sp/>*<sp/>sp;</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>q3<sp/>*<sp/>q1<sp/>*<sp/>d1<sp/>+<sp/>q2<sp/>*<sp/>sp;</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>q3<sp/>*<sp/>q2<sp/>*<sp/>d1<sp/>-<sp/>q1<sp/>*<sp/>sp;</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>q3<sp/>*<sp/>q3<sp/>*<sp/>d1<sp/>+<sp/>cp;</highlight></codeline>
<codeline lineno="3892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"></highlight></codeline>
<codeline lineno="3894"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3895"><highlight class="comment"><sp/>*<sp/>PRV2elem(R,Q)<sp/>translates<sp/>a<sp/>prinicpal<sp/>rotation<sp/>vector<sp/>R</highlight></codeline>
<codeline lineno="3896"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>corresponding<sp/>principal<sp/>rotation<sp/>element<sp/>set<sp/>Q.</highlight></codeline>
<codeline lineno="3897"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3898"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2elem(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>sqrt(v3Dot(r,<sp/>r));</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q[0]<sp/>&lt;<sp/>1.0E-12)</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>q[2]<sp/>=<sp/>q[3]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>r[0]<sp/>/<sp/>q[0];</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>r[1]<sp/>/<sp/>q[0];</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>r[2]<sp/>/<sp/>q[0];</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"></highlight></codeline>
<codeline lineno="3913"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3914"><highlight class="comment"><sp/>*<sp/>PRV2EP(Q0,Q)<sp/>translates<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q1</highlight></codeline>
<codeline lineno="3915"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>Euler<sp/>parameter<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="3916"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2EP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="3918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1[4];</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp;</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"></highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2elem(q0,<sp/>q1);</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>sin(q1[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>cos(q1[0]<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>q1[1]<sp/>*<sp/>sp;</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>q1[2]<sp/>*<sp/>sp;</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>q1[3]<sp/>*<sp/>sp;</highlight></codeline>
<codeline lineno="3928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"></highlight></codeline>
<codeline lineno="3930"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3931"><highlight class="comment"><sp/>*<sp/>PRV2Euler121(Q,E)<sp/>translates<sp/>the<sp/>principal<sp/>rotation</highlight></codeline>
<codeline lineno="3932"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(1-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3933"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3934"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2Euler121(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3935"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"></highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler121(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"></highlight></codeline>
<codeline lineno="3942"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3943"><highlight class="comment"><sp/>*<sp/>PRV2Euler123(Q,E)<sp/>translates<sp/>the<sp/>principal<sp/>rotation</highlight></codeline>
<codeline lineno="3944"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(1-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3945"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3946"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2Euler123(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler123(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3955"><highlight class="comment"><sp/>*<sp/>PRV2Euler131(Q,E)<sp/>translates<sp/>the<sp/>principal<sp/>rotation</highlight></codeline>
<codeline lineno="3956"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(1-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3957"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2Euler131(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3959"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler131(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"></highlight></codeline>
<codeline lineno="3966"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3967"><highlight class="comment"><sp/>*<sp/>PRV2Euler132(Q,E)<sp/>translates<sp/>the<sp/>principal<sp/>rotation</highlight></codeline>
<codeline lineno="3968"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(1-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3969"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3970"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2Euler132(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"></highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler132(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3979"><highlight class="comment"><sp/>*<sp/>PRV2Euler212(Q,E)<sp/>translates<sp/>the<sp/>principal<sp/>rotation</highlight></codeline>
<codeline lineno="3980"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(2-1-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3981"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3982"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2Euler212(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3983"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler212(ep,<sp/>e);</highlight></codeline>
<codeline lineno="3988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"></highlight></codeline>
<codeline lineno="3990"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3991"><highlight class="comment"><sp/>*<sp/>PRV2Euler213(Q,E)<sp/>translates<sp/>the<sp/>principal<sp/>rotation</highlight></codeline>
<codeline lineno="3992"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(2-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="3993"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3994"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2Euler213(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="3995"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"></highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler213(ep,<sp/>e);</highlight></codeline>
<codeline lineno="4000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"></highlight></codeline>
<codeline lineno="4002"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4003"><highlight class="comment"><sp/>*<sp/>PRV2Euler231(Q)<sp/>translates<sp/>the<sp/>principal<sp/>rotation</highlight></codeline>
<codeline lineno="4004"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(2-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="4005"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4006"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2Euler231(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="4007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"></highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler231(ep,<sp/>e);</highlight></codeline>
<codeline lineno="4012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"></highlight></codeline>
<codeline lineno="4014"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4015"><highlight class="comment"><sp/>*<sp/>PRV2Euler232(Q,E)<sp/>translates<sp/>the<sp/>principal<sp/>rotation</highlight></codeline>
<codeline lineno="4016"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(2-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="4017"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4018"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2Euler232(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="4019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"></highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler232(ep,<sp/>e);</highlight></codeline>
<codeline lineno="4024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"></highlight></codeline>
<codeline lineno="4026"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4027"><highlight class="comment"><sp/>*<sp/>PRV2Euler312(Q,E)<sp/>translates<sp/>the<sp/>principal<sp/>rotation</highlight></codeline>
<codeline lineno="4028"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(3-1-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="4029"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4030"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2Euler312(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="4031"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"></highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler312(ep,<sp/>e);</highlight></codeline>
<codeline lineno="4036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"></highlight></codeline>
<codeline lineno="4038"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4039"><highlight class="comment"><sp/>*<sp/>PRV2Euler313(Q,E)<sp/>translates<sp/>the<sp/>principal<sp/>rotation</highlight></codeline>
<codeline lineno="4040"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(3-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="4041"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4042"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2Euler313(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="4043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"></highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler313(ep,<sp/>e);</highlight></codeline>
<codeline lineno="4048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"></highlight></codeline>
<codeline lineno="4050"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4051"><highlight class="comment"><sp/>*<sp/>PRV2Euler321(Q,E)<sp/>translates<sp/>the<sp/>principal<sp/>rotation</highlight></codeline>
<codeline lineno="4052"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(3-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="4053"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2Euler321(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="4055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"></highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler321(ep,<sp/>e);</highlight></codeline>
<codeline lineno="4060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"></highlight></codeline>
<codeline lineno="4062"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4063"><highlight class="comment"><sp/>*<sp/>PRV2Euler323(Q,E)<sp/>translates<sp/>the<sp/>principal<sp/>rotation</highlight></codeline>
<codeline lineno="4064"><highlight class="comment"><sp/>*<sp/>vector<sp/>Q<sp/>into<sp/>the<sp/>(3-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>E.</highlight></codeline>
<codeline lineno="4065"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4066"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2Euler323(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e)</highlight></codeline>
<codeline lineno="4067"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ep[4];</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"></highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2EP(q,<sp/>ep);</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/>EP2Euler323(ep,<sp/>e);</highlight></codeline>
<codeline lineno="4072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"></highlight></codeline>
<codeline lineno="4074"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4075"><highlight class="comment"><sp/>*<sp/>PRV2Gibbs(Q0,Q)<sp/>translates<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q1</highlight></codeline>
<codeline lineno="4076"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>Gibbs<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="4077"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4078"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2Gibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="4079"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1[4];</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tp;</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"></highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2elem(q0,<sp/>q1);</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/>tp<sp/>=<sp/>tan(q1[0]<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>q1[1]<sp/>*<sp/>tp;</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>q1[2]<sp/>*<sp/>tp;</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>q1[3]<sp/>*<sp/>tp;</highlight></codeline>
<codeline lineno="4088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"></highlight></codeline>
<codeline lineno="4090"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4091"><highlight class="comment"><sp/>*<sp/>PRV2MRP(Q0,Q)<sp/>translates<sp/>the<sp/>principal<sp/>rotation<sp/>vector<sp/>Q1</highlight></codeline>
<codeline lineno="4092"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>MRP<sp/>vector<sp/>Q.</highlight></codeline>
<codeline lineno="4093"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4094"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PRV2MRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="4095"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1[4];</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tp;</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"></highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2elem(q0,<sp/>q1);</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/>tp<sp/>=<sp/>tan(q1[0]<sp/>/<sp/>4.);</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>q1[1]<sp/>*<sp/>tp;</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>q1[2]<sp/>*<sp/>tp;</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>q1[3]<sp/>*<sp/>tp;</highlight></codeline>
<codeline lineno="4104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"></highlight></codeline>
<codeline lineno="4106"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4107"><highlight class="comment"><sp/>*<sp/>subEP(B1,B2,Q)<sp/>provides<sp/>the<sp/>Euler<sp/>parameter<sp/>vector</highlight></codeline>
<codeline lineno="4108"><highlight class="comment"><sp/>*<sp/>which<sp/>corresponds<sp/>to<sp/>relative<sp/>rotation<sp/>from<sp/>B2</highlight></codeline>
<codeline lineno="4109"><highlight class="comment"><sp/>*<sp/>to<sp/>B1.</highlight></codeline>
<codeline lineno="4110"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subEP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*b1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*b2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="4112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/>q[0]<sp/>=<sp/>b2[0]<sp/>*<sp/>b1[0]<sp/>+<sp/>b2[1]<sp/>*<sp/>b1[1]<sp/>+<sp/>b2[2]<sp/>*<sp/>b1[2]<sp/>+<sp/>b2[3]<sp/>*<sp/>b1[3];</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/>q[1]<sp/>=<sp/>-b2[1]<sp/>*<sp/>b1[0]<sp/>+<sp/>b2[0]<sp/>*<sp/>b1[1]<sp/>+<sp/>b2[3]<sp/>*<sp/>b1[2]<sp/>-<sp/>b2[2]<sp/>*<sp/>b1[3];</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/>q[2]<sp/>=<sp/>-b2[2]<sp/>*<sp/>b1[0]<sp/>-<sp/>b2[3]<sp/>*<sp/>b1[1]<sp/>+<sp/>b2[0]<sp/>*<sp/>b1[2]<sp/>+<sp/>b2[1]<sp/>*<sp/>b1[3];</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/>q[3]<sp/>=<sp/>-b2[3]<sp/>*<sp/>b1[0]<sp/>+<sp/>b2[2]<sp/>*<sp/>b1[1]<sp/>-<sp/>b2[1]<sp/>*<sp/>b1[2]<sp/>+<sp/>b2[0]<sp/>*<sp/>b1[3];</highlight></codeline>
<codeline lineno="4117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4120"><highlight class="comment"><sp/>*<sp/>subEuler121(E,E1,E2)<sp/>computes<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="4121"><highlight class="comment"><sp/>*<sp/>(1-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>from<sp/>E1<sp/>to<sp/>E.</highlight></codeline>
<codeline lineno="4122"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subEuler121(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2)</highlight></codeline>
<codeline lineno="4124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp;</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp;</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dum;</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"></highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>cos(e[1]);</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(e1[1]);</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>sin(e[1]);</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(e1[1]);</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/>dum<sp/>=<sp/>e[0]<sp/>-<sp/>e1[0];</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"></highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[1]<sp/>=<sp/>safeAcos(cp1<sp/>*<sp/>cp<sp/>+<sp/>sp1<sp/>*<sp/>sp<sp/>*<sp/>cos(dum));</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(e2[1]);</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[0]<sp/>=<sp/>wrapToPi(-e1[2]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp<sp/>*<sp/>sin(dum),<sp/>cp2<sp/>*<sp/>cp1<sp/>-<sp/>cp));</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[2]<sp/>=<sp/>wrapToPi(e[2]<sp/>-<sp/>atan2(sp1<sp/>*<sp/>sp<sp/>*<sp/>sin(dum),<sp/>cp1<sp/>-<sp/>cp<sp/>*<sp/>cp2));</highlight></codeline>
<codeline lineno="4142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"></highlight></codeline>
<codeline lineno="4144"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4145"><highlight class="comment"><sp/>*<sp/>subEuler123(E,E1,E2)<sp/>computes<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="4146"><highlight class="comment"><sp/>*<sp/>(1-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>from<sp/>E1<sp/>to<sp/>E.</highlight></codeline>
<codeline lineno="4147"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subEuler123(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2)</highlight></codeline>
<codeline lineno="4149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3];</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C1[3][3];</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C2[3][3];</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"></highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1232C(e,<sp/>C);</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1232C(e1,<sp/>C1);</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33t(C,<sp/>C1,<sp/>C2);</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/>C2Euler123(C2,<sp/>e2);</highlight></codeline>
<codeline lineno="4158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"></highlight></codeline>
<codeline lineno="4160"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4161"><highlight class="comment"><sp/>*<sp/>subEuler131(E,E1,E2)<sp/>computes<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="4162"><highlight class="comment"><sp/>*<sp/>(1-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>from<sp/>E1<sp/>to<sp/>E.</highlight></codeline>
<codeline lineno="4163"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subEuler131(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2)</highlight></codeline>
<codeline lineno="4165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp;</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp;</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dum;</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"></highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>cos(e[1]);</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(e1[1]);</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>sin(e[1]);</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(e1[1]);</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/>dum<sp/>=<sp/>e[0]<sp/>-<sp/>e1[0];</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"></highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[1]<sp/>=<sp/>safeAcos(cp1<sp/>*<sp/>cp<sp/>+<sp/>sp1<sp/>*<sp/>sp<sp/>*<sp/>cos(dum));</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(e2[1]);</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[0]<sp/>=<sp/>wrapToPi(-e1[2]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp<sp/>*<sp/>sin(dum),<sp/>cp2<sp/>*<sp/>cp1<sp/>-<sp/>cp));</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[2]<sp/>=<sp/>wrapToPi(e[2]<sp/>-<sp/>atan2(sp1<sp/>*<sp/>sp<sp/>*<sp/>sin(dum),<sp/>cp1<sp/>-<sp/>cp<sp/>*<sp/>cp2));</highlight></codeline>
<codeline lineno="4183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"></highlight></codeline>
<codeline lineno="4185"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4186"><highlight class="comment"><sp/>*<sp/>subEuler132(E,E1,E2)<sp/>computes<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="4187"><highlight class="comment"><sp/>*<sp/>(1-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>from<sp/>E1<sp/>to<sp/>E.</highlight></codeline>
<codeline lineno="4188"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subEuler132(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2)</highlight></codeline>
<codeline lineno="4190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3];</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C1[3][3];</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C2[3][3];</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"></highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1322C(e,<sp/>C);</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler1322C(e1,<sp/>C1);</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33t(C,<sp/>C1,<sp/>C2);</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/>C2Euler132(C2,<sp/>e2);</highlight></codeline>
<codeline lineno="4199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"></highlight></codeline>
<codeline lineno="4201"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4202"><highlight class="comment"><sp/>*<sp/>subEuler212(E,E1,E2)<sp/>computes<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="4203"><highlight class="comment"><sp/>*<sp/>(2-1-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>from<sp/>E1<sp/>to<sp/>E.</highlight></codeline>
<codeline lineno="4204"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subEuler212(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2)</highlight></codeline>
<codeline lineno="4206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp;</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp;</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dum;</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"></highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>cos(e[1]);</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(e1[1]);</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>sin(e[1]);</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(e1[1]);</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/>dum<sp/>=<sp/>e[0]<sp/>-<sp/>e1[0];</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"></highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[1]<sp/>=<sp/>safeAcos(cp1<sp/>*<sp/>cp<sp/>+<sp/>sp1<sp/>*<sp/>sp<sp/>*<sp/>cos(dum));</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(e2[1]);</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[0]<sp/>=<sp/>wrapToPi(-e1[2]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp<sp/>*<sp/>sin(dum),<sp/>cp2<sp/>*<sp/>cp1<sp/>-<sp/>cp));</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[2]<sp/>=<sp/>wrapToPi(e[2]<sp/>-<sp/>atan2(sp1<sp/>*<sp/>sp<sp/>*<sp/>sin(dum),<sp/>cp1<sp/>-<sp/>cp<sp/>*<sp/>cp2));</highlight></codeline>
<codeline lineno="4224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"></highlight></codeline>
<codeline lineno="4226"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4227"><highlight class="comment"><sp/>*<sp/>subEuler213(E,E1,E2)<sp/>computes<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="4228"><highlight class="comment"><sp/>*<sp/>(2-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>from<sp/>E1<sp/>to<sp/>E.</highlight></codeline>
<codeline lineno="4229"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subEuler213(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2)</highlight></codeline>
<codeline lineno="4231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3];</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C1[3][3];</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C2[3][3];</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"></highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2132C(e,<sp/>C);</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2132C(e1,<sp/>C1);</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33t(C,<sp/>C1,<sp/>C2);</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/>C2Euler213(C2,<sp/>e2);</highlight></codeline>
<codeline lineno="4240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"></highlight></codeline>
<codeline lineno="4242"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4243"><highlight class="comment"><sp/>*<sp/>subEuler231(E,E1,E2)<sp/>computes<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="4244"><highlight class="comment"><sp/>*<sp/>(2-3-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>from<sp/>E1<sp/>to<sp/>E.</highlight></codeline>
<codeline lineno="4245"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subEuler231(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2)</highlight></codeline>
<codeline lineno="4247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3];</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C1[3][3];</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C2[3][3];</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"></highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2312C(e,<sp/>C);</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler2312C(e1,<sp/>C1);</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33t(C,<sp/>C1,<sp/>C2);</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/>C2Euler231(C2,<sp/>e2);</highlight></codeline>
<codeline lineno="4256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"></highlight></codeline>
<codeline lineno="4258"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4259"><highlight class="comment"><sp/>*<sp/>subEuler232(E,E1,E2)<sp/>computes<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="4260"><highlight class="comment"><sp/>*<sp/>(2-3-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>from<sp/>E1<sp/>to<sp/>E.</highlight></codeline>
<codeline lineno="4261"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subEuler232(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2)</highlight></codeline>
<codeline lineno="4263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp;</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp;</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dum;</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>cos(e[1]);</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(e1[1]);</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>sin(e[1]);</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(e1[1]);</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/>dum<sp/>=<sp/>e[0]<sp/>-<sp/>e1[0];</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"></highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[1]<sp/>=<sp/>safeAcos(cp1<sp/>*<sp/>cp<sp/>+<sp/>sp1<sp/>*<sp/>sp<sp/>*<sp/>cos(dum));</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(e2[1]);</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[0]<sp/>=<sp/>wrapToPi(-e1[2]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp<sp/>*<sp/>sin(dum),<sp/>cp2<sp/>*<sp/>cp1<sp/>-<sp/>cp));</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[2]<sp/>=<sp/>wrapToPi(e[2]<sp/>-<sp/>atan2(sp1<sp/>*<sp/>sp<sp/>*<sp/>sin(dum),<sp/>cp1<sp/>-<sp/>cp<sp/>*<sp/>cp2));</highlight></codeline>
<codeline lineno="4281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"></highlight></codeline>
<codeline lineno="4283"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4284"><highlight class="comment"><sp/>*<sp/>subEuler312(E,E1,E2)<sp/>computes<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="4285"><highlight class="comment"><sp/>*<sp/>(3-1-2)<sp/>Euler<sp/>angle<sp/>vector<sp/>from<sp/>E1<sp/>to<sp/>E.</highlight></codeline>
<codeline lineno="4286"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subEuler312(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2)</highlight></codeline>
<codeline lineno="4288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3];</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C1[3][3];</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C2[3][3];</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"></highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3122C(e,<sp/>C);</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3122C(e1,<sp/>C1);</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33t(C,<sp/>C1,<sp/>C2);</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/>C2Euler312(C2,<sp/>e2);</highlight></codeline>
<codeline lineno="4297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"></highlight></codeline>
<codeline lineno="4299"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4300"><highlight class="comment"><sp/>*<sp/>subEuler313(E,E1,E2)<sp/>computes<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="4301"><highlight class="comment"><sp/>*<sp/>(3-1-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>from<sp/>E1<sp/>to<sp/>E.</highlight></codeline>
<codeline lineno="4302"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subEuler313(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2)</highlight></codeline>
<codeline lineno="4304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp;</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp;</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dum;</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"></highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>cos(e[1]);</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(e1[1]);</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>sin(e[1]);</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(e1[1]);</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/>dum<sp/>=<sp/>e[0]<sp/>-<sp/>e1[0];</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"></highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[1]<sp/>=<sp/>safeAcos(cp1<sp/>*<sp/>cp<sp/>+<sp/>sp1<sp/>*<sp/>sp<sp/>*<sp/>cos(dum));</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(e2[1]);</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[0]<sp/>=<sp/>wrapToPi(-e1[2]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp<sp/>*<sp/>sin(dum),<sp/>cp2<sp/>*<sp/>cp1<sp/>-<sp/>cp));</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[2]<sp/>=<sp/>wrapToPi(e[2]<sp/>-<sp/>atan2(sp1<sp/>*<sp/>sp<sp/>*<sp/>sin(dum),<sp/>cp1<sp/>-<sp/>cp<sp/>*<sp/>cp2));</highlight></codeline>
<codeline lineno="4322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"></highlight></codeline>
<codeline lineno="4324"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4325"><highlight class="comment"><sp/>*<sp/>subEuler321(E,E1,E2)<sp/>computes<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="4326"><highlight class="comment"><sp/>*<sp/>(3-2-1)<sp/>Euler<sp/>angle<sp/>vector<sp/>from<sp/>E1<sp/>to<sp/>E.</highlight></codeline>
<codeline lineno="4327"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4328"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subEuler321(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2)</highlight></codeline>
<codeline lineno="4329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3];</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C1[3][3];</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C2[3][3];</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"></highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3212C(e,<sp/>C);</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3212C(e1,<sp/>C1);</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33t(C,<sp/>C1,<sp/>C2);</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/>C2Euler321(C2,<sp/>e2);</highlight></codeline>
<codeline lineno="4338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"></highlight></codeline>
<codeline lineno="4340"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4341"><highlight class="comment"><sp/>*<sp/>subEuler323(E,E1,E2)<sp/>computes<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="4342"><highlight class="comment"><sp/>*<sp/>(3-2-3)<sp/>Euler<sp/>angle<sp/>vector<sp/>from<sp/>E1<sp/>to<sp/>E.</highlight></codeline>
<codeline lineno="4343"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4344"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subEuler323(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*e2)</highlight></codeline>
<codeline lineno="4345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp;</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp;</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dum;</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"></highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>cos(e[1]);</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(e1[1]);</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>sin(e[1]);</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(e1[1]);</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/>dum<sp/>=<sp/>e[0]<sp/>-<sp/>e1[0];</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"></highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[1]<sp/>=<sp/>safeAcos(cp1<sp/>*<sp/>cp<sp/>+<sp/>sp1<sp/>*<sp/>sp<sp/>*<sp/>cos(dum));</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(e2[1]);</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[0]<sp/>=<sp/>wrapToPi(-e1[2]<sp/>+<sp/>atan2(sp1<sp/>*<sp/>sp<sp/>*<sp/>sin(dum),<sp/>cp2<sp/>*<sp/>cp1<sp/>-<sp/>cp));</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/>e2[2]<sp/>=<sp/>wrapToPi(e[2]<sp/>-<sp/>atan2(sp1<sp/>*<sp/>sp<sp/>*<sp/>sin(dum),<sp/>cp1<sp/>-<sp/>cp<sp/>*<sp/>cp2));</highlight></codeline>
<codeline lineno="4363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"></highlight></codeline>
<codeline lineno="4365"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4366"><highlight class="comment"><sp/>*<sp/>subGibbs(Q1,Q2,Q)<sp/>provides<sp/>the<sp/>Gibbs<sp/>vector</highlight></codeline>
<codeline lineno="4367"><highlight class="comment"><sp/>*<sp/>which<sp/>corresponds<sp/>to<sp/>relative<sp/>rotation<sp/>from<sp/>Q2</highlight></codeline>
<codeline lineno="4368"><highlight class="comment"><sp/>*<sp/>to<sp/>Q1.</highlight></codeline>
<codeline lineno="4369"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4370"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subGibbs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="4371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1[3];</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"></highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(q1,<sp/>q2,<sp/>d1);</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(q1,<sp/>d1,<sp/>q);</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Subtract(q,<sp/>q2,<sp/>q);</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(1.<sp/>/<sp/>(1.<sp/>+<sp/>v3Dot(q1,<sp/>q2)),<sp/>q,<sp/>q);</highlight></codeline>
<codeline lineno="4378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"></highlight></codeline>
<codeline lineno="4380"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4381"><highlight class="comment"><sp/>*<sp/>subMRP(Q1,Q2,Q)<sp/>provides<sp/>the<sp/>MRP<sp/>vector</highlight></codeline>
<codeline lineno="4382"><highlight class="comment"><sp/>*<sp/>which<sp/>corresponds<sp/>to<sp/>relative<sp/>rotation<sp/>from<sp/>Q2</highlight></codeline>
<codeline lineno="4383"><highlight class="comment"><sp/>*<sp/>to<sp/>Q1.</highlight></codeline>
<codeline lineno="4384"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subMRP(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="4386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1[3];</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1[3];</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det;</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mag;</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"></highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(q1,<sp/>s1);</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/>det<sp/>=<sp/>(1.<sp/>+<sp/>v3Dot(s1,<sp/>s1)*v3Dot(q2,<sp/>q2)<sp/>+<sp/>2.*v3Dot(s1,<sp/>q2));</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(det)<sp/>&lt;<sp/>0.1)<sp/>{</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mag<sp/>=<sp/>v3Dot(s1,<sp/>s1);</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Scale(-1.0/mag,<sp/>s1,<sp/>s1);</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det<sp/>=<sp/>(1.<sp/>+<sp/>v3Dot(s1,<sp/>s1)*v3Dot(q2,<sp/>q2)<sp/>+<sp/>2.*v3Dot(s1,<sp/>q2));</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"></highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(s1,<sp/>q2,<sp/>d1);</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(2.,<sp/>d1,<sp/>q);</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(1.<sp/>-<sp/>v3Dot(q2,<sp/>q2),<sp/>s1,<sp/>d1);</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(q,<sp/>d1,<sp/>q);</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(1.<sp/>-<sp/>v3Dot(s1,<sp/>s1),<sp/>q2,<sp/>d1);</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Subtract(q,<sp/>d1,<sp/>q);</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(1.<sp/>/<sp/>det,<sp/>q,<sp/>q);</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"></highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>map<sp/>MRP<sp/>to<sp/>inner<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/>mag<sp/>=<sp/>v3Dot(q,<sp/>q);</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mag<sp/>&gt;<sp/>1.0){</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Scale(-1./mag,<sp/>q,<sp/>q);</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"></highlight></codeline>
<codeline lineno="4414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"></highlight></codeline>
<codeline lineno="4416"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4417"><highlight class="comment"><sp/>*<sp/>subPRV(Q1,Q2,Q)<sp/>provides<sp/>the<sp/>prinipal<sp/>rotation<sp/>vector</highlight></codeline>
<codeline lineno="4418"><highlight class="comment"><sp/>*<sp/>which<sp/>corresponds<sp/>to<sp/>relative<sp/>principal<sp/>rotation<sp/>from<sp/>Q2</highlight></codeline>
<codeline lineno="4419"><highlight class="comment"><sp/>*<sp/>to<sp/>Q1.</highlight></codeline>
<codeline lineno="4420"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>subPRV(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q10,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q20,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*q)</highlight></codeline>
<codeline lineno="4422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q1[4];</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q2[4];</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp1;</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp2;</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp1;</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp2;</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e1[3];</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e2[3];</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp;</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"></highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2elem(q10,<sp/>q1);</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2elem(q20,<sp/>q2);</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/>cp1<sp/>=<sp/>cos(q1[0]<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/>cp2<sp/>=<sp/>cos(q2[0]<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/>sp1<sp/>=<sp/>sin(q1[0]<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/>sp2<sp/>=<sp/>sin(q2[0]<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(&amp;(q1[1]),<sp/>e1);</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(&amp;(q2[1]),<sp/>e2);</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"></highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>2.*safeAcos(cp1<sp/>*<sp/>cp2<sp/>+<sp/>sp1<sp/>*<sp/>sp2<sp/>*<sp/>v3Dot(e1,<sp/>e2));</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>sin(p<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"></highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(e1,<sp/>e2,<sp/>q1);</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(sp1<sp/>*<sp/>sp2,<sp/>q1,<sp/>q);</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(cp2<sp/>*<sp/>sp1,<sp/>e1,<sp/>q1);</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(q1,<sp/>q,<sp/>q);</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(cp1<sp/>*<sp/>sp2,<sp/>e2,<sp/>q1);</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Subtract(q,<sp/>q1,<sp/>q);</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(p<sp/>/<sp/>sp,<sp/>q,<sp/>q);</highlight></codeline>
<codeline lineno="4453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"></highlight></codeline>
<codeline lineno="4455"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4456"><highlight class="comment"><sp/>*<sp/>Mi(theta,<sp/>a,<sp/>C)<sp/>returns<sp/>the<sp/>rotation<sp/>matrix<sp/>corresponding</highlight></codeline>
<codeline lineno="4457"><highlight class="comment"><sp/>*<sp/>to<sp/>a<sp/>single<sp/>axis<sp/>rotation<sp/>about<sp/>axis<sp/>a<sp/>by<sp/>the<sp/>angle<sp/>theta</highlight></codeline>
<codeline lineno="4458"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4459"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Mi(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C[3][3])</highlight></codeline>
<codeline lineno="4460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"></highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>cos(theta);</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>sin(theta);</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"></highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(a)<sp/>{</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/><sp/>c;</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/><sp/>s;</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>-s;</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/><sp/>c;</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"></highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/><sp/>c;</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>-s;</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/><sp/>s;</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/><sp/>c;</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"></highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[0][0]<sp/>=<sp/><sp/>c;</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[0][1]<sp/>=<sp/><sp/>s;</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[0][2]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[1][0]<sp/>=<sp/>-s;</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[1][1]<sp/>=<sp/><sp/>c;</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[1][2]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[2][0]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[2][1]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C[2][2]<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"></highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BSK_PRINT(MSG_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Mi()<sp/>error:<sp/>incorrect<sp/>axis<sp/>%d<sp/>selected.&quot;</highlight><highlight class="normal">,<sp/>a);</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"></highlight></codeline>
<codeline lineno="4509"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4510"><highlight class="comment"><sp/>*<sp/>tilde(theta,<sp/>mat)<sp/>returns<sp/>the<sp/>the<sp/>3x3<sp/>cross<sp/>product<sp/>matrix</highlight></codeline>
<codeline lineno="4511"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4512"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/>tilde(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mat[3][3])</highlight></codeline>
<codeline lineno="4513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/>m33SetZero(mat);</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0][1]<sp/>=<sp/>-v[2];</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1][0]<sp/>=<sp/>v[2];</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0][2]<sp/>=<sp/>v[1];</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2][0]<sp/>=<sp/>-v[1];</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1][2]<sp/>=<sp/>-v[0];</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2][1]<sp/>=<sp/>v[0];</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"></highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4523"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/rigidBodyKinematics.c"/>
  </compounddef>
</doxygen>
