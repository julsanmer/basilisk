<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="inertial3_d_spin_8c" kind="file" language="C++">
    <compoundname>inertial3DSpin.c</compoundname>
    <includes refid="inertial3_d_spin_8h" local="yes">fswAlgorithms/attGuidance/inertial3DSpin/inertial3DSpin.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">fswAlgorithms/fswUtilities/fswDefinitions.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/rigidBodyKinematics.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/inertial3DSpin/inertial3DSpin.c</label>
        <link refid="inertial3_d_spin_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fswAlgorithms/attGuidance/inertial3DSpin/inertial3DSpin.h</label>
        <link refid="inertial3_d_spin_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="9">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="8">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="10">
        <label>architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="5">
        <label>cMsgCInterface/AttRefMsg_C.h</label>
      </node>
      <node id="7">
        <label>fswAlgorithms/fswUtilities/fswDefinitions.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="inertial3_d_spin_8c_1a68cdb3b9431978be6aeabd4dc4249a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_inertial3DSpin</definition>
        <argsstring>(inertial3DSpinConfig *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_inertial3DSpin</name>
        <param>
          <type><ref refid="structinertial3_d_spin_config" kindref="compound">inertial3DSpinConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initializes the configData for this module. It checks to ensure that the inputs are sane and then creates the output message <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with this module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Create output message for module</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/inertial3DSpin/inertial3DSpin.c" line="50" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/inertial3DSpin/inertial3DSpin.c" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="inertial3_d_spin_8c_1a040335719ec8d2253e8a9c7b1ed2cc31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_inertial3DSpin</definition>
        <argsstring>(inertial3DSpinConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_inertial3DSpin</name>
        <param>
          <type><ref refid="structinertial3_d_spin_config" kindref="compound">inertial3DSpinConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs a complete reset of the module. Local module variables that retain time varying states between function calls are reset to their default values. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the MRP steering control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/inertial3DSpin/inertial3DSpin.c" line="64" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/inertial3DSpin/inertial3DSpin.c" bodystart="64" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="inertial3_d_spin_8c_1adb721e9626e7ed8283eca8abe183f170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_inertial3DSpin</definition>
        <argsstring>(inertial3DSpinConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_inertial3DSpin</name>
        <param>
          <type><ref refid="structinertial3_d_spin_config" kindref="compound">inertial3DSpinConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs all the main computations of the module <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the MRP Steering attitude control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Read input message</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Get input reference and compute integration time step to use downstream</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Generate inertial 3D Spinning Reference</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Write output message</para>
</listitem></itemizedlist>
</para>
<para>Update prior time to current for next evaluation</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/inertial3DSpin/inertial3DSpin.c" line="78" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/inertial3DSpin/inertial3DSpin.c" bodystart="78" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="inertial3_d_spin_8c_1ab3a01e4d403ede61eeb3585eefa0c090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void computeReference_inertial3DSpin</definition>
        <argsstring>(inertial3DSpinConfig *configData, double omega_R0N_N[3], double domega_R0N_N[3], double omega_RR0_R0[3], double dt)</argsstring>
        <name>computeReference_inertial3DSpin</name>
        <param>
          <type><ref refid="structinertial3_d_spin_config" kindref="compound">inertial3DSpinConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>double</type>
          <declname>omega_R0N_N</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>domega_R0N_N</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>omega_RR0_R0</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Compute angular rate</para>
<para>Compute angular acceleration</para>
<para>Integrate Attitude</para>
<para>Copy output in AttRefMsgPayload struct</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/inertial3DSpin/inertial3DSpin.c" line="113" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/inertial3DSpin/inertial3DSpin.c" bodystart="113" bodyend="148"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/>Inertial<sp/>3D<sp/>Spin<sp/>Module</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>University<sp/>of<sp/>Colorado,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>(AVS)<sp/>Lab</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Unpublished<sp/>Copyright<sp/>(c)<sp/>2012-2015<sp/>University<sp/>of<sp/>Colorado,<sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modify<sp/>the<sp/>path<sp/>to<sp/>reflect<sp/>the<sp/>new<sp/>module<sp/>names<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fswAlgorithms/attGuidance/inertial3DSpin/inertial3DSpin.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fswAlgorithms/fswUtilities/fswDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>Pull<sp/>in<sp/>support<sp/>files<sp/>from<sp/>other<sp/>modules.<sp/><sp/>Be<sp/>sure<sp/>to<sp/>use<sp/>the<sp/>absolute<sp/>path<sp/>relative<sp/>to<sp/>Basilisk<sp/>directory.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_inertial3DSpin(<ref refid="structinertial3_d_spin_config" kindref="compound">inertial3DSpinConfig</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsg_C_init(&amp;configData-&gt;<ref refid="structinertial3_d_spin_config_1a4af08f77ae22c1be25e450a0efb2f6f5" kindref="member">attRefOutMsg</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_inertial3DSpin(<ref refid="structinertial3_d_spin_config" kindref="compound">inertial3DSpinConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structinertial3_d_spin_config_1a120c2c1358de3aa9a7f3d3c80eb06fd8" kindref="member">priorTime</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>the<sp/>prior<sp/>time<sp/>flag<sp/>state.<sp/><sp/>If<sp/>set</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>zero,<sp/>the<sp/>control<sp/>time<sp/>step<sp/>is<sp/>not<sp/>evaluated<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>function<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_inertial3DSpin(<ref refid="structinertial3_d_spin_config" kindref="compound">inertial3DSpinConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsgPayload<sp/>attRefInMsgBuffer;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AttRefMsg_C_isLinked(&amp;configData-&gt;<ref refid="structinertial3_d_spin_config_1adc761c51ea65d52d1f9fbfe6a911eefa" kindref="member">attRefInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attRefInMsgBuffer<sp/>=<sp/>AttRefMsg_C_read(&amp;configData-&gt;<ref refid="structinertial3_d_spin_config_1adc761c51ea65d52d1f9fbfe6a911eefa" kindref="member">attRefInMsg</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attRefInMsgBuffer<sp/>=<sp/>AttRefMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt;<sp/></highlight><highlight class="comment">/*<sp/>integration<sp/>time<sp/>step<sp/>[s]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="structinertial3_d_spin_config_1a120c2c1358de3aa9a7f3d3c80eb06fd8" kindref="member">priorTime</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(attRefInMsgBuffer.sigma_RN,<sp/>configData-&gt;<ref refid="structinertial3_d_spin_config_1aaee4d9851ed9350719642516446fc421" kindref="member">sigma_RN</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>(callTime<sp/>-<sp/>configData-&gt;<ref refid="structinertial3_d_spin_config_1a120c2c1358de3aa9a7f3d3c80eb06fd8" kindref="member">priorTime</ref>)<sp/>*<sp/>NANO2SEC;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structinertial3_d_spin_config_1aadd72337c891a968aff3f87bdfcef7cc" kindref="member">attRefOutBuffer</ref><sp/>=<sp/>AttRefMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>computeReference_inertial3DSpin(configData,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attRefInMsgBuffer.omega_RN_N,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attRefInMsgBuffer.domega_RN_N,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structinertial3_d_spin_config_1afe09f2f2417fe233d57f39c5ed556778" kindref="member">omega_RR0_R0</ref>,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsg_C_write(&amp;configData-&gt;<ref refid="structinertial3_d_spin_config_1aadd72337c891a968aff3f87bdfcef7cc" kindref="member">attRefOutBuffer</ref>,<sp/>&amp;configData-&gt;<ref refid="structinertial3_d_spin_config_1a4af08f77ae22c1be25e450a0efb2f6f5" kindref="member">attRefOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structinertial3_d_spin_config_1a120c2c1358de3aa9a7f3d3c80eb06fd8" kindref="member">priorTime</ref><sp/>=<sp/>callTime;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeReference_inertial3DSpin(<ref refid="structinertial3_d_spin_config" kindref="compound">inertial3DSpinConfig</ref><sp/>*configData,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_R0N_N[3],</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>domega_R0N_N[3],</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_RR0_R0[3],</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_RN_N[3];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>domega_RN_N[3];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_RN[3][3];<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DCM<sp/>from<sp/>inertial<sp/>frame<sp/>N<sp/>to<sp/>generated<sp/>ref<sp/>frame<sp/>R<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_RR0_N[3];<sp/></highlight><highlight class="comment">/*<sp/>angular<sp/>rate<sp/>of<sp/>the<sp/>generated<sp/>ref<sp/>R<sp/>wrt<sp/>the<sp/>base<sp/>ref<sp/>R0<sp/>in<sp/>inertial<sp/>N<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2C(configData-&gt;<ref refid="structinertial3_d_spin_config_1aaee4d9851ed9350719642516446fc421" kindref="member">sigma_RN</ref>,<sp/>dcm_RN);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>m33tMultV3(dcm_RN,<sp/>omega_RR0_R0,<sp/>omega_RR0_N);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(omega_R0N_N,<sp/>omega_RR0_N,<sp/>omega_RN_N);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v3Temp[3];<sp/></highlight><highlight class="comment">/*<sp/>temporary<sp/>3x1<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(omega_R0N_N,<sp/>omega_RR0_N,<sp/>v3Temp);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(v3Temp,<sp/>domega_R0N_N,<sp/>domega_RN_N);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];<sp/></highlight><highlight class="comment">/*<sp/>MRP<sp/>rate<sp/>matrix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_RN_R[3];<sp/></highlight><highlight class="comment">/*<sp/>inertial<sp/>angular<sp/>rate<sp/>of<sp/>ref<sp/>R<sp/>in<sp/>R<sp/>frame<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(dcm_RN,<sp/>omega_RN_N,<sp/>omega_RN_R);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatMRP(configData-&gt;<ref refid="structinertial3_d_spin_config_1aaee4d9851ed9350719642516446fc421" kindref="member">sigma_RN</ref>,<sp/>B);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(0.25<sp/>*<sp/>dt,<sp/>B,<sp/>B);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>omega_RN_R,<sp/>v3Temp);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(configData-&gt;<ref refid="structinertial3_d_spin_config_1aaee4d9851ed9350719642516446fc421" kindref="member">sigma_RN</ref>,<sp/>v3Temp,<sp/>configData-&gt;<ref refid="structinertial3_d_spin_config_1aaee4d9851ed9350719642516446fc421" kindref="member">sigma_RN</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>MRPswitch(configData-&gt;<ref refid="structinertial3_d_spin_config_1aaee4d9851ed9350719642516446fc421" kindref="member">sigma_RN</ref>,<sp/>1.0,<sp/>configData-&gt;<ref refid="structinertial3_d_spin_config_1aaee4d9851ed9350719642516446fc421" kindref="member">sigma_RN</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="structinertial3_d_spin_config_1aaee4d9851ed9350719642516446fc421" kindref="member">sigma_RN</ref>,<sp/>configData-&gt;<ref refid="structinertial3_d_spin_config_1aadd72337c891a968aff3f87bdfcef7cc" kindref="member">attRefOutBuffer</ref>.sigma_RN);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(omega_RN_N,<sp/>configData-&gt;<ref refid="structinertial3_d_spin_config_1aadd72337c891a968aff3f87bdfcef7cc" kindref="member">attRefOutBuffer</ref>.omega_RN_N);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(domega_RN_N,<sp/>configData-&gt;<ref refid="structinertial3_d_spin_config_1aadd72337c891a968aff3f87bdfcef7cc" kindref="member">attRefOutBuffer</ref>.domega_RN_N);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/inertial3DSpin/inertial3DSpin.c"/>
  </compounddef>
</doxygen>
