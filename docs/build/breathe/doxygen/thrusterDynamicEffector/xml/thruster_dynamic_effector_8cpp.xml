<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="thruster_dynamic_effector_8cpp" kind="file" language="C++">
    <compoundname>thrusterDynamicEffector.cpp</compoundname>
    <includes local="no">cstring</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cmath</includes>
    <includes refid="thruster_dynamic_effector_8h" local="yes">thrusterDynamicEffector.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/astroConstants.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="yes">architecture/utilities/avsEigenSupport.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/dynamics/Thrusters/thrusterDynamicEffector/thrusterDynamicEffector.cpp</label>
        <link refid="thruster_dynamic_effector_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>thrusterDynamicEffector.h</label>
        <link refid="thruster_dynamic_effector_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Eigen/Dense</label>
      </node>
      <node id="12">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="16">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="15">
        <label>architecture/msgPayloadDefC/SCStatesMsgPayload.h</label>
      </node>
      <node id="14">
        <label>architecture/msgPayloadDefC/THRArrayOnTimeCmdMsgPayload.h</label>
      </node>
      <node id="13">
        <label>architecture/msgPayloadDefCpp/THROutputMsgPayload.h</label>
      </node>
      <node id="21">
        <label>architecture/utilities/astroConstants.h</label>
      </node>
      <node id="23">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="17">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="20">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="22">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>cstring</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>simulation/dynamics/_GeneralModuleFiles/BodyToHubInfo.h</label>
      </node>
      <node id="10">
        <label>simulation/dynamics/_GeneralModuleFiles/THROperation.h</label>
      </node>
      <node id="9">
        <label>simulation/dynamics/_GeneralModuleFiles/THRSimConfig.h</label>
      </node>
      <node id="8">
        <label>simulation/dynamics/_GeneralModuleFiles/THRTimePair.h</label>
      </node>
      <node id="6">
        <label>simulation/dynamics/_GeneralModuleFiles/dynamicEffector.h</label>
      </node>
      <node id="7">
        <label>simulation/dynamics/_GeneralModuleFiles/stateData.h</label>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;thrusterDynamicEffector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/astroConstants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenSupport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="class_thruster_dynamic_effector_1a14180e21af0cc5d5e1eb77dd4e6b5af1" kindref="member">ThrusterDynamicEffector::ThrusterDynamicEffector</ref>()</highlight></codeline>
<codeline lineno="35"><highlight class="normal">:<sp/>stepsInRamp(30)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">,<sp/>prevFireTime(0.0)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">,<sp/>prevCommandTime(0xFFFFFFFFFFFFFFFF)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>CallCounts<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>forceExternal_B.fill(0.0);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>torqueExternalPntB_B.fill(0.0);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>forceExternal_N.fill(0.0);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;stateDerivContribution.resize(1);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;stateDerivContribution.setZero();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mDotTotal<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="class_thruster_dynamic_effector_1ad9cd2fdadf7d1ddbff76ed6590141414" kindref="member">ThrusterDynamicEffector::~ThrusterDynamicEffector</ref>()</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c=0;<sp/>c&lt;this-&gt;<ref refid="class_thruster_dynamic_effector_1a40ac8d5184485710eb5cca5799e4840f" kindref="member">thrusterOutMsgs</ref>.size();<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(this-&gt;<ref refid="class_thruster_dynamic_effector_1a40ac8d5184485710eb5cca5799e4840f" kindref="member">thrusterOutMsgs</ref>.at(c));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1a36992b6dc689f57ef466a8d94578c0a6" kindref="member">ThrusterDynamicEffector::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_thruster_dynamic_effector_1ac94f6ef65d54c78429d553218965934b" kindref="member">NewThrustCmds</ref>.clear();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_thruster_dynamic_effector_1ac94f6ef65d54c78429d553218965934b" kindref="member">NewThrustCmds</ref>.insert(this-&gt;<ref refid="class_thruster_dynamic_effector_1ac94f6ef65d54c78429d553218965934b" kindref="member">NewThrustCmds</ref>.begin(),<sp/>this-&gt;thrusterData.size(),<sp/>0.0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_thruster_dynamic_effector_1a29bedbc094588d6e71c4e67b64c0fc4c" kindref="member">mDotTotal</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1a79e5421c3aa5260d3abf2f2ec36fee55" kindref="member">ThrusterDynamicEffector::writeOutputMessages</ref>(uint64_t<sp/>CurrentClock)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;THRSimConfig&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>THROutputMsgPayload<sp/>tmpThruster;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a7a4eaefbb00ae5946271db4a499256e7" kindref="member">thrusterData</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a7a4eaefbb00ae5946271db4a499256e7" kindref="member">thrusterData</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpThruster<sp/>=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a40ac8d5184485710eb5cca5799e4840f" kindref="member">thrusterOutMsgs</ref>[idx]-&gt;zeroMsgPayload;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenVector3d2CArray(it-&gt;thrLoc_B,<sp/>tmpThruster.thrusterLocation);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenVector3d2CArray(it-&gt;thrDir_B,<sp/>tmpThruster.thrusterDirection);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpThruster.maxThrust<sp/>=<sp/>it-&gt;MaxThrust;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpThruster.thrustFactor<sp/>=<sp/>it-&gt;ThrustOps.ThrustFactor;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpThruster.thrustForce<sp/>=<sp/>v3Norm(it-&gt;ThrustOps.opThrustForce_B);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(it-&gt;ThrustOps.opThrustForce_B,<sp/>tmpThruster.thrustForce_B);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(it-&gt;ThrustOps.opThrustTorquePntB_B,<sp/>tmpThruster.thrustTorquePntB_B);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a40ac8d5184485710eb5cca5799e4840f" kindref="member">thrusterOutMsgs</ref>[idx]-&gt;write(&amp;tmpThruster,<sp/>this-&gt;moduleID,<sp/>CurrentClock);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>++;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1a8af6a651f57de30f730e2a79855e68f0" kindref="member">ThrusterDynamicEffector::ReadInputs</ref>()</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>i;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dataGood;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_thruster_dynamic_effector_1ae966f01dac0c3a60971a5d72b300e83c" kindref="member">cmdsInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;incomingCmdBuffer<sp/>=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1ae966f01dac0c3a60971a5d72b300e83c" kindref="member">cmdsInMsg</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataGood<sp/>=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1ae966f01dac0c3a60971a5d72b300e83c" kindref="member">cmdsInMsg</ref>.isWritten();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;prevCommandTime==this-&gt;<ref refid="class_thruster_dynamic_effector_1ae966f01dac0c3a60971a5d72b300e83c" kindref="member">cmdsInMsg</ref>.timeWritten()<sp/>||<sp/>!dataGood)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;prevCommandTime<sp/>=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1ae966f01dac0c3a60971a5d72b300e83c" kindref="member">cmdsInMsg</ref>.timeWritten();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;incomingCmdBuffer<sp/>=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1ae966f01dac0c3a60971a5d72b300e83c" kindref="member">cmdsInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;prevCommandTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*CmdPtr;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,<sp/>CmdPtr<sp/>=<sp/><ref refid="class_thruster_dynamic_effector_1ac94f6ef65d54c78429d553218965934b" kindref="member">NewThrustCmds</ref>.data();<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a7a4eaefbb00ae5946271db4a499256e7" kindref="member">thrusterData</ref>.size();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CmdPtr++,<sp/>i++)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*CmdPtr<sp/>=<sp/>this-&gt;incomingCmdBuffer.OnTimeRequest[i];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1aa8878f712f36fc788800eb36d6c5cb05" kindref="member">ThrusterDynamicEffector::ConfigureThrustRequests</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentTime)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;THRSimConfig&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;::iterator<sp/>CmdIt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(CmdIt<sp/>=<sp/><ref refid="class_thruster_dynamic_effector_1ac94f6ef65d54c78429d553218965934b" kindref="member">NewThrustCmds</ref>.begin(),<sp/>it<sp/>=<sp/>this-&gt;thrusterData.begin();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a7a4eaefbb00ae5946271db4a499256e7" kindref="member">thrusterData</ref>.end();<sp/>it++,<sp/>CmdIt++)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*CmdIt<sp/>&gt;=<sp/>it-&gt;MinOnTime)<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;ThrustOps.ThrustOnCmd<sp/>=<sp/>*CmdIt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;ThrustOps.fireCounter<sp/>+=<sp/>it-&gt;ThrustOps.ThrustFactor<sp/>&gt;<sp/>0.0</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;ThrustOps.ThrustOnCmd<sp/>=<sp/>it-&gt;ThrustOps.ThrustFactor<sp/>&gt;<sp/>0.0</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>*CmdIt<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;ThrustOps.ThrusterStartTime<sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;ThrustOps.PreviousIterTime<sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;ThrustOps.ThrustOnRampTime<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;ThrustOps.ThrustOnSteadyTime<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;ThrustOps.ThrustOffRampTime<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*CmdIt<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1aa311c8b59865e39534508fdda0e69aa6" kindref="member">ThrusterDynamicEffector::UpdateThrusterProperties</ref>()</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>hub<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_BN_N<sp/>=<sp/>(Eigen::Vector3d)*this-&gt;<ref refid="class_thruster_dynamic_effector_1a79c9a7b95d47b478675d9c4880c3d14e" kindref="member">inertialPositionProperty</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omega_BN_B<sp/>=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1afa901dc9ca40ee7df00c12280f9edfc0" kindref="member">hubOmega</ref>-&gt;getState();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigma_BN;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>sigma_BN<sp/>=<sp/>(Eigen::Vector3d)this-&gt;<ref refid="class_thruster_dynamic_effector_1a54bbf4d9db999a97c8ada2d10698dd29" kindref="member">hubSigma</ref>-&gt;getState();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_BN<sp/>=<sp/>(sigma_BN.toRotationMatrix()).transpose();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>variables<sp/>related<sp/>to<sp/>which<sp/>body<sp/>the<sp/>thruster<sp/>is<sp/>attached<sp/>to.<sp/>The<sp/>F<sp/>frame<sp/>represents<sp/>the<sp/>platform<sp/>body<sp/>where<sp/>the<sp/>thruster<sp/>attaches<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigma_FN;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_FN;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omega_FN_F;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_FN_N;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>relative<sp/>variables<sp/>between<sp/>the<sp/>attached<sp/>body<sp/>and<sp/>the<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_BF;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>all<sp/>thrusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ReadFunctor&lt;SCStatesMsgPayload&gt;&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>this-&gt;attachedBodyInMsgs.begin(),<sp/>index<sp/>=<sp/>0;<sp/>it<sp/>!=<sp/>this-&gt;attachedBodyInMsgs.end();<sp/>it++,<sp/>index++)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>message<sp/>is<sp/>linked,<sp/>and<sp/>if<sp/>so<sp/>do<sp/>the<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;isLinked()<sp/>&amp;&amp;<sp/>it-&gt;isWritten())</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>to<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;attachedBodyBuffer<sp/>=<sp/>this-&gt;attachedBodyInMsgs.at(index)();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Grab<sp/>attached<sp/>body<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_FN<sp/>=<sp/>cArray2EigenMRPd(attachedBodyBuffer.sigma_BN);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>omega_FN_F<sp/>=<sp/>cArray2EigenVector3d(attachedBodyBuffer.omega_BN_B);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_FN_N<sp/>=<sp/>cArray2EigenVector3d(attachedBodyBuffer.r_BN_N);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>DCM<sp/>between<sp/>the<sp/>attached<sp/>body<sp/>and<sp/>the<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcm_FN<sp/>=<sp/>(sigma_FN.toRotationMatrix()).transpose();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcm_BF<sp/>=<sp/>dcm_BN<sp/>*<sp/>dcm_FN.transpose();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Populate<sp/>the<sp/>relative<sp/>state<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;bodyToHubInfo.at(index).r_FB_B<sp/>=<sp/>dcm_BN<sp/>*<sp/>(r_FN_N<sp/>-<sp/>r_BN_N);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;bodyToHubInfo.at(index).dcm_BF<sp/>=<sp/>dcm_BF;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;bodyToHubInfo.at(index).omega_FB_B<sp/>=<sp/>dcm_BF<sp/>*<sp/>omega_FN_F<sp/>-<sp/>omega_BN_B;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1aafdf771234705d274145f1c40f7314e0" kindref="member">ThrusterDynamicEffector::linkInStates</ref>(DynParamManager&amp;<sp/>states){</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a54bbf4d9db999a97c8ada2d10698dd29" kindref="member">hubSigma</ref><sp/>=<sp/>states.getStateObject(</highlight><highlight class="stringliteral">&quot;hubSigma&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1afa901dc9ca40ee7df00c12280f9edfc0" kindref="member">hubOmega</ref><sp/>=<sp/>states.getStateObject(</highlight><highlight class="stringliteral">&quot;hubOmega&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a79c9a7b95d47b478675d9c4880c3d14e" kindref="member">inertialPositionProperty</ref><sp/>=<sp/>states.getPropertyReference(</highlight><highlight class="stringliteral">&quot;r_BN_N&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1a4a31b2531597d32fd2983611e6d6b600" kindref="member">ThrusterDynamicEffector::computeForceTorque</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeStep)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>omega_BN_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaLocal_BN_B<sp/>=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1afa901dc9ca40ee7df00c12280f9edfc0" kindref="member">hubOmega</ref>-&gt;getState();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>and<sp/>torque<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>SingleThrusterForce;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>SingleThrusterTorque;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmpThrustMag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>relative<sp/>variables<sp/>between<sp/>the<sp/>attached<sp/>body<sp/>and<sp/>the<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>thrustDirection_B;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>thrustLocation_B;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Expelled<sp/>momentum<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>BMj;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>axesWeightMatrix;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>BM1,<sp/>BM2,<sp/>BM3;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mDotNozzle;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;forceExternal_B.setZero();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;forceExternal_N.setZero();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;torqueExternalPntB_B.setZero();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt<sp/>=<sp/>integTime<sp/>-<sp/><ref refid="class_thruster_dynamic_effector_1a3baf5c19dc493fe2be42484f29f109fa" kindref="member">prevFireTime</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>axesWeightMatrix<sp/>&lt;&lt;<sp/>2,<sp/>0,<sp/>0,<sp/>0,<sp/>1,<sp/>0,<sp/>0,<sp/>0,<sp/>1;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;THRSimConfig&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>THROperation*<sp/>ops;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a7a4eaefbb00ae5946271db4a499256e7" kindref="member">thrusterData</ref>.begin(),<sp/>index<sp/>=<sp/>0;<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a7a4eaefbb00ae5946271db4a499256e7" kindref="member">thrusterData</ref>.end();<sp/>it++,<sp/>index++)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops<sp/>=<sp/>&amp;it-&gt;ThrustOps;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>thruster<sp/>properties<sp/>wrt<sp/>the<sp/>hub<sp/>(note<sp/>that<sp/>B<sp/>refers<sp/>to<sp/>the<sp/>F<sp/>frame<sp/>when<sp/>extracting<sp/>from<sp/>the<sp/>thruster<sp/>info)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrustDirection_B<sp/>=<sp/>this-&gt;bodyToHubInfo.at(index).dcm_BF<sp/>*<sp/>it-&gt;thrDir_B;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrustLocation_B<sp/>=<sp/>this-&gt;bodyToHubInfo.at(index).r_FB_B<sp/>+<sp/>this-&gt;bodyToHubInfo.at(index).dcm_BF<sp/>*<sp/>it-&gt;thrLoc_B;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ops-&gt;ThrustOnCmd<sp/>+<sp/>ops-&gt;ThrusterStartTime<sp/><sp/>-<sp/>integTime)<sp/>&gt;=<sp/>-dt*10E-10<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops-&gt;ThrustOnCmd<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_thruster_dynamic_effector_1a18e138caff983da0a44ef76fb780cb9e" kindref="member">ComputeThrusterFire</ref>(&amp;(*it),<sp/>integTime);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ops-&gt;ThrustFactor<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_thruster_dynamic_effector_1ab8c94899539c2c56c792d8391eefe3aa" kindref="member">ComputeThrusterShut</ref>(&amp;(*it),<sp/>integTime);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpThrustMag<sp/>=<sp/>it-&gt;MaxThrust*ops-&gt;ThrustFactor;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>dispersion<sp/>to<sp/>magnitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpThrustMag<sp/>*=<sp/>(1.<sp/>+<sp/>it-&gt;thrusterMagDisp);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SingleThrusterForce<sp/>=<sp/>tmpThrustMag<sp/>*<sp/>thrustDirection_B;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;forceExternal_B<sp/>+=<sp/>SingleThrusterForce;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SingleThrusterTorque<sp/>=<sp/>thrustLocation_B.cross(SingleThrusterForce)<sp/>+<sp/>ops-&gt;ThrustFactor<sp/>*<sp/>it-&gt;MaxSwirlTorque<sp/>*<sp/>thrustDirection_B;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;torqueExternalPntB_B<sp/>+=<sp/>SingleThrusterTorque;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it-&gt;updateOnly)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDotNozzle<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;steadyIsp<sp/>*<sp/>ops-&gt;IspFactor<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDotNozzle<sp/>=<sp/>it-&gt;MaxThrust*ops-&gt;ThrustFactor<sp/>/<sp/>(EARTH_GRAV<sp/>*</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;steadyIsp<sp/>*<sp/>ops-&gt;IspFactor);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;forceExternal_B<sp/>+=<sp/>2<sp/>*<sp/>mDotNozzle<sp/>*<sp/>(this-&gt;bodyToHubInfo.at(index).omega_FB_B<sp/>+<sp/>omegaLocal_BN_B).cross(thrustLocation_B);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BM1<sp/>=<sp/>thrustDirection_B;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BM2<sp/>&lt;&lt;<sp/>-BM1(1),<sp/>BM1(0),<sp/>BM1(2);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BM3<sp/>=<sp/>BM1.cross(BM2);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMj.col(0)<sp/>=<sp/>BM1;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMj.col(1)<sp/>=<sp/>BM2;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMj.col(2)<sp/>=<sp/>BM3;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;torqueExternalPntB_B<sp/>+=<sp/>mDotNozzle<sp/>*<sp/>(eigenTilde(thrustDirection_B)<sp/>*<sp/>eigenTilde(thrustDirection_B).transpose()</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>it-&gt;areaNozzle<sp/>/<sp/>(4<sp/>*<sp/>M_PI)<sp/>*<sp/>BMj<sp/>*<sp/>axesWeightMatrix<sp/>*<sp/>BMj.transpose())<sp/>*<sp/>(this-&gt;bodyToHubInfo.at(index).omega_FB_B<sp/>+<sp/>omegaLocal_BN_B);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Save<sp/>force<sp/>and<sp/>torque<sp/>values<sp/>for<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenVector3d2CArray(SingleThrusterForce,<sp/>it-&gt;ThrustOps.opThrustForce_B);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenVector3d2CArray(SingleThrusterTorque,<sp/>it-&gt;ThrustOps.opThrustTorquePntB_B);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_thruster_dynamic_effector_1a3baf5c19dc493fe2be42484f29f109fa" kindref="member">prevFireTime</ref><sp/>=<sp/>integTime;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1a6b9951faa7c92baf8da9ab75db6d3aa0" kindref="member">ThrusterDynamicEffector::addThruster</ref>(THRSimConfig*<sp/>newThruster)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a7a4eaefbb00ae5946271db4a499256e7" kindref="member">thrusterData</ref>.push_back(*newThruster);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>corresponding<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>Message&lt;THROutputMsgPayload&gt;*<sp/>msg;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Message&lt;THROutputMsgPayload&gt;;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a40ac8d5184485710eb5cca5799e4840f" kindref="member">thrusterOutMsgs</ref>.push_back(msg);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>back<sp/>an<sp/>empty<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>ReadFunctor&lt;SCStatesMsgPayload&gt;<sp/>emptyReadFunctor;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;attachedBodyInMsgs.push_back(emptyReadFunctor);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>space<sp/>for<sp/>the<sp/>conversion<sp/>from<sp/>body<sp/>to<sp/>hub<sp/>and<sp/>populate<sp/>it<sp/>with<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>BodyToHubInfo<sp/>attachedBodyToHub;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>attachedBodyToHub.dcm_BF.setIdentity();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>attachedBodyToHub.r_FB_B.setZero();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>attachedBodyToHub.omega_FB_B.setZero();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;bodyToHubInfo.push_back(attachedBodyToHub);</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1a6b9951faa7c92baf8da9ab75db6d3aa0" kindref="member">ThrusterDynamicEffector::addThruster</ref>(THRSimConfig*<sp/>newThruster,<sp/>Message&lt;SCStatesMsgPayload&gt;*<sp/>bodyStateMsg)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a7a4eaefbb00ae5946271db4a499256e7" kindref="member">thrusterData</ref>.push_back(*newThruster);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>corresponding<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>Message&lt;THROutputMsgPayload&gt;*<sp/>msg;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Message&lt;THROutputMsgPayload&gt;;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a40ac8d5184485710eb5cca5799e4840f" kindref="member">thrusterOutMsgs</ref>.push_back(msg);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>incoming<sp/>body<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;attachedBodyInMsgs.push_back(bodyStateMsg-&gt;addSubscriber());</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>space<sp/>for<sp/>the<sp/>conversion<sp/>from<sp/>body<sp/>to<sp/>hub<sp/>and<sp/>populate<sp/>it<sp/>with<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>BodyToHubInfo<sp/>attachedBodyToHub;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>attachedBodyToHub.dcm_BF.setIdentity();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>attachedBodyToHub.r_FB_B.setZero();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>attachedBodyToHub.omega_FB_B.setZero();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;bodyToHubInfo.push_back(attachedBodyToHub);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1a1c88946cd2f3dfb375285885c5dbc542" kindref="member">ThrusterDynamicEffector::computeStateContribution</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime){</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;THRSimConfig&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>THROperation<sp/>*ops;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mDotSingle=0.0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a29bedbc094588d6e71c4e67b64c0fc4c" kindref="member">mDotTotal</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;stateDerivContribution.setZero();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a7a4eaefbb00ae5946271db4a499256e7" kindref="member">thrusterData</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a7a4eaefbb00ae5946271db4a499256e7" kindref="member">thrusterData</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops<sp/>=<sp/>&amp;it-&gt;ThrustOps;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDotSingle<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it-&gt;steadyIsp<sp/>*<sp/>ops-&gt;IspFactor<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDotSingle<sp/>=<sp/>it-&gt;MaxThrust<sp/>*<sp/>ops-&gt;ThrustFactor<sp/>/<sp/>(EARTH_GRAV<sp/>*<sp/>it-&gt;steadyIsp<sp/>*<sp/>ops-&gt;IspFactor);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a29bedbc094588d6e71c4e67b64c0fc4c" kindref="member">mDotTotal</ref><sp/>+=<sp/>mDotSingle;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;stateDerivContribution(0)<sp/>=<sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a29bedbc094588d6e71c4e67b64c0fc4c" kindref="member">mDotTotal</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1a18e138caff983da0a44ef76fb780cb9e" kindref="member">ThrusterDynamicEffector::ComputeThrusterFire</ref>(THRSimConfig<sp/>*CurrentThruster,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentTime)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;THRTimePair&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>THROperation<sp/>*ops<sp/>=<sp/>&amp;(CurrentThruster-&gt;ThrustOps);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ops-&gt;ThrustOnRampTime<sp/>==<sp/>0.0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentThruster-&gt;ThrusterOnRamp.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops-&gt;ThrustOnRampTime<sp/>=<sp/><ref refid="class_thruster_dynamic_effector_1ae6ed51f4e64fbe1f9900b5f5c29f7db0" kindref="member">thrFactorToTime</ref>(CurrentThruster,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(CurrentThruster-&gt;ThrusterOnRamp));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>LocalOnRamp<sp/>=<sp/>(currentTime<sp/>-<sp/>ops-&gt;PreviousIterTime)<sp/>+</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>ops-&gt;ThrustOnRampTime;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>LocalOnRamp<sp/>=<sp/>LocalOnRamp<sp/>&gt;=<sp/>0.0<sp/>?<sp/>LocalOnRamp<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevValidThrFactor<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevValidIspFactor<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevValidDelta<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>CurrentThruster-&gt;ThrusterOnRamp.begin();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>CurrentThruster-&gt;ThrusterOnRamp.end();<sp/>it++)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(LocalOnRamp<sp/>&lt;<sp/>it-&gt;TimeDelta)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops-&gt;ThrustFactor<sp/>=<sp/>(it-&gt;ThrustFactor<sp/>-<sp/>prevValidThrFactor)/</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it-&gt;TimeDelta<sp/>-<sp/>prevValidDelta)<sp/>*</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LocalOnRamp<sp/>-<sp/>prevValidDelta)<sp/>+<sp/>prevValidThrFactor;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops-&gt;IspFactor<sp/>=<sp/>(it-&gt;IspFactor<sp/>-<sp/>prevValidIspFactor)/</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it-&gt;TimeDelta<sp/>-<sp/>prevValidDelta)<sp/>*</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LocalOnRamp<sp/>-<sp/>prevValidDelta)<sp/>+<sp/>prevValidIspFactor;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops-&gt;ThrustOnRampTime<sp/>=<sp/>LocalOnRamp;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops-&gt;totalOnTime<sp/>+=<sp/>(currentTime<sp/>-<sp/>ops-&gt;PreviousIterTime);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops-&gt;PreviousIterTime<sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevValidThrFactor<sp/>=<sp/>it-&gt;ThrustFactor;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevValidIspFactor<sp/>=<sp/>it-&gt;IspFactor;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevValidDelta<sp/>=<sp/>it-&gt;TimeDelta;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>ops-&gt;ThrustOnSteadyTime<sp/>+=<sp/>(currentTime<sp/>-<sp/>ops-&gt;PreviousIterTime);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>ops-&gt;totalOnTime<sp/>+=<sp/>(currentTime<sp/>-<sp/>ops-&gt;PreviousIterTime);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>ops-&gt;PreviousIterTime<sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>ops-&gt;ThrustFactor<sp/>=<sp/>ops-&gt;IspFactor<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>ops-&gt;ThrustOffRampTime<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1ab8c94899539c2c56c792d8391eefe3aa" kindref="member">ThrusterDynamicEffector::ComputeThrusterShut</ref>(THRSimConfig<sp/>*CurrentThruster,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentTime)</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;THRTimePair&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>THROperation<sp/>*ops<sp/>=<sp/>&amp;(CurrentThruster-&gt;ThrustOps);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ops-&gt;ThrustOffRampTime<sp/>==<sp/>0.0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentThruster-&gt;ThrusterOffRamp.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops-&gt;ThrustOffRampTime<sp/>=<sp/><ref refid="class_thruster_dynamic_effector_1ae6ed51f4e64fbe1f9900b5f5c29f7db0" kindref="member">thrFactorToTime</ref>(CurrentThruster,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(CurrentThruster-&gt;ThrusterOffRamp));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>LocalOffRamp<sp/>=<sp/>(currentTime<sp/>-<sp/>ops-&gt;PreviousIterTime)<sp/>+</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>ops-&gt;ThrustOffRampTime;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>LocalOffRamp<sp/>=<sp/>LocalOffRamp<sp/>&gt;=<sp/>0.0<sp/>?<sp/>LocalOffRamp<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevValidThrFactor<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevValidIspFactor<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevValidDelta<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>CurrentThruster-&gt;ThrusterOffRamp.begin();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>CurrentThruster-&gt;ThrusterOffRamp.end();<sp/>it++)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(LocalOffRamp<sp/>&lt;<sp/>it-&gt;TimeDelta)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops-&gt;ThrustFactor<sp/>=<sp/>(it-&gt;ThrustFactor<sp/>-<sp/>prevValidThrFactor)/</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it-&gt;TimeDelta<sp/>-<sp/>prevValidDelta)<sp/>*</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LocalOffRamp<sp/>-<sp/>prevValidDelta)<sp/>+<sp/>prevValidThrFactor;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops-&gt;IspFactor<sp/>=<sp/>(it-&gt;IspFactor<sp/>-<sp/>prevValidIspFactor)/</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it-&gt;TimeDelta<sp/>-<sp/>prevValidDelta)<sp/>*</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LocalOffRamp<sp/>-<sp/>prevValidDelta)<sp/>+<sp/>prevValidIspFactor;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops-&gt;ThrustOffRampTime<sp/>=<sp/>LocalOffRamp;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops-&gt;PreviousIterTime<sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevValidThrFactor<sp/>=<sp/>it-&gt;ThrustFactor;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevValidIspFactor<sp/>=<sp/>it-&gt;IspFactor;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevValidDelta<sp/>=<sp/>it-&gt;TimeDelta;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>ops-&gt;ThrustFactor<sp/>=<sp/>ops-&gt;IspFactor<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>ops-&gt;ThrustOnRampTime<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1ae6ed51f4e64fbe1f9900b5f5c29f7db0" kindref="member">ThrusterDynamicEffector::thrFactorToTime</ref>(THRSimConfig<sp/>*thrData,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;THRTimePair&gt;<sp/>*thrRamp)</highlight></codeline>
<codeline lineno="525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;THRTimePair&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/>thrRamp-&gt;end();</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>it--;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rampTime<sp/>=<sp/>it-&gt;TimeDelta;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rampDirection<sp/>=<sp/>std::copysign(1.0,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;ThrustFactor<sp/>-<sp/>thrData-&gt;ThrustOps.ThrustFactor);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevValidThrFactor<sp/>=<sp/>rampDirection<sp/>&lt;<sp/>0<sp/>?<sp/>1.0<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevValidDelta<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it=thrRamp-&gt;begin();<sp/>it!=thrRamp-&gt;end();<sp/>it++)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pointCheck<sp/>=<sp/>rampDirection<sp/>&gt;<sp/>0<sp/>?</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;ThrustFactor<sp/>&lt;=<sp/>thrData-&gt;ThrustOps.ThrustFactor<sp/>:</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;ThrustFactor<sp/>&gt;=<sp/>thrData-&gt;ThrustOps.ThrustFactor;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pointCheck)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevValidThrFactor<sp/>=<sp/>it-&gt;ThrustFactor;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevValidDelta<sp/>=<sp/>it-&gt;TimeDelta;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rampTime<sp/>=<sp/>(it-&gt;TimeDelta<sp/>-<sp/>prevValidDelta)/(it-&gt;ThrustFactor<sp/>-</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevValidThrFactor)<sp/>*<sp/>(thrData-&gt;ThrustOps.ThrustFactor<sp/>-</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevValidThrFactor)<sp/>+<sp/>prevValidDelta;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rampTime<sp/>=<sp/>rampTime<sp/>&lt;<sp/>0.0<sp/>?<sp/>0.0<sp/>:<sp/>rampTime;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(rampTime);</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_thruster_dynamic_effector_1a1ae6fd12c74d37b08b77d09b623e584e" kindref="member">ThrusterDynamicEffector::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_thruster_dynamic_effector_1a8af6a651f57de30f730e2a79855e68f0" kindref="member">ReadInputs</ref>())</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1aa8878f712f36fc788800eb36d6c5cb05" kindref="member">ConfigureThrustRequests</ref>(this-&gt;prevCommandTime*1.0E-9);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1aa311c8b59865e39534508fdda0e69aa6" kindref="member">UpdateThrusterProperties</ref>();</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_thruster_dynamic_effector_1a79e5421c3aa5260d3abf2f2ec36fee55" kindref="member">writeOutputMessages</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/Thrusters/thrusterDynamicEffector/thrusterDynamicEffector.cpp"/>
  </compounddef>
</doxygen>
