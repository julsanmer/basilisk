<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="spinning_body_one_d_o_f_state_effector_8cpp" kind="file" language="C++">
    <compoundname>spinningBodyOneDOFStateEffector.cpp</compoundname>
    <includes refid="spinning_body_one_d_o_f_state_effector_8h" local="yes">spinningBodyOneDOFStateEffector.h</includes>
    <includes local="yes">architecture/utilities/avsEigenSupport.h</includes>
    <includes local="yes">architecture/utilities/rigidBodyKinematics.h</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/dynamics/spinningBodies/spinningBodiesOneDOF/spinningBodyOneDOFStateEffector.cpp</label>
        <link refid="spinning_body_one_d_o_f_state_effector_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>spinningBodyOneDOFStateEffector.h</label>
        <link refid="spinning_body_one_d_o_f_state_effector_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Eigen/Dense</label>
      </node>
      <node id="6">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="12">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="9">
        <label>architecture/msgPayloadDefC/ArrayEffectorLockMsgPayload.h</label>
      </node>
      <node id="8">
        <label>architecture/msgPayloadDefC/ArrayMotorTorqueMsgPayload.h</label>
      </node>
      <node id="11">
        <label>architecture/msgPayloadDefC/HingedRigidBodyMsgPayload.h</label>
      </node>
      <node id="10">
        <label>architecture/msgPayloadDefC/SCStatesMsgPayload.h</label>
      </node>
      <node id="7">
        <label>architecture/utilities/avsEigenMRP.h</label>
      </node>
      <node id="14">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="13">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="15">
        <label>architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="5">
        <label>simulation/dynamics/_GeneralModuleFiles/stateData.h</label>
      </node>
      <node id="4">
        <label>simulation/dynamics/_GeneralModuleFiles/stateEffector.h</label>
      </node>
      <node id="16">
        <label>string</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2022,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spinningBodyOneDOFStateEffector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenSupport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="class_spinning_body_one_d_o_f_state_effector_1a10f6eccab99bb7b2e37419230777c5a6" kindref="member">SpinningBodyOneDOFStateEffector::SpinningBodyOneDOFStateEffector</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>the<sp/>mass<sp/>props<sp/>and<sp/>mass<sp/>prop<sp/>rates<sp/>contributions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.mEff<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.rEff_CB_B.fill(0.0);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.IEffPntB_B.fill(0.0);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.rEffPrime_CB_B.fill(0.0);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.IEffPrimePntB_B.fill(0.0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>variables<sp/>to<sp/>working<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a08792cf838e8ebf6a58f27150ecc8639" kindref="member">IPntSc_S</ref>.setIdentity();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;dcm_BS.setIdentity();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1ae6d36dc024fa50784ec01ff343b3eeea" kindref="member">dcm_S0B</ref>.setIdentity();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1aebca502c779927c4bb7ed1d4ed5d783f" kindref="member">r_SB_B</ref>.setZero();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1af249dbc5e095ce9003c3c393f90b8872" kindref="member">sHat_S</ref>.setZero();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a64ef355c697167433d387d2753dff888" kindref="member">nameOfThetaState</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;spinningBodyTheta&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(SpinningBodyOneDOFStateEffector::effectorID);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1af1d8070d590fe1bbea104c5c87f13c60" kindref="member">nameOfThetaDotState</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;spinningBodyThetaDot&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(SpinningBodyOneDOFStateEffector::effectorID);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>SpinningBodyOneDOFStateEffector::effectorID++;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">uint64_t<sp/>SpinningBodyOneDOFStateEffector::effectorID<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="class_spinning_body_one_d_o_f_state_effector_1a903ead36bdf73fd7d9a1eddd20bbae63" kindref="member">SpinningBodyOneDOFStateEffector::~SpinningBodyOneDOFStateEffector</ref>()</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>SpinningBodyOneDOFStateEffector::effectorID<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spinning_body_one_d_o_f_state_effector_1a0e2b4d3ada0b9a967684e918301c59f6" kindref="member">SpinningBodyOneDOFStateEffector::Reset</ref>(uint64_t<sp/>CurrentClock)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalize<sp/>the<sp/>sHat<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1af249dbc5e095ce9003c3c393f90b8872" kindref="member">sHat_S</ref>.norm()<sp/>&gt;<sp/>0.01)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1af249dbc5e095ce9003c3c393f90b8872" kindref="member">sHat_S</ref>.normalize();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bskLogger.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Norm<sp/>of<sp/>sHat<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0.<sp/>sHat<sp/>may<sp/>not<sp/>have<sp/>been<sp/>set<sp/>by<sp/>the<sp/>user.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spinning_body_one_d_o_f_state_effector_1a35b4cc54432b3c0315c7965063b486ed" kindref="member">SpinningBodyOneDOFStateEffector::writeOutputStateMessages</ref>(uint64_t<sp/>CurrentClock)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>out<sp/>the<sp/>spinning<sp/>body<sp/>output<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1adf6f8dc493f10b14f36020ebdf2bb4eb" kindref="member">spinningBodyOutMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HingedRigidBodyMsgPayload<sp/>spinningBodyBuffer;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spinningBodyBuffer<sp/>=<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1adf6f8dc493f10b14f36020ebdf2bb4eb" kindref="member">spinningBodyOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spinningBodyBuffer.theta<sp/>=<sp/>this-&gt;theta;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spinningBodyBuffer.thetaDot<sp/>=<sp/>this-&gt;thetaDot;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1adf6f8dc493f10b14f36020ebdf2bb4eb" kindref="member">spinningBodyOutMsg</ref>.write(&amp;spinningBodyBuffer,<sp/>this-&gt;moduleID,<sp/>CurrentClock);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>out<sp/>the<sp/>spinning<sp/>body<sp/>state<sp/>config<sp/>log<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a764c4f35444b4c7cfa7bd03beef6e15b" kindref="member">spinningBodyConfigLogOutMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCStatesMsgPayload<sp/>configLogMsg;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configLogMsg<sp/>=<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a764c4f35444b4c7cfa7bd03beef6e15b" kindref="member">spinningBodyConfigLogOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Logging<sp/>the<sp/>S<sp/>frame<sp/>is<sp/>the<sp/>body<sp/>frame<sp/>B<sp/>of<sp/>that<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;r_ScN_N,<sp/>configLogMsg.r_BN_N);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;v_ScN_N,<sp/>configLogMsg.v_BN_N);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;sigma_SN,<sp/>configLogMsg.sigma_BN);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;omega_SN_S,<sp/>configLogMsg.omega_BN_B);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a764c4f35444b4c7cfa7bd03beef6e15b" kindref="member">spinningBodyConfigLogOutMsg</ref>.write(&amp;configLogMsg,<sp/>this-&gt;moduleID,<sp/>CurrentClock);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spinning_body_one_d_o_f_state_effector_1aeb26be78fb5862ada399fc8ff530260e" kindref="member">SpinningBodyOneDOFStateEffector::prependSpacecraftNameToStates</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a64ef355c697167433d387d2753dff888" kindref="member">nameOfThetaState</ref><sp/>=<sp/>this-&gt;nameOfSpacecraftAttachedTo<sp/>+<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a64ef355c697167433d387d2753dff888" kindref="member">nameOfThetaState</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1af1d8070d590fe1bbea104c5c87f13c60" kindref="member">nameOfThetaDotState</ref><sp/>=<sp/>this-&gt;nameOfSpacecraftAttachedTo<sp/>+<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1af1d8070d590fe1bbea104c5c87f13c60" kindref="member">nameOfThetaDotState</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spinning_body_one_d_o_f_state_effector_1a1bc56d750e70fea06768fb2d5a09576a" kindref="member">SpinningBodyOneDOFStateEffector::linkInStates</ref>(DynParamManager&amp;<sp/>statesIn)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>access<sp/>to<sp/>the<sp/>hub&apos;s<sp/>states<sp/>needed<sp/>for<sp/>dynamic<sp/>coupling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;inertialPositionProperty<sp/>=<sp/>statesIn.getPropertyReference(this-&gt;nameOfSpacecraftAttachedTo<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;r_BN_N&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;inertialVelocityProperty<sp/>=<sp/>statesIn.getPropertyReference(this-&gt;nameOfSpacecraftAttachedTo<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;v_BN_N&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spinning_body_one_d_o_f_state_effector_1ad1436109885c66f381453e36fc20e212" kindref="member">SpinningBodyOneDOFStateEffector::registerStates</ref>(DynParamManager&amp;<sp/>states)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>theta<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;thetaState<sp/>=<sp/>states.registerState(1,<sp/>1,<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a64ef355c697167433d387d2753dff888" kindref="member">nameOfThetaState</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>thetaInitMatrix(1,1);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>thetaInitMatrix(0,0)<sp/>=<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a7a92bdf3e71605f48a9f92792e399e71" kindref="member">thetaInit</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;thetaState-&gt;setState(thetaInitMatrix);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>thetaDot<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;thetaDotState<sp/>=<sp/>states.registerState(1,<sp/>1,<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1af1d8070d590fe1bbea104c5c87f13c60" kindref="member">nameOfThetaDotState</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>thetaDotInitMatrix(1,1);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>thetaDotInitMatrix(0,0)<sp/>=<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1aa62692ec3e1da07a89ae3d9581121311" kindref="member">thetaDotInit</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;thetaDotState-&gt;setState(thetaDotInitMatrix);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spinning_body_one_d_o_f_state_effector_1aa2a40ec2b834153dd6831d8483292a74" kindref="member">SpinningBodyOneDOFStateEffector::updateEffectorMassProps</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Give<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>spinning<sp/>body<sp/>to<sp/>the<sp/>effProps<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.mEff<sp/>=<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>the<sp/>axis<sp/>if<sp/>the<sp/>flag<sp/>is<sp/>set<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;lockFlag<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>zeroMatrix<sp/>=<sp/>Eigen::MatrixXd::Constant(1,<sp/>1,<sp/>0.0);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;thetaDotState-&gt;setState(zeroMatrix);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Grab<sp/>current<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;theta<sp/>=<sp/>this-&gt;thetaState-&gt;getState()(0,<sp/>0);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;thetaDot<sp/>=<sp/>this-&gt;thetaDotState-&gt;getState()(0,<sp/>0);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>DCM<sp/>from<sp/>S<sp/>frame<sp/>to<sp/>B<sp/>frame<sp/>and<sp/>write<sp/>sHat<sp/>in<sp/>B<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_S0S[3][3];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prv_S0S_array[3];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>prv_S0S<sp/>=<sp/>-this-&gt;theta<sp/>*<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1af249dbc5e095ce9003c3c393f90b8872" kindref="member">sHat_S</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(prv_S0S,<sp/>prv_S0S_array);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2C(prv_S0S_array,<sp/>dcm_S0S);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;dcm_BS<sp/>=<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1ae6d36dc024fa50784ec01ff343b3eeea" kindref="member">dcm_S0B</ref>.transpose()<sp/>*<sp/>c2DArray2EigenMatrix3d(dcm_S0S);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sHat_B<sp/>=<sp/>this-&gt;dcm_BS<sp/>*<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1af249dbc5e095ce9003c3c393f90b8872" kindref="member">sHat_S</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>effector&apos;s<sp/>CoM<sp/>with<sp/>respect<sp/>to<sp/>point<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;r_ScS_B<sp/>=<sp/>this-&gt;dcm_BS<sp/>*<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a3487602151610d4947fc100f58afd456" kindref="member">r_ScS_S</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;r_ScB_B<sp/>=<sp/>this-&gt;r_ScS_B<sp/>+<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1aebca502c779927c4bb7ed1d4ed5d783f" kindref="member">r_SB_B</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.rEff_CB_B<sp/>=<sp/>this-&gt;r_ScB_B;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>inertia<sp/>of<sp/>the<sp/>hinged<sp/>rigid<sp/>body<sp/>about<sp/>point<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rTilde_ScB_B<sp/>=<sp/>eigenTilde(this-&gt;r_ScB_B);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;IPntSc_B<sp/>=<sp/>this-&gt;dcm_BS<sp/>*<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a08792cf838e8ebf6a58f27150ecc8639" kindref="member">IPntSc_S</ref><sp/>*<sp/>this-&gt;dcm_BS.transpose();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.IEffPntB_B<sp/>=<sp/>this-&gt;IPntSc_B<sp/>-<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>this-&gt;rTilde_ScB_B<sp/>*<sp/>this-&gt;rTilde_ScB_B;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>omega_SB_B<sp/>and<sp/>its<sp/>cross<sp/>product<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omega_SB_B<sp/>=<sp/>this-&gt;thetaDot<sp/>*<sp/>this-&gt;sHat_B;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omegaTilde_SB_B<sp/>=<sp/>eigenTilde(this-&gt;omega_SB_B);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>rPrime_ScB_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rPrime_ScS_B<sp/>=<sp/>this-&gt;omegaTilde_SB_B<sp/>*<sp/>this-&gt;r_ScS_B;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rPrime_ScB_B<sp/>=<sp/>this-&gt;rPrime_ScS_B;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.rEffPrime_CB_B<sp/>=<sp/>this-&gt;rPrime_ScB_B;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>body<sp/>time<sp/>derivative<sp/>of<sp/>IPntSc_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>rPrimeTilde_ScB_B<sp/>=<sp/>eigenTilde(this-&gt;rPrime_ScB_B);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.IEffPrimePntB_B<sp/>=<sp/>this-&gt;omegaTilde_SB_B*<sp/>this-&gt;IPntSc_B<sp/>-<sp/>this-&gt;IPntSc_B<sp/>*this-&gt;omegaTilde_SB_B</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>(rPrimeTilde_ScB_B<sp/>*<sp/>this-&gt;rTilde_ScB_B<sp/>+<sp/>this-&gt;rTilde_ScB_B<sp/>*<sp/>rPrimeTilde_ScB_B);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spinning_body_one_d_o_f_state_effector_1ad8017bbdfcc5d44d32cf43eac70c9736" kindref="member">SpinningBodyOneDOFStateEffector::updateContributions</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BackSubMatrices<sp/>&amp;<sp/>backSubContr,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sigma_BN,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omega_BN_B,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>g_N)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>omega_SN_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omega_BN_B<sp/>=<sp/>omega_BN_B;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omegaTilde_BN_B<sp/>=<sp/>eigenTilde(this-&gt;omega_BN_B);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omega_SN_B<sp/>=<sp/>this-&gt;omega_SB_B<sp/>+<sp/>this-&gt;omega_BN_B;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>omegaTilde_SN_B<sp/>=<sp/>eigenTilde(this-&gt;omega_SN_B);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>IPntS_B<sp/>for<sp/>compactness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>rTilde_ScS_B<sp/>=<sp/>eigenTilde(this-&gt;r_ScS_B);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>IPntS_B<sp/>=<sp/>this-&gt;IPntSc_B<sp/>-<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>rTilde_ScS_B<sp/>*<sp/>rTilde_ScS_B;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>DCM<sp/>from<sp/>N<sp/>to<sp/>B<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sigma_BN<sp/>=<sp/>sigma_BN;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;dcm_BN<sp/>=<sp/>(this-&gt;sigma_BN.toRotationMatrix()).transpose();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>gravity<sp/>to<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>gLocal_N<sp/>=<sp/>g_N;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>g_B<sp/>=<sp/>this-&gt;dcm_BN<sp/>*<sp/>gLocal_N;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>auxiliary<sp/>variable<sp/>mTheta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mTheta<sp/>=<sp/>this-&gt;sHat_B.transpose()<sp/>*<sp/>IPntS_B<sp/>*<sp/>this-&gt;sHat_B;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>the<sp/>axis<sp/>if<sp/>the<sp/>flag<sp/>is<sp/>set<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;lockFlag<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>aTheta,<sp/>bTheta<sp/>and<sp/>cTheta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;aTheta.setZero();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;bTheta.setZero();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cTheta<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>aTheta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;aTheta<sp/>=<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>rTilde_ScS_B<sp/>*<sp/>this-&gt;sHat_B<sp/>/<sp/>this-&gt;mTheta;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>bTheta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>rTilde_SB_B<sp/>=<sp/>eigenTilde(this-&gt;r_SB_B);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;bTheta<sp/>=<sp/>-(IPntS_B<sp/>-<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>rTilde_SB_B<sp/>*<sp/>rTilde_ScS_B)<sp/>*<sp/>this-&gt;sHat_B<sp/>/<sp/>this-&gt;mTheta;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>cTheta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDot_SB_B<sp/>=<sp/>this-&gt;omegaTilde_BN_B<sp/>*<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1aebca502c779927c4bb7ed1d4ed5d783f" kindref="member">r_SB_B</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gravityTorquePntS_B<sp/>=<sp/>rTilde_ScS_B<sp/>*<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>g_B;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cTheta<sp/>=<sp/>(this-&gt;u<sp/>-<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a6bef153af9fe019ecacc214710628cdb" kindref="member">k</ref><sp/>*<sp/>this-&gt;theta<sp/>-<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a6bf73c175c2c6dad09a0d2fe32c88d94" kindref="member">c</ref><sp/>*<sp/>this-&gt;thetaDot</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>this-&gt;sHat_B.dot(gravityTorquePntS_B<sp/>-<sp/>omegaTilde_SN_B<sp/>*<sp/>IPntS_B<sp/>*<sp/>this-&gt;omega_SN_B</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>IPntS_B<sp/>*<sp/>this-&gt;omegaTilde_BN_B<sp/>*<sp/>this-&gt;omega_SB_B</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>rTilde_ScS_B<sp/>*<sp/>this-&gt;omegaTilde_BN_B<sp/>*<sp/>rDot_SB_B))<sp/>/<sp/>this-&gt;mTheta;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>documentation<sp/>on<sp/>contributions<sp/>see<sp/>Vaz<sp/>Carneiro,<sp/>Allard,<sp/>Schaub<sp/>spinning<sp/>body<sp/>paper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Translation<sp/>contributions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.matrixA<sp/>=<sp/>-this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>rTilde_ScS_B<sp/>*<sp/>this-&gt;sHat_B<sp/>*<sp/>this-&gt;aTheta.transpose();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.matrixB<sp/>=<sp/>-this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>rTilde_ScS_B<sp/>*<sp/>this-&gt;sHat_B<sp/>*<sp/>this-&gt;bTheta.transpose();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.vecTrans<sp/>=<sp/>-this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>this-&gt;omegaTilde_SB_B<sp/>*<sp/>this-&gt;rPrime_ScS_B</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>rTilde_ScS_B<sp/>*<sp/>this-&gt;sHat_B<sp/>*<sp/>this-&gt;cTheta;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotation<sp/>contributions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.matrixC<sp/>=<sp/>(this-&gt;IPntSc_B<sp/>-<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>this-&gt;rTilde_ScB_B<sp/>*<sp/>rTilde_ScS_B)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this-&gt;sHat_B<sp/>*<sp/>this-&gt;aTheta.transpose();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.matrixD<sp/>=<sp/>(this-&gt;IPntSc_B<sp/>-<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>this-&gt;rTilde_ScB_B<sp/>*<sp/>rTilde_ScS_B)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this-&gt;sHat_B<sp/>*<sp/>this-&gt;bTheta.transpose();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.vecRot<sp/>=<sp/>-omegaTilde_SN_B<sp/>*<sp/>this-&gt;IPntSc_B<sp/>*<sp/>this-&gt;omega_SB_B</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>this-&gt;omegaTilde_BN_B<sp/>*<sp/>this-&gt;rTilde_ScB_B<sp/>*<sp/>this-&gt;rPrime_ScB_B</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>this-&gt;rTilde_ScB_B<sp/>*<sp/>this-&gt;omegaTilde_SB_B<sp/>*<sp/>this-&gt;rPrime_ScS_B</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(this-&gt;IPntSc_B<sp/>-<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>this-&gt;rTilde_ScB_B<sp/>*<sp/>rTilde_ScS_B)<sp/>*<sp/>this-&gt;sHat_B<sp/>*<sp/>this-&gt;cTheta;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spinning_body_one_d_o_f_state_effector_1a53e6f126552c4dbc75c319598d96bd91" kindref="member">SpinningBodyOneDOFStateEffector::computeDerivatives</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDDot_BN_N,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaDot_BN_B,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sigma_BN)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>dcm_BN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sigma_BN<sp/>=<sp/>sigma_BN;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;dcm_BN<sp/>=<sp/>(this-&gt;sigma_BN.toRotationMatrix()).transpose();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Grab<sp/>omegaDot_BN_B<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaDotLocal_BN_B;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>omegaDotLocal_BN_B<sp/>=<sp/>omegaDot_BN_B;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>rDDotLoc_BN_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>rDDotLocal_BN_N<sp/>=<sp/>rDDot_BN_N;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDDotLocal_BN_B;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>rDDotLocal_BN_B<sp/>=<sp/>this-&gt;dcm_BN<sp/>*<sp/>rDDotLocal_BN_N;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>Derivatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;thetaState-&gt;setDerivative(this-&gt;thetaDotState-&gt;getState());</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>thetaDDot(1,<sp/>1);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>thetaDDot(0,<sp/>0)<sp/>=<sp/>this-&gt;aTheta.dot(rDDotLocal_BN_B)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>this-&gt;bTheta.dot(omegaDotLocal_BN_B)<sp/>+<sp/>this-&gt;cTheta;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;thetaDotState-&gt;setDerivative(thetaDDot);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spinning_body_one_d_o_f_state_effector_1a7ce4599b79fcdef5e1a5e93dde6eeb94" kindref="member">SpinningBodyOneDOFStateEffector::updateEnergyMomContributions</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>&amp;<sp/>rotAngMomPntCContr_B,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>rotEnergyContr,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omega_BN_B)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>omega_BN_B<sp/>and<sp/>omega_SN_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omega_BN_B<sp/>=<sp/>omega_BN_B;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omegaTilde_BN_B<sp/>=<sp/>eigenTilde(this-&gt;omega_BN_B);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omega_SN_B<sp/>=<sp/>this-&gt;omega_SB_B<sp/>+<sp/>this-&gt;omega_BN_B;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>rDot_ScB_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rDot_ScB_B<sp/>=<sp/>this-&gt;rPrime_ScB_B<sp/>+<sp/>this-&gt;omegaTilde_BN_B<sp/>*<sp/>this-&gt;r_ScB_B;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>rotational<sp/>angular<sp/>momentum<sp/>contribution<sp/>from<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>rotAngMomPntCContr_B<sp/>=<sp/>this-&gt;IPntSc_B<sp/>*<sp/>this-&gt;omega_SN_B<sp/>+<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>this-&gt;rTilde_ScB_B<sp/>*<sp/>this-&gt;rDot_ScB_B;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>rotational<sp/>energy<sp/>contribution<sp/>from<sp/>the<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>rotEnergyContr<sp/>=<sp/>1.0<sp/>/<sp/>2.0<sp/>*<sp/>this-&gt;omega_SN_B.dot(this-&gt;IPntSc_B<sp/>*<sp/>this-&gt;omega_SN_B)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>1.0<sp/>/<sp/>2.0<sp/>*<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a427b4795f4330a572e9ae2a8ead81e3e" kindref="member">mass</ref><sp/>*<sp/>this-&gt;rDot_ScB_B.dot(this-&gt;rDot_ScB_B)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>1.0<sp/>/<sp/>2.0<sp/>*<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a6bef153af9fe019ecacc214710628cdb" kindref="member">k</ref><sp/>*<sp/>this-&gt;theta<sp/>*<sp/>this-&gt;theta;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spinning_body_one_d_o_f_state_effector_1a5b488c6808a742abef7f6e7677561228" kindref="member">SpinningBodyOneDOFStateEffector::computeSpinningBodyInertialStates</ref>()</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inertial<sp/>attitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_SN;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_SN<sp/>=<sp/>(this-&gt;dcm_BS).transpose()<sp/>*<sp/>this-&gt;dcm_BN;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sigma_SN<sp/>=<sp/>eigenMRPd2Vector3d(eigenC2MRP(dcm_SN));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inertial<sp/>position<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;r_ScN_N<sp/>=<sp/>(Eigen::Vector3d)*this-&gt;inertialPositionProperty<sp/>+<sp/>this-&gt;dcm_BN.transpose()<sp/>*<sp/>this-&gt;r_ScB_B;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inertial<sp/>velocity<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;v_ScN_N<sp/>=<sp/>(Eigen::Vector3d)*this-&gt;inertialVelocityProperty<sp/>+<sp/>this-&gt;dcm_BN.transpose()<sp/>*<sp/>this-&gt;rDot_ScB_B;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spinning_body_one_d_o_f_state_effector_1a03681fa8d5070db700675d8bf55fb27d" kindref="member">SpinningBodyOneDOFStateEffector::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a2a8c71b6bee91dd24ed07c5391a2387f" kindref="member">motorTorqueInMsg</ref>.isLinked()<sp/>&amp;&amp;<sp/>this-&gt;motorTorqueInMsg.isWritten())<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrayMotorTorqueMsgPayload<sp/>incomingCmdBuffer;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incomingCmdBuffer<sp/>=<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a2a8c71b6bee91dd24ed07c5391a2387f" kindref="member">motorTorqueInMsg</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;u<sp/>=<sp/>incomingCmdBuffer.motorTorque[0];</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1aae575e2f4a63a6a86795d8e2b8c4d55d" kindref="member">motorLockInMsg</ref>.isLinked()<sp/>&amp;&amp;<sp/>this-&gt;motorLockInMsg.isWritten())<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrayEffectorLockMsgPayload<sp/>incomingLockBuffer;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incomingLockBuffer<sp/>=<sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1aae575e2f4a63a6a86795d8e2b8c4d55d" kindref="member">motorLockInMsg</ref>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;lockFlag<sp/>=<sp/>incomingLockBuffer.effectorLockFlag[0];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>spinning<sp/>body<sp/>inertial<sp/>states<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a5b488c6808a742abef7f6e7677561228" kindref="member">computeSpinningBodyInertialStates</ref>();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spinning_body_one_d_o_f_state_effector_1a35b4cc54432b3c0315c7965063b486ed" kindref="member">writeOutputStateMessages</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/spinningBodies/spinningBodiesOneDOF/spinningBodyOneDOFStateEffector.cpp"/>
  </compounddef>
</doxygen>
