<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="power_storage_base_8h" kind="file" language="C++">
    <compoundname>powerStorageBase.h</compoundname>
    <includes local="no">Eigen/Dense</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="yes">architecture/_GeneralModuleFiles/sys_model.h</includes>
    <includes local="yes">architecture/msgPayloadDefC/PowerStorageStatusMsgPayload.h</includes>
    <includes local="yes">architecture/msgPayloadDefC/PowerNodeUsageMsgPayload.h</includes>
    <includes local="yes">architecture/messaging/messaging.h</includes>
    <includes local="yes">architecture/utilities/bskLogging.h</includes>
    <includedby refid="power_storage_base_8cpp" local="yes">/Users/julio/Desktop/basilisk/src/simulation/power/_GeneralModuleFiles/powerStorageBase.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/power/_GeneralModuleFiles/powerStorageBase.h</label>
        <link refid="power_storage_base_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Eigen/Dense</label>
      </node>
      <node id="5">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="8">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="7">
        <label>architecture/msgPayloadDefC/PowerNodeUsageMsgPayload.h</label>
      </node>
      <node id="6">
        <label>architecture/msgPayloadDefC/PowerStorageStatusMsgPayload.h</label>
      </node>
      <node id="9">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_power_storage_base" prot="public">PowerStorageBase</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/_GeneralModuleFiles/sys_model.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/msgPayloadDefC/PowerStorageStatusMsgPayload.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/msgPayloadDefC/PowerNodeUsageMsgPayload.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/messaging/messaging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/bskLogging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BASILISK_SIMPOWERSTORAGEBASE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BASILISK_SIMPOWERSTORAGEBASE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_power_storage_base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_power_storage_base" kindref="compound">PowerStorageBase</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SysModel<sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_power_storage_base_1a1ee2f5dbaaf9230def31fb81e94d255c" kindref="member">PowerStorageBase</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_power_storage_base_1a47556997698ea7383d346304d30364cc" kindref="member">~PowerStorageBase</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a0c854192f4beac3577b57a0faf04bef6" kindref="member">Reset</ref>(uint64_t<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a0c120365ec724b8669f78836bb4c5994" kindref="member">addPowerNodeToModel</ref>(Message&lt;PowerNodeUsageMsgPayload&gt;<sp/>*tmpNodeMsg);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a64566bb286a0f244b56f07173c064a0e" kindref="member">UpdateState</ref>(uint64_t<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a228ae833c1847631e4b7c5363ccae223" kindref="member">writeMessages</ref>(uint64_t<sp/>CurrentClock);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a3f5ccdf3ddba0076f0041b6c32854581" kindref="member">readMessages</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a730326118bcdf3c0078f9a6a73a3ce83" kindref="member">integratePowerStatus</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentTime);<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a678b7d55cf5efbf44e381b4880b4ee0d" kindref="member">sumAllInputs</ref>();<sp/></highlight></codeline>
<codeline lineno="49" refid="class_power_storage_base_1a297f940996a09c5dbad5089237e307ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a297f940996a09c5dbad5089237e307ae" kindref="member">evaluateBatteryModel</ref>(PowerStorageStatusMsgPayload<sp/>*msg)<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a3b4ab24db2b1eec86b8f69fc8411324d" kindref="member">customReset</ref>(uint64_t<sp/>CurrentClock);<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a60f0af7c3fd9eccf7b1212816a26742d" kindref="member">customWriteMessages</ref>(uint64_t<sp/>currentSimNanos);<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a163ffdb1ef2598d7b0e4cbd83a4a56ad" kindref="member">customReadMessages</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55" refid="class_power_storage_base_1a9a8ceb2948724a92e80a2ae707e87060" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ReadFunctor&lt;PowerNodeUsageMsgPayload&gt;&gt;<sp/><ref refid="class_power_storage_base_1a9a8ceb2948724a92e80a2ae707e87060" kindref="member">nodePowerUseInMsgs</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="class_power_storage_base_1aef1349e82eb2769df30fbdadb80c7500" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Message&lt;PowerStorageStatusMsgPayload&gt;<sp/><ref refid="class_power_storage_base_1aef1349e82eb2769df30fbdadb80c7500" kindref="member">batPowerOutMsg</ref>;<sp/></highlight></codeline>
<codeline lineno="57" refid="class_power_storage_base_1ae13559b38b371f0d001caa105dfe1e4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1ae13559b38b371f0d001caa105dfe1e4f" kindref="member">storedCharge_Init</ref>;</highlight></codeline>
<codeline lineno="58" refid="class_power_storage_base_1ae076cce007b125c8924326dff8640639" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BSKLogger<sp/><ref refid="class_power_storage_base_1ae076cce007b125c8924326dff8640639" kindref="member">bskLogger</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61" refid="class_power_storage_base_1af5bc8ce3cf5d787dd6138b744031c76e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>PowerStorageStatusMsgPayload<sp/><ref refid="class_power_storage_base_1af5bc8ce3cf5d787dd6138b744031c76e" kindref="member">storageStatusMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="class_power_storage_base_1a655210a8de325e824890c106ea390535" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PowerNodeUsageMsgPayload&gt;<sp/><ref refid="class_power_storage_base_1a655210a8de325e824890c106ea390535" kindref="member">nodeWattMsgs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="class_power_storage_base_1a44a5bee11d56a5dbdbec996785b45978" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a44a5bee11d56a5dbdbec996785b45978" kindref="member">previousTime</ref>;<sp/></highlight></codeline>
<codeline lineno="64" refid="class_power_storage_base_1ac649f20920580dee28f9585daf042d21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1ac649f20920580dee28f9585daf042d21" kindref="member">currentTimestep</ref>;</highlight></codeline>
<codeline lineno="65" refid="class_power_storage_base_1a024603a82e471feb15f6d37d5a001eff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a024603a82e471feb15f6d37d5a001eff" kindref="member">storedCharge</ref>;<sp/></highlight></codeline>
<codeline lineno="66" refid="class_power_storage_base_1a771327b3e1b43f5fa5b52313743fc339" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_power_storage_base_1a771327b3e1b43f5fa5b52313743fc339" kindref="member">currentPowerSum</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//BASILISK_SIMPOWERSTORAGEBASE_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/power/_GeneralModuleFiles/powerStorageBase.h"/>
  </compounddef>
</doxygen>
