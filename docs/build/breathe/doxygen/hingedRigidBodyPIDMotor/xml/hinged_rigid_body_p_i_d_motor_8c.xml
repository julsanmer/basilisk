<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="hinged_rigid_body_p_i_d_motor_8c" kind="file" language="C++">
    <compoundname>hingedRigidBodyPIDMotor.c</compoundname>
    <includes refid="hinged_rigid_body_p_i_d_motor_8h" local="yes">hingedRigidBodyPIDMotor.h</includes>
    <includes local="yes">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/hingedRigidBodyPIDMotor/hingedRigidBodyPIDMotor.c</label>
        <link refid="hinged_rigid_body_p_i_d_motor_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hingedRigidBodyPIDMotor.h</label>
        <link refid="hinged_rigid_body_p_i_d_motor_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="9">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="6">
        <label>cMsgCInterface/ArrayMotorTorqueMsg_C.h</label>
      </node>
      <node id="5">
        <label>cMsgCInterface/HingedRigidBodyMsg_C.h</label>
      </node>
      <node id="8">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="hinged_rigid_body_p_i_d_motor_8c_1a4aca263774851668782d7903074e49f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_hingedRigidBodyPIDMotor</definition>
        <argsstring>(hingedRigidBodyPIDMotorConfig *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_hingedRigidBodyPIDMotor</name>
        <param>
          <type><ref refid="structhinged_rigid_body_p_i_d_motor_config" kindref="compound">hingedRigidBodyPIDMotorConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initializes the output messages for this module. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with this module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/hingedRigidBodyPIDMotor/hingedRigidBodyPIDMotor.c" line="35" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/hingedRigidBodyPIDMotor/hingedRigidBodyPIDMotor.c" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="hinged_rigid_body_p_i_d_motor_8c_1aa9209e5cfd12d2a617fc09f8cf0691eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_hingedRigidBodyPIDMotor</definition>
        <argsstring>(hingedRigidBodyPIDMotorConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_hingedRigidBodyPIDMotor</name>
        <param>
          <type><ref refid="structhinged_rigid_body_p_i_d_motor_config" kindref="compound">hingedRigidBodyPIDMotorConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs a complete reset of the module. Local module variables that retain time varying states between function calls are reset to their default values. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>[ns] time the method is called </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>initialize module parameters to compute integral error via trapezoid integration</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/hingedRigidBodyPIDMotor/hingedRigidBodyPIDMotor.c" line="48" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/hingedRigidBodyPIDMotor/hingedRigidBodyPIDMotor.c" bodystart="48" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="hinged_rigid_body_p_i_d_motor_8c_1a2a70739a55cab59aca1754be287fa405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_hingedRigidBodyPIDMotor</definition>
        <argsstring>(hingedRigidBodyPIDMotorConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_hingedRigidBodyPIDMotor</name>
        <param>
          <type><ref refid="structhinged_rigid_body_p_i_d_motor_config" kindref="compound">hingedRigidBodyPIDMotorConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method computes the control torque to the solar array drive based on a PD control law <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Create and assign buffer messages</para>
</listitem></itemizedlist>
</para>
<para>compute angle error and error rate</para>
<para>extract gains from input</para>
<para>compute integral term</para>
<para>update stored quantities</para>
<para>compute torque</para>
<para>write output message</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/hingedRigidBodyPIDMotor/hingedRigidBodyPIDMotor.c" line="69" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/hingedRigidBodyPIDMotor/hingedRigidBodyPIDMotor.c" bodystart="69" bodyend="102"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2023,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>modify<sp/>the<sp/>path<sp/>to<sp/>reflect<sp/>the<sp/>new<sp/>module<sp/>names<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hingedRigidBodyPIDMotor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Support<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_hingedRigidBodyPIDMotor(<ref refid="structhinged_rigid_body_p_i_d_motor_config" kindref="compound">hingedRigidBodyPIDMotorConfig</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayMotorTorqueMsg_C_init(&amp;configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a02a2cb80c59aced25f42475e923a13a3" kindref="member">motorTorqueOutMsg</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_hingedRigidBodyPIDMotor(<ref refid="structhinged_rigid_body_p_i_d_motor_config" kindref="compound">hingedRigidBodyPIDMotorConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!HingedRigidBodyMsg_C_isLinked(&amp;configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1ae5eec1e605cad5f10cc487900d65e9ef" kindref="member">hingedRigidBodyInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a288db058461aab3d2b072791da777d57" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>solarArrayAngle.hingedRigidBodyInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!HingedRigidBodyMsg_C_isLinked(&amp;configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a9a2f09f98c4dff7a233ef63d76432a5c" kindref="member">hingedRigidBodyRefInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a288db058461aab3d2b072791da777d57" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>solarArrayAngle.hingedRigidBodyRefInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a8274d45778ba66db74f018c3eb8cdd2c" kindref="member">priorTime</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a2dbb45af092580170e1fce98bcd107d5" kindref="member">priorThetaError</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1aaf43e46a34f90d404ac0ee72f434675a" kindref="member">intError</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_hingedRigidBodyPIDMotor(<ref refid="structhinged_rigid_body_p_i_d_motor_config" kindref="compound">hingedRigidBodyPIDMotorConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayMotorTorqueMsgPayload<sp/>motorTorqueOut<sp/>=<sp/>ArrayMotorTorqueMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>HingedRigidBodyMsgPayload<sp/><sp/>hingedRigidBodyIn<sp/>=<sp/>HingedRigidBodyMsg_C_read(&amp;configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1ae5eec1e605cad5f10cc487900d65e9ef" kindref="member">hingedRigidBodyInMsg</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>HingedRigidBodyMsgPayload<sp/><sp/>hingedRigidBodyRefIn<sp/>=<sp/>HingedRigidBodyMsg_C_read(&amp;configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a9a2f09f98c4dff7a233ef63d76432a5c" kindref="member">hingedRigidBodyRefInMsg</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thetaError<sp/><sp/><sp/><sp/>=<sp/>hingedRigidBodyRefIn.theta<sp/>-<sp/>hingedRigidBodyIn.theta;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thetaErrorDot<sp/>=<sp/>hingedRigidBodyRefIn.thetaDot<sp/>-<sp/>hingedRigidBodyIn.thetaDot;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>K<sp/>=<sp/>configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a6a7d3fcdaff12152dea9b9187a6bc2ef" kindref="member">K</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>P<sp/>=<sp/>configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1ab70afdf62acac5dadfca7409c432989e" kindref="member">P</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I<sp/>=<sp/>configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a948905a93162957a76e7ed3cb504082d" kindref="member">I</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callTime<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>(callTime<sp/>-<sp/>configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a8274d45778ba66db74f018c3eb8cdd2c" kindref="member">priorTime</ref>)<sp/>*<sp/>NANO2SEC;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1aaf43e46a34f90d404ac0ee72f434675a" kindref="member">intError</ref><sp/>+=<sp/>(thetaError<sp/>+<sp/>configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a2dbb45af092580170e1fce98bcd107d5" kindref="member">priorThetaError</ref>)<sp/>*<sp/>dt<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a2dbb45af092580170e1fce98bcd107d5" kindref="member">priorThetaError</ref><sp/>=<sp/>thetaError;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a8274d45778ba66db74f018c3eb8cdd2c" kindref="member">priorTime</ref><sp/>=<sp/>callTime;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>K<sp/>*<sp/>thetaError<sp/>+<sp/>P<sp/>*<sp/>thetaErrorDot<sp/>+<sp/>I<sp/>*<sp/>configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1aaf43e46a34f90d404ac0ee72f434675a" kindref="member">intError</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>motorTorqueOut.motorTorque[0]<sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayMotorTorqueMsg_C_write(&amp;motorTorqueOut,<sp/>&amp;configData-&gt;<ref refid="structhinged_rigid_body_p_i_d_motor_config_1a02a2cb80c59aced25f42475e923a13a3" kindref="member">motorTorqueOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/hingedRigidBodyPIDMotor/hingedRigidBodyPIDMotor.c"/>
  </compounddef>
</doxygen>
