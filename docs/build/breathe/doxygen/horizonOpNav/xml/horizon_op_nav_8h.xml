<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="horizon_op_nav_8h" kind="file" language="C++">
    <compoundname>horizonOpNav.h</compoundname>
    <includes local="yes">cMsgCInterface/NavAttMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/OpNavLimbMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/CameraConfigMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/OpNavMsg_C.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/astroConstants.h</includes>
    <includes local="yes">architecture/utilities/rigidBodyKinematics.h</includes>
    <includes local="yes">architecture/utilities/bskLogging.h</includes>
    <includedby refid="horizon_op_nav_8c" local="yes">/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.h</label>
        <link refid="horizon_op_nav_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>architecture/utilities/astroConstants.h</label>
      </node>
      <node id="10">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="7">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="6">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="9">
        <label>architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="4">
        <label>cMsgCInterface/CameraConfigMsg_C.h</label>
      </node>
      <node id="2">
        <label>cMsgCInterface/NavAttMsg_C.h</label>
      </node>
      <node id="3">
        <label>cMsgCInterface/OpNavLimbMsg_C.h</label>
      </node>
      <node id="5">
        <label>cMsgCInterface/OpNavMsg_C.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_horizon_op_nav_data" prot="public">HorizonOpNavData</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="horizon_op_nav_8h_1abf8c5797f218b4f158e27b45bcf71ff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_horizonOpNav</definition>
        <argsstring>(HorizonOpNavData *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_horizonOpNav</name>
        <param>
          <type><ref refid="struct_horizon_op_nav_data" kindref="compound">HorizonOpNavData</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method transforms pixel, line, and diameter data into heading data for orbit determination or heading determination. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the ephemeris model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identification integer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.h" line="52" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.c" bodystart="32" bodyend="35" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.h" declline="52" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="horizon_op_nav_8h_1a3bd8e8af3ed05fba2a5d077f480418b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_horizonOpNav</definition>
        <argsstring>(HorizonOpNavData *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_horizonOpNav</name>
        <param>
          <type><ref refid="struct_horizon_op_nav_data" kindref="compound">HorizonOpNavData</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method reads in the camera and circle messages and extracts navigation data from them. It outputs the heading (norm and direction) to the celestial body identified in the inertial frame. It provides the heading to the most robust circle identified by the image processing algorithm. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the ephemeris model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identification integer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>zero copies of output messages</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>read input messages</para>
</listitem></itemizedlist>
</para>
<para>Check the validity of the image</para>
<para>Create Q matrix, the square root inverse of the A matrix, eq (6) in Engineering Note</para>
<para>Build DCMs</para>
<para><itemizedlist>
<listitem><para>Find pixel size using camera specs</para>
</listitem></itemizedlist>
</para>
<para>Matrix of all the limb points</para>
<para>variables for covariance</para>
<para>Set the map from pixel to position eq (8) in Journal</para>
<para>Set the noise matrix in pix eq (53) in Engineering Note</para>
<para>Rotate R_s with B eq (52) in Journal</para>
<para>Create the H matrix. This is the stacked vector of all the limb points eq (33) in Engineering Note attached</para>
<para><itemizedlist>
<listitem><para>Put the pixel data in s (not s currently)</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Apply the trasnformation computed previously from pixel to position</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Rotate the Vector in the inertial frame</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>We now have s_bar in the Journal Paper, store to later compute J for uncertainty</para>
</listitem></itemizedlist>
</para>
<para>Need to solve Hn = 1, for n. If we performa QR decomp on H, the problem becomes: Rn = Q^T.1</para>
<para>Perform the QR decompostion of H, this will</para>
<para>Useful scalars for the rest of the implementation</para>
<para><itemizedlist>
<listitem><para>QR decomp</para>
</listitem></itemizedlist>
</para>
<para>Backsub to get n</para>
<para><itemizedlist>
<listitem><para>With all the s_bar terms, and n, we can compute J eq(50) in journal, and get uncertainty</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Equation 31 in Journal</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Rotate the Vector in the inertial frame</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Covar from least squares - probably the most computationally expensive segment</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute Scale factor now that n is computed</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Build F from eq (55) of engineering note</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Get the heading</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Build F from eq (55) of engineering note</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Get covar from eq (57) of engineering note</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Transform to desireable frames</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>write output message</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.h" line="53" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.c" bodystart="65" bodyend="263" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.h" declline="53" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="horizon_op_nav_8h_1a3ae3e26109194709d9b5dd5a655312db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_horizonOpNav</definition>
        <argsstring>(HorizonOpNavData *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_horizonOpNav</name>
        <param>
          <type><ref refid="struct_horizon_op_nav_data" kindref="compound">HorizonOpNavData</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This resets the module to original states. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the ephemeris model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identification integer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.h" line="55" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.c" bodystart="44" bodyend="57" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.h" declline="55" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="horizon_op_nav_8h_1ad09dc0ac0a8b0f2e6868f7ee8a1b9c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QRDecomp</definition>
        <argsstring>(double *inMat, int32_t nRow, double *Q, double *R)</argsstring>
        <name>QRDecomp</name>
        <param>
          <type>double *</type>
          <declname>inMat</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>nRow</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This performs a QR decomposition on a input matrix. In this method it&apos;s used on the H matrix made up of the limb points <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inMat</parametername>
</parameternamelist>
<parameterdescription>
<para>The input matrix to decompose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nRow</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of rows </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>The output Q matrix (numbLimb x 3) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>The output R matrix (3 x 3) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.h" line="56" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.c" bodystart="273" bodyend="308" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.h" declline="56" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="horizon_op_nav_8h_1a81aa6c3aef0e7701d8bb8b0ddde62213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BackSub</definition>
        <argsstring>(double *R, double *inVec, int32_t nRow, double *n)</argsstring>
        <name>BackSub</name>
        <param>
          <type>double *</type>
          <declname>R</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>inVec</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>nRow</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This performs a backsubstitution solve. This methods solves for n given Rn = V with R an upper triangular matrix. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper triangular matrix for the backsolve </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inVec</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector on the Right-Hand-Side of the Rn = V equation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nRow</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of rows/columns </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The solution vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.h" line="57" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.c" bodystart="317" bodyend="336" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.h" declline="57" declcolumn="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_HORIZON_OPNAV_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_HORIZON_OPNAV_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/NavAttMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/OpNavLimbMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/CameraConfigMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/OpNavMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/astroConstants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/bskLogging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="struct_horizon_op_nav_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37" refid="struct_horizon_op_nav_data_1a000d3b2d092d56e46ca2e9bc5a1cc5a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>OpNavMsg_C<sp/><ref refid="struct_horizon_op_nav_data_1a000d3b2d092d56e46ca2e9bc5a1cc5a1" kindref="member">opNavOutMsg</ref>;<sp/></highlight></codeline>
<codeline lineno="38" refid="struct_horizon_op_nav_data_1a3ff9caec8f762a7c95790b80aea9fb29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraConfigMsg_C<sp/><ref refid="struct_horizon_op_nav_data_1a3ff9caec8f762a7c95790b80aea9fb29" kindref="member">cameraConfigInMsg</ref>;<sp/></highlight></codeline>
<codeline lineno="39" refid="struct_horizon_op_nav_data_1a904b619c8f2dfbf189d29aefd83fda71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>NavAttMsg_C<sp/><ref refid="struct_horizon_op_nav_data_1a904b619c8f2dfbf189d29aefd83fda71" kindref="member">attInMsg</ref>;<sp/></highlight></codeline>
<codeline lineno="40" refid="struct_horizon_op_nav_data_1a5c06eee2505924df39c41f724742a778" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>OpNavLimbMsg_C<sp/><ref refid="struct_horizon_op_nav_data_1a5c06eee2505924df39c41f724742a778" kindref="member">limbInMsg</ref>;<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="struct_horizon_op_nav_data_1a2eb3cb41d746d7d676aae3c5716ee3b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_horizon_op_nav_data_1a2eb3cb41d746d7d676aae3c5716ee3b5" kindref="member">planetTarget</ref>;<sp/></highlight></codeline>
<codeline lineno="43" refid="struct_horizon_op_nav_data_1a30ca6f7b609bc09bf4df3b9b0b34ab91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_horizon_op_nav_data_1a30ca6f7b609bc09bf4df3b9b0b34ab91" kindref="member">noiseSF</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="struct_horizon_op_nav_data_1aedfbcd9a6b605d1caa2ec74086970f1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BSKLogger<sp/>*<ref refid="struct_horizon_op_nav_data_1aedfbcd9a6b605d1caa2ec74086970f1a" kindref="member">bskLogger</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}<ref refid="struct_horizon_op_nav_data" kindref="compound">HorizonOpNavData</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_horizonOpNav(<ref refid="struct_horizon_op_nav_data" kindref="compound">HorizonOpNavData</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_horizonOpNav(<ref refid="struct_horizon_op_nav_data" kindref="compound">HorizonOpNavData</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_horizonOpNav(<ref refid="struct_horizon_op_nav_data" kindref="compound">HorizonOpNavData</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QRDecomp(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*inMat,<sp/>int32_t<sp/>nRow,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*Q<sp/>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*R);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BackSub(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*R,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*inVec,<sp/>int32_t<sp/>nRow,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*n);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/imageProcessing/horizonOpNav/horizonOpNav.h"/>
  </compounddef>
</doxygen>
