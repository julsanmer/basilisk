<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="css_wls_est_8c" kind="file" language="C++">
    <compoundname>cssWlsEst.c</compoundname>
    <includes refid="css_wls_est_8h" local="yes">fswAlgorithms/attDetermination/CSSEst/cssWlsEst.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/CSSEst/cssWlsEst.c</label>
        <link refid="css_wls_est_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fswAlgorithms/attDetermination/CSSEst/cssWlsEst.h</label>
        <link refid="css_wls_est_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="10">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="11">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="6">
        <label>cMsgCInterface/CSSArraySensorMsg_C.h</label>
      </node>
      <node id="4">
        <label>cMsgCInterface/CSSConfigMsg_C.h</label>
      </node>
      <node id="5">
        <label>cMsgCInterface/CSSUnitConfigMsg_C.h</label>
      </node>
      <node id="3">
        <label>cMsgCInterface/NavAttMsg_C.h</label>
      </node>
      <node id="7">
        <label>cMsgCInterface/SunlineFilterMsg_C.h</label>
      </node>
      <node id="13">
        <label>math.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="12">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="css_wls_est_8c_1a51568a32114319904312e789648fa08f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_cssWlsEst</definition>
        <argsstring>(CSSWLSConfig *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_cssWlsEst</name>
        <param>
          <type><ref refid="struct_c_s_s_w_l_s_config" kindref="compound">CSSWLSConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initializes the configData for theCSS WLS estimator. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the CSS WLS estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/CSSEst/cssWlsEst.c" line="31" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/CSSEst/cssWlsEst.c" bodystart="31" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="css_wls_est_8c_1a4fb1fd5ad38b021a1b677dc6cbc76fa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_cssWlsEst</definition>
        <argsstring>(CSSWLSConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_cssWlsEst</name>
        <param>
          <type><ref refid="struct_c_s_s_w_l_s_config" kindref="compound">CSSWLSConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs a complete reset of the module. Local module variables that retain time varying states between function calls are reset to their default values. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the guidance module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/CSSEst/cssWlsEst.c" line="47" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/CSSEst/cssWlsEst.c" bodystart="47" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="css_wls_est_8c_1a0376bf66928694ee058ec5b0557c283d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void computeWlsResiduals</definition>
        <argsstring>(double *cssMeas, CSSConfigMsgPayload *cssConfig, double *wlsEst, double *cssResiduals)</argsstring>
        <name>computeWlsResiduals</name>
        <param>
          <type>double *</type>
          <declname>cssMeas</declname>
        </param>
        <param>
          <type>CSSConfigMsgPayload *</type>
          <declname>cssConfig</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>wlsEst</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cssResiduals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method computes the post-fit residuals for the WLS estimate. Note that everything has to have been allocated appropriately as this function operates directly on the arrays. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cssMeas</parametername>
</parameternamelist>
<parameterdescription>
<para>The measured values for the CSS sensors </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cssConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>The CSS configuration information </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wlsEst</parametername>
</parameternamelist>
<parameterdescription>
<para>The WLS estimate computed for the CSS measurements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cssResiduals</parametername>
</parameternamelist>
<parameterdescription>
<para>The measurement residuals output by this function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>The method loops through the sensors and performs:</para>
<para><orderedlist>
<listitem><para>A dot product between the computed estimate with each sensor normal</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>A subtraction between that post-fit measurement estimate and the actual measurement</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>This populates the post-fit residuals</para>
</listitem></orderedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/CSSEst/cssWlsEst.c" line="85" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/CSSEst/cssWlsEst.c" bodystart="85" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="css_wls_est_8c_1a9827576c7338e6c072fbab23e1a7a5f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeWlsmn</definition>
        <argsstring>(int numActiveCss, double *H, double *W, double *y, double x[3])</argsstring>
        <name>computeWlsmn</name>
        <param>
          <type>int</type>
          <declname>numActiveCss</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>H</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>W</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method computes a least squares fit with the given parameters. It treats the inputs as though they were double dimensioned arrays but they are all singly dimensioned for ease of use <simplesect kind="return"><para>success indicator (0 for good, 1 for fail) </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numActiveCss</parametername>
</parameternamelist>
<parameterdescription>
<para>The count on input measurements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>H</parametername>
</parameternamelist>
<parameterdescription>
<para>The predicted pointing vector for each measurement </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>the weighting matrix for the set of measurements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the observation vector for the valid sensors </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The output least squares fit for the observations </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>If we only have one sensor, output best guess (cone of possiblities)</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>If we have two, then do a 2x2 fit</para>
</listitem></itemizedlist>
</para>
<para><orderedlist>
<listitem><para>Find minimum norm solution</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>Multiply the Ht(HHt)^-1 by the observation vector to get fit</para>
</listitem></orderedlist>
</para>
<para><itemizedlist>
<listitem><para>If we have more than 2, do true LSQ fit</para>
</listitem></itemizedlist>
</para>
<para><orderedlist>
<listitem><para>Use the weights to compute (HtWH)^-1HW</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>Multiply the LSQ matrix by the obs vector for best fit</para>
</listitem></orderedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/CSSEst/cssWlsEst.c" line="114" column="5" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/CSSEst/cssWlsEst.c" bodystart="114" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="css_wls_est_8c_1aa161bc587203c9c1ab7bdf81fb33a96b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_cssWlsEst</definition>
        <argsstring>(CSSWLSConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_cssWlsEst</name>
        <param>
          <type><ref refid="struct_c_s_s_w_l_s_config" kindref="compound">CSSWLSConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method takes the parsed CSS sensor data and outputs an estimate of the sun vector in the ADCS body frame <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the CSS estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Message Read and Setup</para>
<para><itemizedlist>
<listitem><para>Read the input parsed CSS sensor data message</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute control update time</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Loop over the maximum number of sensors to check for good measurements</para>
</listitem></itemizedlist>
</para>
<para><orderedlist>
<listitem><para>Isolate if measurement is good</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>Set body vector for this measurement</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>Get measurement value into observation vector</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>Set inverse noise matrix</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>increase the number of valid observations</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>Otherwise just continue</para>
</listitem></orderedlist>
</para>
<para>Estimation Steps</para>
<para><itemizedlist>
<listitem><para>If there is no sun, just quit</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>If no CSS got a strong enough signal. Sun estimation is not possible. Return the zero vector instead</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>If at least one CSS got a strong enough signal. Proceed with the sun heading estimation</para>
</listitem></itemizedlist>
</para>
<para><orderedlist>
<listitem><para>Configuration option to weight the measurements, otherwise set weighting matrix to identity</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>Get least squares fit for sun pointing vector</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>Estimate the inertial angular velocity from the rate of the sun heading measurements</para>
</listitem></orderedlist>
</para>
<para><orderedlist>
<listitem><para>Store the sun heading estimate</para>
</listitem></orderedlist>
</para>
<para>Residual Computation</para>
<para><itemizedlist>
<listitem><para>If the residual fit output message is set, then compute the residuals and stor them in the output message</para>
</listitem></itemizedlist>
</para>
<para>Writing Outputs</para>
<para><itemizedlist>
<listitem><para>If the status from the WLS computation is erroneous, populate the output messages with zeros</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>If the status from the WLS computation good, populate the output messages with the computed data</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/CSSEst/cssWlsEst.c" line="161" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/CSSEst/cssWlsEst.c" bodystart="161" bodyend="281"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fswAlgorithms/attDetermination/CSSEst/cssWlsEst.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_cssWlsEst(<ref refid="struct_c_s_s_w_l_s_config" kindref="compound">CSSWLSConfig</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>NavAttMsg_C_init(&amp;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1abae47f4995543c48dbef2809d5ce8f1e" kindref="member">navStateOutMsg</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SunlineFilterMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a338f3e96cc7dfce9ce2336acfd537e62" kindref="member">cssWLSFiltResOutMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SunlineFilterMsg_C_init(&amp;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a338f3e96cc7dfce9ce2336acfd537e62" kindref="member">cssWLSFiltResOutMsg</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_cssWlsEst(<ref refid="struct_c_s_s_w_l_s_config" kindref="compound">CSSWLSConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>required<sp/>messages<sp/>have<sp/>been<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CSSConfigMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a2226ced6530c8f642619d8447c6f6293" kindref="member">cssConfigInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a677f0ee8c0d12fcb2e44a26c886571fe" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>cssWIsEst.cssConfigInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CSSArraySensorMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1aa97a1f88ff58ed6fd6d9633499110965" kindref="member">cssDataInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a677f0ee8c0d12fcb2e44a26c886571fe" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>cssWIsEst.cssDataInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af15454b36c9ba51d642e029dadab426d" kindref="member">cssConfigInBuffer</ref><sp/>=<sp/>CSSConfigMsg_C_read(&amp;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a2226ced6530c8f642619d8447c6f6293" kindref="member">cssConfigInMsg</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1abc39ae1c9f9e18d892c4a048c54790d1" kindref="member">priorSignalAvailable</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>v3SetZero(configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a8a992b35146ccdc6734c567260faf1c1" kindref="member">dOld</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a2337ad70efe713dfb623ee4deac2f700" kindref="member">filtStatus</ref>.numObs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a2337ad70efe713dfb623ee4deac2f700" kindref="member">filtStatus</ref>.timeTag<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>v3SetZero(configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a2337ad70efe713dfb623ee4deac2f700" kindref="member">filtStatus</ref>.state);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>vSetZero(configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a2337ad70efe713dfb623ee4deac2f700" kindref="member">filtStatus</ref>.postFitRes,<sp/>MAX_N_CSS_MEAS);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>prior<sp/>time<sp/>flag<sp/>state.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>If<sp/>zero,<sp/>control<sp/>time<sp/>step<sp/>not<sp/>evaluated<sp/>on<sp/>the<sp/>first<sp/>function<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a4c4eb48695f4379aa9ad72399d5c2d5f" kindref="member">priorTime</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeWlsResiduals(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*cssMeas,<sp/>CSSConfigMsgPayload<sp/>*cssConfig,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*wlsEst,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*cssResiduals)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cssDotProd;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(cssResiduals,<sp/>0x0,<sp/>cssConfig-&gt;nCSS*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint32_t<sp/>i=0;<sp/>i&lt;cssConfig-&gt;nCSS;<sp/>i++)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cssDotProd<sp/>=<sp/>v3Dot(wlsEst,<sp/>cssConfig-&gt;cssVals[i].nHat_B);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cssDotProd<sp/>=<sp/>cssDotProd<sp/>&gt;<sp/>0.0<sp/>?<sp/>cssDotProd<sp/>:<sp/>0.0;<sp/></highlight><highlight class="comment">/*CSS<sp/>values<sp/>can&apos;t<sp/>be<sp/>negative!*/</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cssResiduals[i]<sp/>=<sp/>cssMeas[i]<sp/>-<sp/>cssDotProd;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>computeWlsmn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numActiveCss,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*H,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*W,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3])</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m22[2*2];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m32[3*2];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>m33[3*3];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>m33_2[3*3];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>m3N[3*MAX_NUM_CSS_SENSORS];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>m3N_2[3*MAX_NUM_CSS_SENSORS];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numActiveCss<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Here&apos;s<sp/>a<sp/>guess.<sp/><sp/>Do<sp/>with<sp/>it<sp/>what<sp/>you<sp/>will.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i=i+1)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i]<sp/>=<sp/>H[0*MAX_NUM_CSS_SENSORS+i]<sp/>*<sp/>y[0];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numActiveCss<sp/>==<sp/>2)<sp/>{<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMultMt(H,<sp/>2,<sp/>3,<sp/>H,<sp/>2,<sp/>3,<sp/>m22);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>m22Inverse(RECAST2x2<sp/>m22,<sp/>RECAST2x2<sp/>m22);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtMultM(H,<sp/>2,<sp/>3,<sp/>m22,<sp/>2,<sp/>2,<sp/>m32);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMultV(m32,<sp/>3,<sp/>2,<sp/>y,<sp/>x);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numActiveCss<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtMultM(H,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>numActiveCss,<sp/>3,<sp/>W,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>numActiveCss,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>numActiveCss,<sp/>m3N);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMultM(m3N,<sp/>3,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>numActiveCss,<sp/>H,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>numActiveCss,<sp/>3,<sp/>m33);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>m33Inverse(RECAST3X3<sp/>m33,<sp/>RECAST3X3<sp/>m33_2);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMultMt(m33_2,<sp/>3,<sp/>3,<sp/>H,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>numActiveCss,<sp/>3,<sp/>m3N);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMultM(m3N,<sp/>3,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>numActiveCss,<sp/>W,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>numActiveCss,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>numActiveCss,<sp/>m3N_2);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMultV(m3N_2,<sp/>3,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>numActiveCss,<sp/>y,<sp/>x);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(status);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_cssWlsEst(<ref refid="struct_c_s_s_w_l_s_config" kindref="compound">CSSWLSConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>CSSArraySensorMsgPayload<sp/>InputBuffer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CSS<sp/>measurements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>H[MAX_NUM_CSS_SENSORS*3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>predicted<sp/>pointing<sp/>vector<sp/>for<sp/>each<sp/>measurement<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[MAX_NUM_CSS_SENSORS];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Measurements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>W[MAX_NUM_CSS_SENSORS*MAX_NUM_CSS_SENSORS];<sp/><sp/></highlight><highlight class="comment">/*<sp/>Matrix<sp/>of<sp/>measurement<sp/>weights<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Quality<sp/>of<sp/>the<sp/>module<sp/>estimate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dOldDotNew;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>value<sp/>for<sp/>dot<sp/>product<sp/>between<sp/>new<sp/>and<sp/>old<sp/>estimates<sp/>for<sp/>rate<sp/>estimation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dHatNew[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>New<sp/>normalized<sp/>sun<sp/>heading<sp/>estimate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dHatOld[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prior<sp/>normalized<sp/>sun<sp/>heading<sp/>estimate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>dt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[s]<sp/>Control<sp/>update<sp/>period<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>NavAttMsgPayload<sp/>sunlineOutBuffer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Output<sp/>Nav<sp/>message*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Zero<sp/>output<sp/>message*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>sunlineOutBuffer<sp/>=<sp/>NavAttMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>InputBuffer<sp/>=<sp/>CSSArraySensorMsg_C_read(&amp;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1aa97a1f88ff58ed6fd6d9633499110965" kindref="member">cssDataInMsg</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a4c4eb48695f4379aa9ad72399d5c2d5f" kindref="member">priorTime</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>(callTime<sp/>-<sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a4c4eb48695f4379aa9ad72399d5c2d5f" kindref="member">priorTime</ref>)<sp/>*<sp/>NANO2SEC;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a4c4eb48695f4379aa9ad72399d5c2d5f" kindref="member">priorTime</ref><sp/>=<sp/>callTime;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-<sp/>Zero<sp/>the<sp/>observed<sp/>active<sp/>CSS<sp/>count*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af4edd8d999230f3c1e3a3a505d4521f2" kindref="member">numActiveCss</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint32_t<sp/>i=0;<sp/>i&lt;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af15454b36c9ba51d642e029dadab426d" kindref="member">cssConfigInBuffer</ref>.nCSS;<sp/>i<sp/>=<sp/>i+1)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(InputBuffer.CosValue[i]<sp/>&gt;<sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1ae2400bc4de417a8aa7cb9132ba775b61" kindref="member">sensorUseThresh</ref>)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Scale(configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af15454b36c9ba51d642e029dadab426d" kindref="member">cssConfigInBuffer</ref>.cssVals[i].CBias,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af15454b36c9ba51d642e029dadab426d" kindref="member">cssConfigInBuffer</ref>.cssVals[i].nHat_B,<sp/>&amp;H[configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af4edd8d999230f3c1e3a3a505d4521f2" kindref="member">numActiveCss</ref>*3]);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af4edd8d999230f3c1e3a3a505d4521f2" kindref="member">numActiveCss</ref>]<sp/>=<sp/>InputBuffer.CosValue[i];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af4edd8d999230f3c1e3a3a505d4521f2" kindref="member">numActiveCss</ref><sp/>=<sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af4edd8d999230f3c1e3a3a505d4521f2" kindref="member">numActiveCss</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a2337ad70efe713dfb623ee4deac2f700" kindref="member">filtStatus</ref><sp/>=<sp/>SunlineFilterMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af4edd8d999230f3c1e3a3a505d4521f2" kindref="member">numActiveCss</ref><sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3SetZero(sunlineOutBuffer.vehSunPntBdy);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>the<sp/>sun<sp/>heading<sp/>to<sp/>indicate<sp/>now<sp/>CSS<sp/>info<sp/>is<sp/>available<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3SetZero(sunlineOutBuffer.omega_BN_B);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>the<sp/>rate<sp/>measure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1abc39ae1c9f9e18d892c4a048c54790d1" kindref="member">priorSignalAvailable</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>the<sp/>prior<sp/>heading<sp/>estimate<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeWlsResiduals(InputBuffer.CosValue,<sp/>&amp;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af15454b36c9ba51d642e029dadab426d" kindref="member">cssConfigInBuffer</ref>,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunlineOutBuffer.vehSunPntBdy,<sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a2337ad70efe713dfb623ee4deac2f700" kindref="member">filtStatus</ref>.postFitRes);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1ac191c60b4a98f6b027f9e9e20c0c474b" kindref="member">useWeights</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDiag(y,<sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af4edd8d999230f3c1e3a3a505d4521f2" kindref="member">numActiveCss</ref>,<sp/>W);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSetIdentity(W,<sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af4edd8d999230f3c1e3a3a505d4521f2" kindref="member">numActiveCss</ref>,<sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af4edd8d999230f3c1e3a3a505d4521f2" kindref="member">numActiveCss</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>computeWlsmn((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af4edd8d999230f3c1e3a3a505d4521f2" kindref="member">numActiveCss</ref>,<sp/>H,<sp/>W,<sp/>y,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunlineOutBuffer.vehSunPntBdy);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeWlsResiduals(InputBuffer.CosValue,<sp/>&amp;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af15454b36c9ba51d642e029dadab426d" kindref="member">cssConfigInBuffer</ref>,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunlineOutBuffer.vehSunPntBdy,<sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a2337ad70efe713dfb623ee4deac2f700" kindref="member">filtStatus</ref>.postFitRes);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Normalize(sunlineOutBuffer.vehSunPntBdy,<sp/>sunlineOutBuffer.vehSunPntBdy);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1abc39ae1c9f9e18d892c4a048c54790d1" kindref="member">priorSignalAvailable</ref><sp/>&amp;&amp;<sp/>dt<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Normalize(sunlineOutBuffer.vehSunPntBdy,<sp/>dHatNew);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Normalize(configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a8a992b35146ccdc6734c567260faf1c1" kindref="member">dOld</ref>,<sp/>dHatOld);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Cross(dHatNew,<sp/>dHatOld,<sp/>sunlineOutBuffer.omega_BN_B);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Normalize(sunlineOutBuffer.omega_BN_B,sunlineOutBuffer.omega_BN_B);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>principal<sp/>rotation<sp/>angle<sp/>between<sp/>sun<sp/>heading<sp/>measurements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dOldDotNew<sp/>=<sp/>v3Dot(dHatNew,dHatOld);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dOldDotNew<sp/>&gt;<sp/>1.0)<sp/>dOldDotNew<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dOldDotNew<sp/>&lt;<sp/>-1.0)<sp/>dOldDotNew<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Scale(safeAcos(dOldDotNew)/dt,<sp/>sunlineOutBuffer.omega_BN_B,<sp/>sunlineOutBuffer.omega_BN_B);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1abc39ae1c9f9e18d892c4a048c54790d1" kindref="member">priorSignalAvailable</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(sunlineOutBuffer.vehSunPntBdy,<sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a8a992b35146ccdc6734c567260faf1c1" kindref="member">dOld</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SunlineFilterMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a338f3e96cc7dfce9ce2336acfd537e62" kindref="member">cssWLSFiltResOutMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a2337ad70efe713dfb623ee4deac2f700" kindref="member">filtStatus</ref>.numObs<sp/>=<sp/>(int)<sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1af4edd8d999230f3c1e3a3a505d4521f2" kindref="member">numActiveCss</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a2337ad70efe713dfb623ee4deac2f700" kindref="member">filtStatus</ref>.timeTag<sp/>=<sp/>(double)<sp/>(callTime*NANO2SEC);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(sunlineOutBuffer.vehSunPntBdy,<sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a2337ad70efe713dfb623ee4deac2f700" kindref="member">filtStatus</ref>.state);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SunlineFilterMsg_C_write(&amp;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a2337ad70efe713dfb623ee4deac2f700" kindref="member">filtStatus</ref>,<sp/>&amp;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1a338f3e96cc7dfce9ce2336acfd537e62" kindref="member">cssWLSFiltResOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status<sp/>&gt;<sp/>0)<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>An<sp/>error<sp/>was<sp/>detected<sp/>while<sp/>attempting<sp/>to<sp/>compute<sp/>the<sp/>sunline<sp/>direction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3SetZero(sunlineOutBuffer.vehSunPntBdy);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>the<sp/>sun<sp/>heading<sp/>to<sp/>indicate<sp/>anomaly<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3SetZero(sunlineOutBuffer.omega_BN_B);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>the<sp/>rate<sp/>measure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1abc39ae1c9f9e18d892c4a048c54790d1" kindref="member">priorSignalAvailable</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>the<sp/>prior<sp/>heading<sp/>estimate<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>NavAttMsg_C_write(&amp;sunlineOutBuffer,<sp/>&amp;configData-&gt;<ref refid="struct_c_s_s_w_l_s_config_1abae47f4995543c48dbef2809d5ce8f1e" kindref="member">navStateOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/CSSEst/cssWlsEst.c"/>
  </compounddef>
</doxygen>
