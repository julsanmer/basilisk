<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="simple_instrument_controller_8c" kind="file" language="C++">
    <compoundname>simpleInstrumentController.c</compoundname>
    <includes refid="simple_instrument_controller_8h" local="yes">fswAlgorithms/sensorInterfaces/simpleInstrumentController/simpleInstrumentController.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/sensorInterfaces/simpleInstrumentController/simpleInstrumentController.c</label>
        <link refid="simple_instrument_controller_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fswAlgorithms/sensorInterfaces/simpleInstrumentController/simpleInstrumentController.h</label>
        <link refid="simple_instrument_controller_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="9">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="5">
        <label>cMsgCInterface/AccessMsg_C.h</label>
      </node>
      <node id="6">
        <label>cMsgCInterface/AttGuidMsg_C.h</label>
      </node>
      <node id="7">
        <label>cMsgCInterface/DeviceCmdMsg_C.h</label>
      </node>
      <node id="8">
        <label>cMsgCInterface/DeviceStatusMsg_C.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="simple_instrument_controller_8c_1af5223e585574c713ef180679dfacf89d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_simpleInstrumentController</definition>
        <argsstring>(simpleInstrumentControllerConfig *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_simpleInstrumentController</name>
        <param>
          <type><ref refid="structsimple_instrument_controller_config" kindref="compound">simpleInstrumentControllerConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initializes the output messages for this module. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with this module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/sensorInterfaces/simpleInstrumentController/simpleInstrumentController.c" line="36" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/sensorInterfaces/simpleInstrumentController/simpleInstrumentController.c" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="simple_instrument_controller_8c_1a6e9a2c672bd048c7f40be5a7abe5999d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_simpleInstrumentController</definition>
        <argsstring>(simpleInstrumentControllerConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_simpleInstrumentController</name>
        <param>
          <type><ref refid="structsimple_instrument_controller_config" kindref="compound">simpleInstrumentControllerConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs a complete reset of the module. Local module variables that retain time varying states between function calls are reset to their default values. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>[ns] time the method is called </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/sensorInterfaces/simpleInstrumentController/simpleInstrumentController.c" line="50" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/sensorInterfaces/simpleInstrumentController/simpleInstrumentController.c" bodystart="50" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="simple_instrument_controller_8c_1af57d82842606a0c560272e7a8878cb91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_simpleInstrumentController</definition>
        <argsstring>(simpleInstrumentControllerConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_simpleInstrumentController</name>
        <param>
          <type><ref refid="structsimple_instrument_controller_config" kindref="compound">simpleInstrumentControllerConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a description of what this main Update() routine does for this module <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Norm of sigma_BR</para>
<para>&lt; Norm of omega_BR</para>
<para>&lt; local copy of input message buffer</para>
<para>&lt; local copy of output message buffer</para>
<para>&lt; local copy of input message buffer</para>
<para>&lt; local copy of output message buffer</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/sensorInterfaces/simpleInstrumentController/simpleInstrumentController.c" line="70" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/sensorInterfaces/simpleInstrumentController/simpleInstrumentController.c" bodystart="70" bodyend="119"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2021,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>simpleInstrumentController<sp/>Module</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fswAlgorithms/sensorInterfaces/simpleInstrumentController/simpleInstrumentController.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_simpleInstrumentController(<ref refid="structsimple_instrument_controller_config" kindref="compound">simpleInstrumentControllerConfig</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsimple_instrument_controller_config_1af94c9b4aec13f1d6fd7bd2c99d56e1d6" kindref="member">imaged</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsimple_instrument_controller_config_1a3d9fc921ae033e2dd40c7629bd8656f7" kindref="member">controllerStatus</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>DeviceCmdMsg_C_init(&amp;configData-&gt;<ref refid="structsimple_instrument_controller_config_1aa3de563af4c3d41e1c45ec11fa28224a" kindref="member">deviceCmdOutMsg</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_simpleInstrumentController(<ref refid="structsimple_instrument_controller_config" kindref="compound">simpleInstrumentControllerConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>required<sp/>message<sp/>has<sp/>not<sp/>been<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AccessMsg_C_isLinked(&amp;configData-&gt;<ref refid="structsimple_instrument_controller_config_1a41582e3381f36593036c05aadda94b46" kindref="member">locationAccessInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="structsimple_instrument_controller_config_1a5ef2e7b1f565375b344a1272ab6c6094" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>simpleInstrumentController.locationAccessInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AttGuidMsg_C_isLinked(&amp;configData-&gt;<ref refid="structsimple_instrument_controller_config_1ab251e2db09c535d61b5c1355f444b355" kindref="member">attGuidInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="structsimple_instrument_controller_config_1a5ef2e7b1f565375b344a1272ab6c6094" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>simpleInstrumentController.attGuidInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>imaged<sp/>variable<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsimple_instrument_controller_config_1af94c9b4aec13f1d6fd7bd2c99d56e1d6" kindref="member">imaged</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_simpleInstrumentController(<ref refid="structsimple_instrument_controller_config" kindref="compound">simpleInstrumentControllerConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma_BR_norm;<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_BR_norm;<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>copies<sp/>of<sp/>the<sp/>msg<sp/>buffers*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>AccessMsgPayload<sp/>accessInMsgBuffer;<sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>AttGuidMsgPayload<sp/>attGuidInMsgBuffer;<sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>DeviceStatusMsgPayload<sp/>deviceStatusInMsgBuffer;<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>DeviceCmdMsgPayload<sp/>deviceCmdOutMsgBuffer;<sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero<sp/>output<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceCmdOutMsgBuffer<sp/>=<sp/>DeviceCmdMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>in<sp/>the<sp/>input<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>accessInMsgBuffer<sp/>=<sp/>AccessMsg_C_read(&amp;configData-&gt;<ref refid="structsimple_instrument_controller_config_1a41582e3381f36593036c05aadda94b46" kindref="member">locationAccessInMsg</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>attGuidInMsgBuffer<sp/>=<sp/>AttGuidMsg_C_read(&amp;configData-&gt;<ref refid="structsimple_instrument_controller_config_1ab251e2db09c535d61b5c1355f444b355" kindref="member">attGuidInMsg</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>in<sp/>the<sp/>device<sp/>cmd<sp/>message<sp/>if<sp/>it<sp/>is<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DeviceStatusMsg_C_isLinked(&amp;configData-&gt;<ref refid="structsimple_instrument_controller_config_1a7b3230f39b4c49edee3f49007a1ba2af" kindref="member">deviceStatusInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceStatusInMsgBuffer<sp/>=<sp/>DeviceStatusMsg_C_read(&amp;configData-&gt;<ref refid="structsimple_instrument_controller_config_1a7b3230f39b4c49edee3f49007a1ba2af" kindref="member">deviceStatusInMsg</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsimple_instrument_controller_config_1a3d9fc921ae033e2dd40c7629bd8656f7" kindref="member">controllerStatus</ref><sp/>=<sp/>deviceStatusInMsgBuffer.deviceStatus;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>norms<sp/>of<sp/>the<sp/>attitude<sp/>and<sp/>rate<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>sigma_BR_norm<sp/>=<sp/>v3Norm(attGuidInMsgBuffer.sigma_BR);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>omega_BR_norm<sp/>=<sp/>v3Norm(attGuidInMsgBuffer.omega_BR_B);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>controller<sp/>is<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="structsimple_instrument_controller_config_1a3d9fc921ae033e2dd40c7629bd8656f7" kindref="member">controllerStatus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>target<sp/>has<sp/>not<sp/>been<sp/>imaged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!configData-&gt;<ref refid="structsimple_instrument_controller_config_1af94c9b4aec13f1d6fd7bd2c99d56e1d6" kindref="member">imaged</ref>)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>attitude<sp/>error<sp/>is<sp/>less<sp/>than<sp/>the<sp/>tolerance,<sp/>the<sp/>groundLocation<sp/>is<sp/>accessible,<sp/>and<sp/>(if<sp/>enabled)<sp/>the<sp/>rate</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>is<sp/>less<sp/>than<sp/>the<sp/>tolerance,<sp/>turn<sp/>on<sp/>the<sp/>instrument<sp/>and<sp/>set<sp/>the<sp/>imaged<sp/>indicator<sp/>to<sp/>1*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sigma_BR_norm<sp/>&lt;=<sp/>configData-&gt;attErrTolerance)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(!configData-&gt;<ref refid="structsimple_instrument_controller_config_1a94c10f32a197c3f3ba89a1c3fc1b6bad" kindref="member">useRateTolerance</ref><sp/>||<sp/>(omega_BR_norm<sp/>&lt;=<sp/>configData-&gt;rateErrTolerance))<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>rate<sp/>tolerance<sp/>if<sp/>useRateTolerance<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(accessInMsgBuffer.hasAccess))</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceCmdOutMsgBuffer.deviceCmd<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsimple_instrument_controller_config_1af94c9b4aec13f1d6fd7bd2c99d56e1d6" kindref="member">imaged</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>turn<sp/>off<sp/>the<sp/>instrument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>to<sp/>the<sp/>output<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>DeviceCmdMsg_C_write(&amp;deviceCmdOutMsgBuffer,<sp/>&amp;(configData-&gt;<ref refid="structsimple_instrument_controller_config_1aa3de563af4c3d41e1c45ec11fa28224a" kindref="member">deviceCmdOutMsg</ref>),<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/sensorInterfaces/simpleInstrumentController/simpleInstrumentController.c"/>
  </compounddef>
</doxygen>
