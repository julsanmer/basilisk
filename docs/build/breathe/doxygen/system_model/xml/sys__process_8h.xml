<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="sys__process_8h" kind="file" language="C++">
    <compoundname>sys_process.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="sys__model__task_8h" local="yes">architecture/system_model/sys_model_task.h</includes>
    <includes local="yes">architecture/utilities/bskLogging.h</includes>
    <includedby refid="sim__model_8h" local="yes">/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h</includedby>
    <includedby refid="sys__process_8cpp" local="yes">/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>architecture/system_model/sys_model_task.h</label>
        <link refid="sys__model__task_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h</label>
        <link refid="sys__process_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="6">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h</label>
        <link refid="sim__model_8h_source"/>
      </node>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h</label>
        <link refid="sys__process_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_model_schedule_entry" prot="public">ModelScheduleEntry</innerclass>
    <innerclass refid="class_sys_process" prot="public">SysProcess</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SysProcess_HH_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SysProcess_HH_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/system_model/sys_model_task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/bskLogging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="struct_model_schedule_entry" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30" refid="struct_model_schedule_entry_1ad867d56284143855c9957a7f263e1539" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="struct_model_schedule_entry_1ad867d56284143855c9957a7f263e1539" kindref="member">NextTaskStart</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="31" refid="struct_model_schedule_entry_1acfcd3518a29193f31a679a1a1c63091c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="struct_model_schedule_entry_1acfcd3518a29193f31a679a1a1c63091c" kindref="member">TaskUpdatePeriod</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="32" refid="struct_model_schedule_entry_1a909c2ed882933dff856e4fcbcc268a8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_model_schedule_entry_1a909c2ed882933dff856e4fcbcc268a8b" kindref="member">taskPriority</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="33" refid="struct_model_schedule_entry_1ae023e2e9970130a6d9a0191d901d512a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sys_model_task" kindref="compound">SysModelTask</ref><sp/>*<ref refid="struct_model_schedule_entry_1ae023e2e9970130a6d9a0191d901d512a" kindref="member">TaskPtr</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<ref refid="struct_model_schedule_entry" kindref="compound">ModelScheduleEntry</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_sys_process" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sys_process" kindref="compound">SysProcess</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sys_process_1aab3f08e283db63370898a7de0b003c2a" kindref="member">SysProcess</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sys_process_1aab3f08e283db63370898a7de0b003c2a" kindref="member">SysProcess</ref>(std::string<sp/>messageContainer);<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sys_process_1a852cb3f1831c1b7a7abda9322f9ee55d" kindref="member">~SysProcess</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1aa08b48c5f3ab8b8f99257e164edffe5e" kindref="member">addNewTask</ref>(<ref refid="class_sys_model_task" kindref="compound">SysModelTask</ref><sp/>*newTask,<sp/>int32_t<sp/>taskPriority<sp/>=<sp/>-1);<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1a81a83c16fe51bb6289f510512f8d46e8" kindref="member">selfInitProcess</ref>();<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1a0aa7a5effa963db074a43221bb485227" kindref="member">resetProcess</ref>(uint64_t<sp/>currentTime);<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1ac0b7700ed83f3a8c87584ac4e8aa9a7e" kindref="member">reInitProcess</ref>();<sp/></highlight></codeline>
<codeline lineno="48" refid="class_sys_process_1aea9aa958d5a36bef161dc438d63b3a13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1aea9aa958d5a36bef161dc438d63b3a13" kindref="member">enableProcess</ref>()<sp/>{this-&gt;<ref refid="class_sys_process_1ab1c7c2dc2a046937a2588632b5488797" kindref="member">processActive</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}<sp/></highlight></codeline>
<codeline lineno="49" refid="class_sys_process_1a9ad4d1733f0d5f1eef7ac8533adb67c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1a9ad4d1733f0d5f1eef7ac8533adb67c4" kindref="member">disableProcess</ref>()<sp/>{this-&gt;<ref refid="class_sys_process_1ab1c7c2dc2a046937a2588632b5488797" kindref="member">processActive</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1aca49b161b978a035499205c7c7f5def2" kindref="member">scheduleTask</ref>(<ref refid="struct_model_schedule_entry" kindref="compound">ModelScheduleEntry</ref><sp/>&amp;<sp/>taskCall);<sp/></highlight></codeline>
<codeline lineno="51" refid="class_sys_process_1a051b0e9b3fd0ed22086fa0de5a7b19b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1a051b0e9b3fd0ed22086fa0de5a7b19b3" kindref="member">setProcessName</ref>(std::string<sp/>newName){this-&gt;<ref refid="class_sys_process_1ad8559b43f19138974c38064710cc0f15" kindref="member">processName</ref><sp/>=<sp/>newName;}<sp/></highlight></codeline>
<codeline lineno="52" refid="class_sys_process_1a8b276080f03f39d09d56c61ce725067f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_sys_process_1a8b276080f03f39d09d56c61ce725067f" kindref="member">getProcessName</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="class_sys_process_1ad8559b43f19138974c38064710cc0f15" kindref="member">processName</ref>);}<sp/></highlight></codeline>
<codeline lineno="53" refid="class_sys_process_1a953bb464d3adfec018adfc08d8bf9504" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="class_sys_process_1a953bb464d3adfec018adfc08d8bf9504" kindref="member">getNextTime</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(this-&gt;<ref refid="class_sys_process_1a80256006e4a051a416b57ee0a5c59304" kindref="member">nextTaskTime</ref>);}<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1aefa433273e78326a62d24b6c76d7f1f2" kindref="member">singleStepNextTask</ref>(uint64_t<sp/>currentNanos);<sp/></highlight></codeline>
<codeline lineno="55" refid="class_sys_process_1a470863013890fa8ec35ab91ecd64cf58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1a470863013890fa8ec35ab91ecd64cf58" kindref="member">processEnabled</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_sys_process_1ab1c7c2dc2a046937a2588632b5488797" kindref="member">processActive</ref>;}<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1ae92ff788c25018681ebd3d31bc8e23ba" kindref="member">changeTaskPeriod</ref>(std::string<sp/>taskName,<sp/>uint64_t<sp/>newPeriod);<sp/></highlight></codeline>
<codeline lineno="57" refid="class_sys_process_1a49aa74400310ff454172f83b80b4c6f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1a49aa74400310ff454172f83b80b4c6f7" kindref="member">setPriority</ref>(int64_t<sp/>newPriority)<sp/>{this-&gt;<ref refid="class_sys_process_1a74174ceb262e4e77a76fdec964f6a465" kindref="member">processPriority</ref><sp/>=<sp/>newPriority;}<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1afeb4dcbd373d10a0b91ce2c21fbf4d0d" kindref="member">disableAllTasks</ref>();<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1a010e9ee28c348dc26e5a6ecfc64efad3" kindref="member">enableAllTasks</ref>();<sp/></highlight></codeline>
<codeline lineno="60" refid="class_sys_process_1a0b13e02fce1c93b461be8f0fab36ad9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1a0b13e02fce1c93b461be8f0fab36ad9d" kindref="member">getProcessControlStatus</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_sys_process_1aa98db6ac51eb59db12bffc667cbefbdd" kindref="member">processOnThread</ref>;}<sp/></highlight></codeline>
<codeline lineno="61" refid="class_sys_process_1a96c798436b6cf71bac56c2f821087878" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1a96c798436b6cf71bac56c2f821087878" kindref="member">setProcessControlStatus</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>processTaken)<sp/>{<ref refid="class_sys_process_1aa98db6ac51eb59db12bffc667cbefbdd" kindref="member">processOnThread</ref><sp/>=<sp/>processTaken;}<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64" refid="class_sys_process_1afd0380bd84af65899e85ed7ab8ebb64d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ModelScheduleEntry&gt;<sp/><ref refid="class_sys_process_1afd0380bd84af65899e85ed7ab8ebb64d" kindref="member">processTasks</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="class_sys_process_1a80256006e4a051a416b57ee0a5c59304" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="class_sys_process_1a80256006e4a051a416b57ee0a5c59304" kindref="member">nextTaskTime</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="class_sys_process_1a0b3aa0f5656a2da2a121d7dca25d0541" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="class_sys_process_1a0b3aa0f5656a2da2a121d7dca25d0541" kindref="member">prevRouteTime</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="class_sys_process_1ad8559b43f19138974c38064710cc0f15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_sys_process_1ad8559b43f19138974c38064710cc0f15" kindref="member">processName</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="class_sys_process_1ab1c7c2dc2a046937a2588632b5488797" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1ab1c7c2dc2a046937a2588632b5488797" kindref="member">processActive</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="class_sys_process_1aa98db6ac51eb59db12bffc667cbefbdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sys_process_1aa98db6ac51eb59db12bffc667cbefbdd" kindref="member">processOnThread</ref>;<sp/></highlight></codeline>
<codeline lineno="70" refid="class_sys_process_1a74174ceb262e4e77a76fdec964f6a465" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="class_sys_process_1a74174ceb262e4e77a76fdec964f6a465" kindref="member">processPriority</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="class_sys_process_1a637eaa18695b0ca1150cee76eb1f759a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BSKLogger<sp/><ref refid="class_sys_process_1a637eaa18695b0ca1150cee76eb1f759a" kindref="member">bskLogger</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_SysProcess_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sys_process.h"/>
  </compounddef>
</doxygen>
