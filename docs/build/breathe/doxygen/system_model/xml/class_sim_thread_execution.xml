<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_sim_thread_execution" kind="class" language="C++" prot="public">
    <compoundname>SimThreadExecution</compoundname>
    <includes refid="sim__model_8h" local="no">sim_model.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_sim_thread_execution_1a1b34399826b6adfe35ba8455c295b693" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t SimThreadExecution::currentThreadNanos</definition>
        <argsstring></argsstring>
        <name>currentThreadNanos</name>
        <qualifiedname>SimThreadExecution::currentThreadNanos</qualifiedname>
        <briefdescription>
<para>Current simulation time available at thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="61" column="14" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1af9cc6342ad99dd16580b6ae84715d300" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t SimThreadExecution::stopThreadNanos</definition>
        <argsstring></argsstring>
        <name>stopThreadNanos</name>
        <qualifiedname>SimThreadExecution::stopThreadNanos</qualifiedname>
        <briefdescription>
<para>Current stop conditions for the thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="62" column="14" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1a8f7271e229e8f16d8840231137b1964a" prot="public" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t SimThreadExecution::stopThreadPriority</definition>
        <argsstring></argsstring>
        <name>stopThreadPriority</name>
        <qualifiedname>SimThreadExecution::stopThreadPriority</qualifiedname>
        <briefdescription>
<para>Current stop priority for thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="63" column="13" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1a3a56138fc7e0df51cdf62f9b8aa407fd" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t SimThreadExecution::threadID</definition>
        <argsstring></argsstring>
        <name>threadID</name>
        <qualifiedname>SimThreadExecution::threadID</qualifiedname>
        <briefdescription>
<para>Identifier for thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="64" column="14" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1a6e8642516dc592c80917fc730204327e" prot="public" static="no" mutable="no">
        <type>std::thread *</type>
        <definition>std::thread* SimThreadExecution::threadContext</definition>
        <argsstring></argsstring>
        <name>threadContext</name>
        <qualifiedname>SimThreadExecution::threadContext</qualifiedname>
        <briefdescription>
<para>std::thread data for concurrent execution </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="65" column="17" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1aab96b5f499ad6e30a12e8b0af1f4a690" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t SimThreadExecution::CurrentNanos</definition>
        <argsstring></argsstring>
        <name>CurrentNanos</name>
        <qualifiedname>SimThreadExecution::CurrentNanos</qualifiedname>
        <briefdescription>
<para>[ns] Current sim time </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="66" column="14" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1aa2431425f698a55249673e02dcd4c805" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t SimThreadExecution::NextTaskTime</definition>
        <argsstring></argsstring>
        <name>NextTaskTime</name>
        <qualifiedname>SimThreadExecution::NextTaskTime</qualifiedname>
        <briefdescription>
<para>[ns] time for the next Task </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="67" column="14" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1ab5a87bc91b39ed07eb855b760bca2df1" prot="public" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t SimThreadExecution::nextProcPriority</definition>
        <argsstring></argsstring>
        <name>nextProcPriority</name>
        <qualifiedname>SimThreadExecution::nextProcPriority</qualifiedname>
        <briefdescription>
<para>[-] Priority level for the next process </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="68" column="13" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1a169db192ab9b7e54076ad2a304ea80e9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SimThreadExecution::selfInitNow</definition>
        <argsstring></argsstring>
        <name>selfInitNow</name>
        <qualifiedname>SimThreadExecution::selfInitNow</qualifiedname>
        <briefdescription>
<para>Flag requesting self init. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="69" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1a8dd24f0258370dea1238854129ca6574" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SimThreadExecution::crossInitNow</definition>
        <argsstring></argsstring>
        <name>crossInitNow</name>
        <qualifiedname>SimThreadExecution::crossInitNow</qualifiedname>
        <briefdescription>
<para>Flag requesting cross-init. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="70" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1a385c3bf1681dbc863b3b401237d0c6e5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SimThreadExecution::resetNow</definition>
        <argsstring></argsstring>
        <name>resetNow</name>
        <qualifiedname>SimThreadExecution::resetNow</qualifiedname>
        <briefdescription>
<para>Flag requesting that the thread execute reset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="71" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="71" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_sim_thread_execution_1a40d95a53c47a514226f7536ad11f14c8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SimThreadExecution::threadRunning</definition>
        <argsstring></argsstring>
        <name>threadRunning</name>
        <qualifiedname>SimThreadExecution::threadRunning</qualifiedname>
        <briefdescription>
<para>Flag that will allow for easy concurrent locking. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="73" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1a880f7d0002f483faefdd1ee91a77d2f8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SimThreadExecution::terminateThread</definition>
        <argsstring></argsstring>
        <name>terminateThread</name>
        <qualifiedname>SimThreadExecution::terminateThread</qualifiedname>
        <briefdescription>
<para>Flag that indicates that it is time to take thread down. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="74" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1aaf9f88693d86054ad60e461b59842ab9" prot="private" static="no" mutable="no">
        <type>BSKSemaphore</type>
        <definition>BSKSemaphore SimThreadExecution::parentThreadLock</definition>
        <argsstring></argsstring>
        <name>parentThreadLock</name>
        <qualifiedname>SimThreadExecution::parentThreadLock</qualifiedname>
        <briefdescription>
<para>Lock that ensures parent thread won&apos;t proceed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="75" column="18" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1a3ccdebbc7e3d9adfd265c40ff9a11560" prot="private" static="no" mutable="no">
        <type>BSKSemaphore</type>
        <definition>BSKSemaphore SimThreadExecution::selfThreadLock</definition>
        <argsstring></argsstring>
        <name>selfThreadLock</name>
        <qualifiedname>SimThreadExecution::selfThreadLock</qualifiedname>
        <briefdescription>
<para>Lock that ensures this thread only reaches allowed time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="76" column="18" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1a55315681672438579f2dc04ad27ef20d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_sys_process" kindref="compound">SysProcess</ref> * &gt;</type>
        <definition>std::vector&lt;SysProcess*&gt; SimThreadExecution::processList</definition>
        <argsstring></argsstring>
        <name>processList</name>
        <qualifiedname>SimThreadExecution::processList</qualifiedname>
        <briefdescription>
<para>List of processes associated with thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="77" column="17" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1a757d1ce0d7341c32d1244badefd30acb" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex SimThreadExecution::initReadyLock</definition>
        <argsstring></argsstring>
        <name>initReadyLock</name>
        <qualifiedname>SimThreadExecution::initReadyLock</qualifiedname>
        <briefdescription>
<para>Lock function to ensure runtime locks are configured. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="78" column="16" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sim_thread_execution_1ac9d126e756dd900f52907ca7a958e02c" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable SimThreadExecution::initHoldVar</definition>
        <argsstring></argsstring>
        <name>initHoldVar</name>
        <qualifiedname>SimThreadExecution::initHoldVar</qualifiedname>
        <briefdescription>
<para>Conditional variable used to prevent race conditions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="79" column="29" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="79" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sim_thread_execution_1a1ca20122a4c57ffc3a6ded0c14945041" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SimThreadExecution::SimThreadExecution</definition>
        <argsstring>()</argsstring>
        <name>SimThreadExecution</name>
        <qualifiedname>SimThreadExecution::SimThreadExecution</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="37" column="5" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="68" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1aec803441c32dcbac20a9de9121f3d629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SimThreadExecution::SimThreadExecution</definition>
        <argsstring>(uint64_t threadIdent, uint64_t currentSimNanos=0)</argsstring>
        <name>SimThreadExecution</name>
        <qualifiedname>SimThreadExecution::SimThreadExecution</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>threadIdent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>currentSimNanos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor for a given sim thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="38" column="5" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="58" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1ae0de01a00621e4a5b5ec5e90785ed171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SimThreadExecution::~SimThreadExecution</definition>
        <argsstring>()</argsstring>
        <name>~SimThreadExecution</name>
        <qualifiedname>SimThreadExecution::~SimThreadExecution</qualifiedname>
        <briefdescription>
<para>Destructor for given sim thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="39" column="5" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1ac1f6d49823e06607ef90bdd2e51c80c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::updateNewStopTime</definition>
        <argsstring>(uint64_t newStopNanos)</argsstring>
        <name>updateNewStopTime</name>
        <qualifiedname>SimThreadExecution::updateNewStopTime</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>newStopNanos</declname>
        </param>
        <briefdescription>
<para>Method to update a new simulation stop time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="40" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1a437b10e6cacdb05f105c7d7f51c69650" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::clearProcessList</definition>
        <argsstring>()</argsstring>
        <name>clearProcessList</name>
        <qualifiedname>SimThreadExecution::clearProcessList</qualifiedname>
        <briefdescription>
<para>clear the process list </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="41" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="41" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1af1423c1ddab7e191fe9469d1edaef793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::selfInitProcesses</definition>
        <argsstring>()</argsstring>
        <name>selfInitProcesses</name>
        <qualifiedname>SimThreadExecution::selfInitProcesses</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is used by the &quot;child&quot; thread to walk through all of its tasks and processes and initialize them serially. Note that other threads can also be initializing their systems simultaneously. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="42" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="224" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1a142dc427f98a58888407bf2b1abc1868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::crossInitProcesses</definition>
        <argsstring>()</argsstring>
        <name>crossInitProcesses</name>
        <qualifiedname>SimThreadExecution::crossInitProcesses</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is vestigial and should probably be removed once MT message movement has been completed. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="43" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="236" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1a3984b22554c81447b49db7abc2f152e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::resetProcesses</definition>
        <argsstring>()</argsstring>
        <name>resetProcesses</name>
        <qualifiedname>SimThreadExecution::resetProcesses</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method allows the &quot;child&quot; thread to reset both its timing/scheduling, as well as all of its allocated tasks/modules when commanded. This is always called during init, but can be called during runtime as well. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="44" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="249" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1a6db496d5d6acf2f1e7b9aacd82fd93de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::addNewProcess</definition>
        <argsstring>(SysProcess *newProc)</argsstring>
        <name>addNewProcess</name>
        <qualifiedname>SimThreadExecution::addNewProcess</qualifiedname>
        <param>
          <type><ref refid="class_sys_process" kindref="compound">SysProcess</ref> *</type>
          <declname>newProc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method pops a new process onto the execution stack for the &quot;child&quot; thread. It allows the user to put specific processes onto specific threads if that is desired. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="45" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1a86b8992d251ced2cefbaeff7b20c10c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t SimThreadExecution::procCount</definition>
        <argsstring>()</argsstring>
        <name>procCount</name>
        <qualifiedname>SimThreadExecution::procCount</qualifiedname>
        <briefdescription>
<para>Gets the current &quot;thread-count&quot; in the system. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="46" column="14" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1ab24a2c1581aa1851bd2abbf3ae071129" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SimThreadExecution::threadActive</definition>
        <argsstring>()</argsstring>
        <name>threadActive</name>
        <qualifiedname>SimThreadExecution::threadActive</qualifiedname>
        <briefdescription>
<para>Tells the caller if the thread is currently allocated processes and is in execution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="47" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="47" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1a24d4fb7186480135066b347ab2a18d19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::threadReady</definition>
        <argsstring>()</argsstring>
        <name>threadReady</name>
        <qualifiedname>SimThreadExecution::threadReady</qualifiedname>
        <briefdescription>
<para>Allows the system to put the thread into a running state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="48" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="48" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1acbb9bbbf0cb9203c1655e3b7aaf6ff17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::waitOnInit</definition>
        <argsstring>()</argsstring>
        <name>waitOnInit</name>
        <qualifiedname>SimThreadExecution::waitOnInit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Once threads are released for execution, this method ensures that they finish their startup before the system starts to go through its initialization activities. It&apos;s very similar to the locking process, but provides different functionality. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="49" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="200" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1a40245432fadd460de18913b6db87bb2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::postInit</definition>
        <argsstring>()</argsstring>
        <name>postInit</name>
        <qualifiedname>SimThreadExecution::postInit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method allows the startup activities to alert the parent thread once they have cleared their construction phase and are ready to go through initialization. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="50" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="213" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1a46b365038a59d03e6549e484c3f098f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SimThreadExecution::threadValid</definition>
        <argsstring>()</argsstring>
        <name>threadValid</name>
        <qualifiedname>SimThreadExecution::threadValid</qualifiedname>
        <briefdescription>
<para>Determines if the thread is currently usable or if it has been requested to shutdown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="51" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1a7825e45a15e5f1e11af4ce252bb5417f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::killThread</definition>
        <argsstring>()</argsstring>
        <name>killThread</name>
        <qualifiedname>SimThreadExecution::killThread</qualifiedname>
        <briefdescription>
<para>Politely asks the thread to no longer be alive. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="52" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="52" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1a7b6b683e14c44451042f528506f0be42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::lockThread</definition>
        <argsstring>()</argsstring>
        <name>lockThread</name>
        <qualifiedname>SimThreadExecution::lockThread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method provides a synchronization mechanism for the &quot;child&quot; thread ensuring that it can be held at a fixed point after it finishes the execution of a given frame until it is released by the &quot;parent&quot; thread. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="53" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1a45a709d8bde76c6be42a807988160418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::unlockThread</definition>
        <argsstring>()</argsstring>
        <name>unlockThread</name>
        <qualifiedname>SimThreadExecution::unlockThread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method provides an entry point for the &quot;parent&quot; thread to release the child thread for a single frame&apos;s execution. It is intended to only be called from the parent thread. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="54" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1a14670530672acc6509b11d538d2f1e8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::lockParent</definition>
        <argsstring>()</argsstring>
        <name>lockParent</name>
        <qualifiedname>SimThreadExecution::lockParent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method provides a forced synchronization on the &quot;parent&quot; thread so that the parent and all other threads in the system can be forced to wait at a known time until this thread has finished its execution for that time. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="55" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1a5087446d12c59af56c0dcefc52c58c0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::unlockParent</definition>
        <argsstring>()</argsstring>
        <name>unlockParent</name>
        <qualifiedname>SimThreadExecution::unlockParent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method provides an entry point for the &quot;child&quot; thread to unlock the parent thread after it has finished its execution in a frame. That way the parent and all of its other children have to wait for this child to finish its execution. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="56" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1abd78120803f5811d2a166097f0a6fb94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::StepUntilStop</definition>
        <argsstring>()</argsstring>
        <name>StepUntilStop</name>
        <qualifiedname>SimThreadExecution::StepUntilStop</qualifiedname>
        <briefdescription>
<para>Step simulation until stop time uint64_t reached. </para>
        </briefdescription>
        <detaileddescription>
<para>This method steps the simulation until the specified stop time and stop priority have been reached. <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Note that we have to step until both the time is greater and the next Task&apos;s start time is in the future. If the NextTaskTime is less than SimStopTime, then the inPri shouldn&apos;t come into effect, so set it to -1 (that&apos;s less than all process priorities, so it will run through the next process)</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="57" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="164" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1ae726d77b8faf40c0bb7ec5d85187da7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::SingleStepProcesses</definition>
        <argsstring>(int64_t stopPri=-1)</argsstring>
        <name>SingleStepProcesses</name>
        <qualifiedname>SimThreadExecution::SingleStepProcesses</qualifiedname>
        <param>
          <type>int64_t</type>
          <declname>stopPri</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Step only the next Task in the simulation. </para>
        </briefdescription>
        <detaileddescription>
<para>This method steps all of the processes forward to the current time. It also increments the internal simulation time appropriately as the simulation processes are triggered <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stopPri</parametername>
</parameternamelist>
<parameterdescription>
<para>The priority level below which the sim won&apos;t go </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="58" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="127" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_sim_thread_execution_1adca92b0157f86b0623d6c71c38e9a154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SimThreadExecution::moveProcessMessages</definition>
        <argsstring>()</argsstring>
        <name>moveProcessMessages</name>
        <qualifiedname>SimThreadExecution::moveProcessMessages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is currently vestigial and needs to be populated once the message sharing process between different threads is handled. TODO: Make this method move messages safely between threads <simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="59" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.cpp" bodystart="185" bodyend="192"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This class handles the management of a given &quot;thread&quot; of execution and provides the main mechanism for running concurrent jobs inside BSK. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" line="34" column="1" bodyfile="/Users/julio/Desktop/basilisk/src/architecture/system_model/sim_model.h" bodystart="35" bodyend="80"/>
    <listofallmembers>
      <member refid="class_sim_thread_execution_1a6db496d5d6acf2f1e7b9aacd82fd93de" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>addNewProcess</name></member>
      <member refid="class_sim_thread_execution_1a437b10e6cacdb05f105c7d7f51c69650" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>clearProcessList</name></member>
      <member refid="class_sim_thread_execution_1a8dd24f0258370dea1238854129ca6574" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>crossInitNow</name></member>
      <member refid="class_sim_thread_execution_1a142dc427f98a58888407bf2b1abc1868" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>crossInitProcesses</name></member>
      <member refid="class_sim_thread_execution_1aab96b5f499ad6e30a12e8b0af1f4a690" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>CurrentNanos</name></member>
      <member refid="class_sim_thread_execution_1a1b34399826b6adfe35ba8455c295b693" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>currentThreadNanos</name></member>
      <member refid="class_sim_thread_execution_1ac9d126e756dd900f52907ca7a958e02c" prot="private" virt="non-virtual"><scope>SimThreadExecution</scope><name>initHoldVar</name></member>
      <member refid="class_sim_thread_execution_1a757d1ce0d7341c32d1244badefd30acb" prot="private" virt="non-virtual"><scope>SimThreadExecution</scope><name>initReadyLock</name></member>
      <member refid="class_sim_thread_execution_1a7825e45a15e5f1e11af4ce252bb5417f" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>killThread</name></member>
      <member refid="class_sim_thread_execution_1a14670530672acc6509b11d538d2f1e8a" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>lockParent</name></member>
      <member refid="class_sim_thread_execution_1a7b6b683e14c44451042f528506f0be42" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>lockThread</name></member>
      <member refid="class_sim_thread_execution_1adca92b0157f86b0623d6c71c38e9a154" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>moveProcessMessages</name></member>
      <member refid="class_sim_thread_execution_1ab5a87bc91b39ed07eb855b760bca2df1" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>nextProcPriority</name></member>
      <member refid="class_sim_thread_execution_1aa2431425f698a55249673e02dcd4c805" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>NextTaskTime</name></member>
      <member refid="class_sim_thread_execution_1aaf9f88693d86054ad60e461b59842ab9" prot="private" virt="non-virtual"><scope>SimThreadExecution</scope><name>parentThreadLock</name></member>
      <member refid="class_sim_thread_execution_1a40245432fadd460de18913b6db87bb2e" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>postInit</name></member>
      <member refid="class_sim_thread_execution_1a86b8992d251ced2cefbaeff7b20c10c6" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>procCount</name></member>
      <member refid="class_sim_thread_execution_1a55315681672438579f2dc04ad27ef20d" prot="private" virt="non-virtual"><scope>SimThreadExecution</scope><name>processList</name></member>
      <member refid="class_sim_thread_execution_1a385c3bf1681dbc863b3b401237d0c6e5" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>resetNow</name></member>
      <member refid="class_sim_thread_execution_1a3984b22554c81447b49db7abc2f152e7" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>resetProcesses</name></member>
      <member refid="class_sim_thread_execution_1a169db192ab9b7e54076ad2a304ea80e9" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>selfInitNow</name></member>
      <member refid="class_sim_thread_execution_1af1423c1ddab7e191fe9469d1edaef793" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>selfInitProcesses</name></member>
      <member refid="class_sim_thread_execution_1a3ccdebbc7e3d9adfd265c40ff9a11560" prot="private" virt="non-virtual"><scope>SimThreadExecution</scope><name>selfThreadLock</name></member>
      <member refid="class_sim_thread_execution_1a1ca20122a4c57ffc3a6ded0c14945041" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>SimThreadExecution</name></member>
      <member refid="class_sim_thread_execution_1aec803441c32dcbac20a9de9121f3d629" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>SimThreadExecution</name></member>
      <member refid="class_sim_thread_execution_1ae726d77b8faf40c0bb7ec5d85187da7a" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>SingleStepProcesses</name></member>
      <member refid="class_sim_thread_execution_1abd78120803f5811d2a166097f0a6fb94" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>StepUntilStop</name></member>
      <member refid="class_sim_thread_execution_1af9cc6342ad99dd16580b6ae84715d300" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>stopThreadNanos</name></member>
      <member refid="class_sim_thread_execution_1a8f7271e229e8f16d8840231137b1964a" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>stopThreadPriority</name></member>
      <member refid="class_sim_thread_execution_1a880f7d0002f483faefdd1ee91a77d2f8" prot="private" virt="non-virtual"><scope>SimThreadExecution</scope><name>terminateThread</name></member>
      <member refid="class_sim_thread_execution_1ab24a2c1581aa1851bd2abbf3ae071129" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>threadActive</name></member>
      <member refid="class_sim_thread_execution_1a6e8642516dc592c80917fc730204327e" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>threadContext</name></member>
      <member refid="class_sim_thread_execution_1a3a56138fc7e0df51cdf62f9b8aa407fd" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>threadID</name></member>
      <member refid="class_sim_thread_execution_1a24d4fb7186480135066b347ab2a18d19" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>threadReady</name></member>
      <member refid="class_sim_thread_execution_1a40d95a53c47a514226f7536ad11f14c8" prot="private" virt="non-virtual"><scope>SimThreadExecution</scope><name>threadRunning</name></member>
      <member refid="class_sim_thread_execution_1a46b365038a59d03e6549e484c3f098f6" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>threadValid</name></member>
      <member refid="class_sim_thread_execution_1a5087446d12c59af56c0dcefc52c58c0e" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>unlockParent</name></member>
      <member refid="class_sim_thread_execution_1a45a709d8bde76c6be42a807988160418" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>unlockThread</name></member>
      <member refid="class_sim_thread_execution_1ac1f6d49823e06607ef90bdd2e51c80c8" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>updateNewStopTime</name></member>
      <member refid="class_sim_thread_execution_1acbb9bbbf0cb9203c1655e3b7aaf6ff17" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>waitOnInit</name></member>
      <member refid="class_sim_thread_execution_1ae0de01a00621e4a5b5ec5e90785ed171" prot="public" virt="non-virtual"><scope>SimThreadExecution</scope><name>~SimThreadExecution</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
