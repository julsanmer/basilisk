<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="rw_motor_torque_8c" kind="file" language="C++">
    <compoundname>rwMotorTorque.c</compoundname>
    <includes refid="rw_motor_torque_8h" local="yes">fswAlgorithms/effectorInterfaces/rwMotorTorque/rwMotorTorque.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/rwMotorTorque/rwMotorTorque.c</label>
        <link refid="rw_motor_torque_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fswAlgorithms/effectorInterfaces/rwMotorTorque/rwMotorTorque.h</label>
        <link refid="rw_motor_torque_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="11">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="9">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="5">
        <label>cMsgCInterface/ArrayMotorTorqueMsg_C.h</label>
      </node>
      <node id="4">
        <label>cMsgCInterface/CmdTorqueBodyMsg_C.h</label>
      </node>
      <node id="7">
        <label>cMsgCInterface/RWArrayConfigMsg_C.h</label>
      </node>
      <node id="6">
        <label>cMsgCInterface/RWAvailabilityMsg_C.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="rw_motor_torque_8c_1aeae2e566eab51144ab89c9e731b54b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_rwMotorTorque</definition>
        <argsstring>(rwMotorTorqueConfig *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_rwMotorTorque</name>
        <param>
          <type><ref refid="structrw_motor_torque_config" kindref="compound">rwMotorTorqueConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates the module output message. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with this module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/rwMotorTorque/rwMotorTorque.c" line="34" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/rwMotorTorque/rwMotorTorque.c" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="rw_motor_torque_8c_1ae40d769b4ae2637bf93c0422db1a4a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_rwMotorTorque</definition>
        <argsstring>(rwMotorTorqueConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_rwMotorTorque</name>
        <param>
          <type><ref refid="structrw_motor_torque_config" kindref="compound">rwMotorTorqueConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs a complete reset of the module. Local module variables that retain time varying states between function calls are reset to their default values. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>configure the number of axes that are controlled. This is determined by checking for a zero row to determinate search</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Read static RW config data message and store it in module variables</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>If no info is provided about RW availability we&apos;ll assume that all are available and create the [Gs] projection matrix once</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/rwMotorTorque/rwMotorTorque.c" line="47" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/rwMotorTorque/rwMotorTorque.c" bodystart="47" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="rw_motor_torque_8c_1a3d1d2e3f76de6dc0f3da6f713b486107" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_rwMotorTorque</definition>
        <argsstring>(rwMotorTorqueConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_rwMotorTorque</name>
        <param>
          <type><ref refid="structrw_motor_torque_config" kindref="compound">rwMotorTorqueConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a description of what this main Update() routine does for this module <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Msg containing RW availability</para>
<para>&lt; Msg containing Lr control torque</para>
<para>&lt; Msg struct to store the output message</para>
<para>&lt; [Nm] commanded ADCS control torque in body frame</para>
<para>&lt; [Nm] commanded ADCS control torque projected onto control axes</para>
<para>&lt; [Nm] commanded ADCS control torque projected onto RWs g_s-Frames</para>
<para>&lt; [] projection matrix from gs_i onto control axes</para>
<para><itemizedlist>
<listitem><para>zero control torque and RW motor torque variables</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Read the input messages</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Check if RW availability message is available</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Read in current RW availabilit Msg</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>create the current [Gs] projection matrix with the available RWs</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>update the number of currently available RWs</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Lr is assumed to be a positive torque onto the body, the [Gs]us must generate -Lr</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>compute [Lr_C] = [C]Lr</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>compute [CGs]</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute minimum norm inverse for us = [CGs].T inv([CGs][CGs].T) [Lr_C] Having at least the same # of RW as # of control axes is necessary condition to guarantee inverse matrix exists. If matrix to invert it not full rank, the control torque output is zero.</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>compute the desired RW motor torques</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>map the desired RW motor torques to the available RWs</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/rwMotorTorque/rwMotorTorque.c" line="90" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/rwMotorTorque/rwMotorTorque.c" bodystart="90" bodyend="193"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>Mapping<sp/>required<sp/>attitude<sp/>control<sp/>torque<sp/>Lr<sp/>to<sp/>RW<sp/>motor<sp/>torques</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fswAlgorithms/effectorInterfaces/rwMotorTorque/rwMotorTorque.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_rwMotorTorque(<ref refid="structrw_motor_torque_config" kindref="compound">rwMotorTorqueConfig</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayMotorTorqueMsg_C_init(&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1ad17029940efbce245a1292b2e17adf9f" kindref="member">rwMotorTorqueOutMsg</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_rwMotorTorque(<ref refid="structrw_motor_torque_config" kindref="compound">rwMotorTorqueConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pAxis;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>the<sp/>current<sp/>control<sp/>axis<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1a8909391fe945c84897db7884182d3ed2" kindref="member">numControlAxes</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAxis<sp/>=<sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1a061305f5a681ef8cd60b46a2ec65145d" kindref="member">controlAxes_B</ref><sp/>+<sp/>3<sp/>*<sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1a8909391fe945c84897db7884182d3ed2" kindref="member">numControlAxes</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v3Norm(pAxis)<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1a8909391fe945c84897db7884182d3ed2" kindref="member">numControlAxes</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="structrw_motor_torque_config_1a8909391fe945c84897db7884182d3ed2" kindref="member">numControlAxes</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="structrw_motor_torque_config_1a5ad37aae1cff2e3508b0e17ad87a8163" kindref="member">bskLogger</ref>,<sp/>BSK_INFORMATION,</highlight><highlight class="stringliteral">&quot;rwMotorTorque()<sp/>is<sp/>not<sp/>setup<sp/>to<sp/>control<sp/>any<sp/>axes!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>required<sp/>input<sp/>messages<sp/>are<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!RWArrayConfigMsg_C_isLinked(&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1abd1f82da8745cd778abe2251f9211753" kindref="member">rwParamsInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="structrw_motor_torque_config_1a5ad37aae1cff2e3508b0e17ad87a8163" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>rwMotorTorque.rwParamsInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1abcb15b28cd286284822675507e33b198" kindref="member">rwConfigParams</ref><sp/>=<sp/>RWArrayConfigMsg_C_read(&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1abd1f82da8745cd778abe2251f9211753" kindref="member">rwParamsInMsg</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!RWAvailabilityMsg_C_isLinked(&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1a03b45cfe030365e5e2626cfdaf30e4fe" kindref="member">rwAvailInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1a0884282bed5c04d29e0dbaa30ce31897" kindref="member">numAvailRW</ref><sp/>=<sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1abcb15b28cd286284822675507e33b198" kindref="member">rwConfigParams</ref>.numRW;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1abcb15b28cd286284822675507e33b198" kindref="member">rwConfigParams</ref>.numRW;<sp/>i++){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1abcb15b28cd286284822675507e33b198" kindref="member">rwConfigParams</ref>.GsMatrix_B[i<sp/>*<sp/>3],<sp/>&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1a4556ba556c13a7407d20ad905eed237b" kindref="member">GsMatrix_B</ref>[i<sp/>*<sp/>3]);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_rwMotorTorque(<ref refid="structrw_motor_torque_config" kindref="compound">rwMotorTorqueConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>RWAvailabilityMsgPayload<sp/>wheelsAvailability;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>CmdTorqueBodyMsgPayload<sp/>LrInputMsg;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayMotorTorqueMsgPayload<sp/>rwMotorTorques;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Lr_B[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Lr_C[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>us[MAX_EFF_CNT];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CGs[3][MAX_EFF_CNT];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>v3SetZero(Lr_C);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>vSetZero(us,<sp/>MAX_EFF_CNT);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wheelAvailability<sp/>set<sp/>to<sp/>0<sp/>(AVAILABLE)<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>wheelsAvailability<sp/>=<sp/>RWAvailabilityMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>required<sp/>input<sp/>messages<sp/>are<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CmdTorqueBodyMsg_C_isLinked(&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1a5bffee435cc64407aa47d7ec667d92a9" kindref="member">vehControlInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="structrw_motor_torque_config_1a5ad37aae1cff2e3508b0e17ad87a8163" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>rwMotorTorque.vehControlInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>LrInputMsg<sp/>=<sp/>CmdTorqueBodyMsg_C_read(&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1a5bffee435cc64407aa47d7ec667d92a9" kindref="member">vehControlInMsg</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(LrInputMsg.torqueRequestBody,<sp/>Lr_B);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RWAvailabilityMsg_C_isLinked(&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1a03b45cfe030365e5e2626cfdaf30e4fe" kindref="member">rwAvailInMsg</ref>))</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numAvailRW<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelsAvailability<sp/>=<sp/>RWAvailabilityMsg_C_read(&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1a03b45cfe030365e5e2626cfdaf30e4fe" kindref="member">rwAvailInMsg</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1abcb15b28cd286284822675507e33b198" kindref="member">rwConfigParams</ref>.numRW;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wheelsAvailability.wheelAvailability[i]<sp/>==<sp/>AVAILABLE)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1abcb15b28cd286284822675507e33b198" kindref="member">rwConfigParams</ref>.GsMatrix_B[i<sp/>*<sp/>3],<sp/>&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1a4556ba556c13a7407d20ad905eed237b" kindref="member">GsMatrix_B</ref>[numAvailRW<sp/>*<sp/>3]);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numAvailRW<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1a0884282bed5c04d29e0dbaa30ce31897" kindref="member">numAvailRW</ref><sp/>=<sp/>numAvailRW;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(-1.0,<sp/>Lr_B,<sp/>Lr_B);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultV(configData-&gt;<ref refid="structrw_motor_torque_config_1a061305f5a681ef8cd60b46a2ec65145d" kindref="member">controlAxes_B</ref>,<sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1a8909391fe945c84897db7884182d3ed2" kindref="member">numControlAxes</ref>,<sp/>3,<sp/>Lr_B,<sp/>Lr_C);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(CGs,<sp/>3,<sp/>MAX_EFF_CNT);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i=0;<sp/>i&lt;configData-&gt;<ref refid="structrw_motor_torque_config_1a8909391fe945c84897db7884182d3ed2" kindref="member">numControlAxes</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;configData-&gt;<ref refid="structrw_motor_torque_config_1a0884282bed5c04d29e0dbaa30ce31897" kindref="member">numAvailRW</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGs[i][j]<sp/>=<sp/>v3Dot(&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1a4556ba556c13a7407d20ad905eed237b" kindref="member">GsMatrix_B</ref>[j<sp/>*<sp/>3],<sp/>&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1a061305f5a681ef8cd60b46a2ec65145d" kindref="member">controlAxes_B</ref>[3<sp/>*<sp/>i]);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="structrw_motor_torque_config_1a0884282bed5c04d29e0dbaa30ce31897" kindref="member">numAvailRW</ref><sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1a8909391fe945c84897db7884182d3ed2" kindref="member">numControlAxes</ref>){</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v3_temp[3];<sp/></highlight><highlight class="comment">/*<sp/>inv([M])<sp/>[Lr_C]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M33[3][3];<sp/></highlight><highlight class="comment">/*<sp/>[M]<sp/>=<sp/>[CGs][CGs].T<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>us_avail[MAX_EFF_CNT];<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>matrix<sp/>of<sp/>available<sp/>RW<sp/>motor<sp/>torques<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3SetZero(v3_temp);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSetIdentity(M33,<sp/>3,<sp/>3);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i=0;<sp/>i&lt;configData-&gt;<ref refid="structrw_motor_torque_config_1a8909391fe945c84897db7884182d3ed2" kindref="member">numControlAxes</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>j=0;<sp/>j&lt;configData-&gt;<ref refid="structrw_motor_torque_config_1a8909391fe945c84897db7884182d3ed2" kindref="member">numControlAxes</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M33[i][j]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k<sp/>&lt;<sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1a0884282bed5c04d29e0dbaa30ce31897" kindref="member">numAvailRW</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M33[i][j]<sp/>+=<sp/>CGs[i][k]*CGs[j][k];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m33Inverse(M33,<sp/>M33);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m33MultV3(M33,<sp/>Lr_C,<sp/>v3_temp);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>us<sp/>=<sp/>[CGs].T<sp/>v3_temp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSetZero(us_avail,<sp/>MAX_EFF_CNT);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;configData-&gt;<ref refid="structrw_motor_torque_config_1a0884282bed5c04d29e0dbaa30ce31897" kindref="member">numAvailRW</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>j=0;<sp/>j&lt;configData-&gt;<ref refid="structrw_motor_torque_config_1a8909391fe945c84897db7884182d3ed2" kindref="member">numControlAxes</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>us_avail[i]<sp/>+=<sp/>CGs[j][i]<sp/>*<sp/>v3_temp[j];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1abcb15b28cd286284822675507e33b198" kindref="member">rwConfigParams</ref>.numRW;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wheelsAvailability.wheelAvailability[i]<sp/>==<sp/>AVAILABLE)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>us[i]<sp/>=<sp/>us_avail[j];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>the<sp/>output<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>rwMotorTorques<sp/>=<sp/>ArrayMotorTorqueMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>vCopy(us,<sp/>configData-&gt;<ref refid="structrw_motor_torque_config_1abcb15b28cd286284822675507e33b198" kindref="member">rwConfigParams</ref>.numRW,<sp/>rwMotorTorques.motorTorque);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayMotorTorqueMsg_C_write(&amp;rwMotorTorques,<sp/>&amp;configData-&gt;<ref refid="structrw_motor_torque_config_1ad17029940efbce245a1292b2e17adf9f" kindref="member">rwMotorTorqueOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/rwMotorTorque/rwMotorTorque.c"/>
  </compounddef>
</doxygen>
