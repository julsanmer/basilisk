<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="imu_sensor_8cpp" kind="file" language="C++">
    <compoundname>imuSensor.cpp</compoundname>
    <includes refid="imu_sensor_8h" local="yes">simulation/sensors/imuSensor/imuSensor.h</includes>
    <includes local="yes">architecture/utilities/rigidBodyKinematics.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cstring</includes>
    <includes local="no">random</includes>
    <includes local="yes">architecture/utilities/gauss_markov.h</includes>
    <includes local="yes">architecture/utilities/avsEigenSupport.h</includes>
    <includes local="yes">architecture/utilities/avsEigenMRP.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="no">inttypes.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/sensors/imuSensor/imuSensor.cpp</label>
        <link refid="imu_sensor_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>simulation/sensors/imuSensor/imuSensor.h</label>
        <link refid="imu_sensor_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Eigen/Dense</label>
      </node>
      <node id="4">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="11">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="10">
        <label>architecture/msgPayloadDefC/IMUSensorMsgPayload.h</label>
      </node>
      <node id="9">
        <label>architecture/msgPayloadDefC/SCStatesMsgPayload.h</label>
      </node>
      <node id="13">
        <label>architecture/utilities/avsEigenMRP.h</label>
      </node>
      <node id="20">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="14">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="7">
        <label>architecture/utilities/discretize.h</label>
      </node>
      <node id="6">
        <label>architecture/utilities/gauss_markov.h</label>
      </node>
      <node id="16">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="21">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="15">
        <label>architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="8">
        <label>architecture/utilities/saturate.h</label>
      </node>
      <node id="19">
        <label>cstring</label>
      </node>
      <node id="22">
        <label>inttypes.h</label>
      </node>
      <node id="18">
        <label>iostream</label>
      </node>
      <node id="17">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>random</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;simulation/sensors/imuSensor/imuSensor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/gauss_markov.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenSupport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenMRP.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">ImuSensor::ImuSensor()</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;numStates<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1ab5f32803743ca07217c6090f7ac5c939" kindref="member">setBodyToPlatformDCM</ref>(0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a163aee4a8c3631fa2cd5b8b77968451f" kindref="member">OutputBufferCount</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;StatePrevious<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1ac9c5be0a49419b35b4af9b25543ca104" kindref="member">scStateInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;StateCurrent<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1ac9c5be0a49419b35b4af9b25543ca104" kindref="member">scStateInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;errorModelGyro<sp/>=<sp/><sp/>GaussMarkov(this-&gt;numStates,<sp/>this-&gt;RNGSeed);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;errorModelAccel<sp/>=<sp/>GaussMarkov(this-&gt;numStates,<sp/>this-&gt;RNGSeed);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a079ad19d25831b9fc9cb750dd138c243" kindref="member">aDisc</ref><sp/>=<sp/>Discretize((uint8_t)<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a9e6c50c4fb04c556dfac1939d93eddd2" kindref="member">oDisc</ref><sp/>=<sp/>Discretize((uint8_t)<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1ae21daf5927f97d379b79ac1e964b236f" kindref="member">aSat</ref><sp/>=<sp/>Saturate(this-&gt;numStates);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a8186405461fcc9de4e486269fa03b897" kindref="member">oSat</ref><sp/>=<sp/>Saturate(this-&gt;numStates);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;PreviousTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a1f0a73a035c51dd2b01c7db7ac94c3d1" kindref="member">NominalReady</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a487b939a2cd4be64abb8ff4c01f582db" kindref="member">senRotBias</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a562dd8eefd0dcb2a1a47de1e48f32622" kindref="member">senTransBias</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a72cb4df124aa9426ddb5246807607b0c" kindref="member">sensedValues</ref><sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1a0e0e0f6392ab90693928b6cd54eae772" kindref="member">sensorOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1aa230687eb7f3b40ed4b705b14683b3aa" kindref="member">trueValues</ref><sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1a0e0e0f6392ab90693928b6cd54eae772" kindref="member">sensorOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a9cfd803aea067b13a7229cabb6c114af" kindref="member">senRotMax</ref><sp/>=<sp/>1e6;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a39ecdf0866972826ad5de815b46bab2c" kindref="member">senTransMax</ref><sp/>=<sp/>1e6;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a45b16624e18b471cd41da7172feb87b8" kindref="member">PMatrixGyro</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1abbde16b5703a13a1267f1487a57915ac" kindref="member">AMatrixGyro</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a3bd5c36fa8cca513903d01a688c0fdbf" kindref="member">PMatrixAccel</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a462a84f02843d63909b9b133ccfed4ca" kindref="member">AMatrixAccel</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a9784d35940372613dd863aff698bbb18" kindref="member">walkBoundsGyro</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1ac67410610024b660765d2f534ab0c8f7" kindref="member">walkBoundsAccel</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a2714aa64b719d8402ce4480bace2f93d" kindref="member">navErrorsGyro</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1aca1f6e58534b341e02882d5ac5b6b4eb" kindref="member">navErrorsAccel</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;previous_omega_BN_B.fill(0.0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_omega_BN_B.fill(0.0);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_nonConservativeAccelpntB_B.fill(0.0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_omegaDot_BN_B.fill(0.0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;previous_TotalAccumDV_BN_B.fill(0.0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_TotalAccumDV_BN_B.fill(0.0);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;accel_SN_P_out.fill(0.0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;DV_SN_P_out.fill(0.0);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omega_PN_P_out.fill(0.0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;prv_PN_out.fill(0.0);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a2f63e763d1ce0c54f20613b41eeeb3d8" kindref="member">accelScale</ref>.fill(1.);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a0391957c105db2db5e358e0578620afa" kindref="member">gyroScale</ref>.fill(1.);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a292f559c78121f56b0835a65b82a75a5" kindref="member">sensorPos_B</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1acbfdb4922ff27544818b8b4cc5771069" kindref="member">dcm_PB</ref>.setIdentity();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1ab5f32803743ca07217c6090f7ac5c939" kindref="member">ImuSensor::setBodyToPlatformDCM</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yaw,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pitch,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>roll)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1acbfdb4922ff27544818b8b4cc5771069" kindref="member">dcm_PB</ref><sp/>=<sp/>eigenM1(roll)*eigenM2(pitch)*eigenM3(yaw);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">ImuSensor::~ImuSensor()</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1a3acaaf8724e7b003c5bc8e9a81d0c9dd" kindref="member">ImuSensor::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>input<sp/>message<sp/>has<sp/>not<sp/>been<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_imu_sensor_1ac9c5be0a49419b35b4af9b25543ca104" kindref="member">scStateInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_imu_sensor_1a8dd854b62ed91731a7247186ea7f1cf8" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;imuSensor.scStateInMsg<sp/>was<sp/>not<sp/>linked.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a462a84f02843d63909b9b133ccfed4ca" kindref="member">AMatrixAccel</ref>.setIdentity(this-&gt;numStates,this-&gt;numStates);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_imu_sensor_1a3bd5c36fa8cca513903d01a688c0fdbf" kindref="member">PMatrixAccel</ref>.cols()<sp/>!=<sp/>this-&gt;numStates<sp/>||<sp/>this-&gt;PMatrixAccel.rows()<sp/>!=<sp/>this-&gt;numStates)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_imu_sensor_1a8dd854b62ed91731a7247186ea7f1cf8" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>process<sp/>noise<sp/>matrix<sp/>(PMatrixAccel)<sp/>is<sp/>not<sp/>3*3.<sp/>Quitting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;errorModelAccel.setNoiseMatrix(this-&gt;<ref refid="class_imu_sensor_1a3bd5c36fa8cca513903d01a688c0fdbf" kindref="member">PMatrixAccel</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;errorModelAccel.setRNGSeed(this-&gt;RNGSeed);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;errorModelAccel.setUpperBounds(this-&gt;<ref refid="class_imu_sensor_1ac67410610024b660765d2f534ab0c8f7" kindref="member">walkBoundsAccel</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1abbde16b5703a13a1267f1487a57915ac" kindref="member">AMatrixGyro</ref>.setIdentity(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_imu_sensor_1a45b16624e18b471cd41da7172feb87b8" kindref="member">PMatrixGyro</ref>.rows()<sp/>!=<sp/>this-&gt;numStates<sp/>||<sp/>this-&gt;PMatrixGyro.cols()<sp/>!=<sp/>this-&gt;numStates)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_imu_sensor_1a8dd854b62ed91731a7247186ea7f1cf8" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Your<sp/>process<sp/>noise<sp/>matrix<sp/>(PMatrixGyro)<sp/>is<sp/>not<sp/>3*3.<sp/>Quitting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;errorModelGyro.setNoiseMatrix(this-&gt;<ref refid="class_imu_sensor_1a45b16624e18b471cd41da7172feb87b8" kindref="member">PMatrixGyro</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;errorModelGyro.setRNGSeed(this-&gt;RNGSeed);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;errorModelGyro.setUpperBounds(this-&gt;<ref refid="class_imu_sensor_1a9784d35940372613dd863aff698bbb18" kindref="member">walkBoundsGyro</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>oSatBounds;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>oSatBounds.resize(this-&gt;numStates,<sp/>2);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>oSatBounds(0,0)<sp/>=<sp/>-this-&gt;<ref refid="class_imu_sensor_1a9cfd803aea067b13a7229cabb6c114af" kindref="member">senRotMax</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>oSatBounds(0,1)<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1a9cfd803aea067b13a7229cabb6c114af" kindref="member">senRotMax</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>oSatBounds(1,0)<sp/>=<sp/>-this-&gt;<ref refid="class_imu_sensor_1a9cfd803aea067b13a7229cabb6c114af" kindref="member">senRotMax</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>oSatBounds(1,1)<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1a9cfd803aea067b13a7229cabb6c114af" kindref="member">senRotMax</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>oSatBounds(2,0)<sp/>=<sp/>-this-&gt;<ref refid="class_imu_sensor_1a9cfd803aea067b13a7229cabb6c114af" kindref="member">senRotMax</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>oSatBounds(2,1)<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1a9cfd803aea067b13a7229cabb6c114af" kindref="member">senRotMax</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a8186405461fcc9de4e486269fa03b897" kindref="member">oSat</ref>.setBounds(oSatBounds);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>aSatBounds;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>aSatBounds.resize(this-&gt;numStates,<sp/>2);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>aSatBounds(0,0)<sp/>=<sp/>-this-&gt;<ref refid="class_imu_sensor_1a39ecdf0866972826ad5de815b46bab2c" kindref="member">senTransMax</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>aSatBounds(0,1)<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1a39ecdf0866972826ad5de815b46bab2c" kindref="member">senTransMax</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>aSatBounds(1,0)<sp/>=<sp/>-this-&gt;<ref refid="class_imu_sensor_1a39ecdf0866972826ad5de815b46bab2c" kindref="member">senTransMax</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>aSatBounds(1,1)<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1a39ecdf0866972826ad5de815b46bab2c" kindref="member">senTransMax</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>aSatBounds(2,0)<sp/>=<sp/>-this-&gt;<ref refid="class_imu_sensor_1a39ecdf0866972826ad5de815b46bab2c" kindref="member">senTransMax</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>aSatBounds(2,1)<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1a39ecdf0866972826ad5de815b46bab2c" kindref="member">senTransMax</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1ae21daf5927f97d379b79ac1e964b236f" kindref="member">aSat</ref>.setBounds(aSatBounds);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1ab8895587e902106f24e41863b4e901a1" kindref="member">ImuSensor::readInputMessages</ref>()</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;StateCurrent<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1ac9c5be0a49419b35b4af9b25543ca104" kindref="member">scStateInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_imu_sensor_1ac9c5be0a49419b35b4af9b25543ca104" kindref="member">scStateInMsg</ref>.isLinked())</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;StateCurrent<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1ac9c5be0a49419b35b4af9b25543ca104" kindref="member">scStateInMsg</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_sigma_BN<sp/>=<sp/>cArray2EigenVector3d(this-&gt;StateCurrent.sigma_BN);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_omega_BN_B<sp/>=<sp/>cArray2EigenVector3d(this-&gt;StateCurrent.omega_BN_B);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_nonConservativeAccelpntB_B<sp/>=<sp/>cArray2EigenVector3d(this-&gt;StateCurrent.nonConservativeAccelpntB_B);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_omegaDot_BN_B<sp/>=<sp/>cArray2EigenVector3d(this-&gt;StateCurrent.omegaDot_BN_B);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_TotalAccumDV_BN_B<sp/>=<sp/>cArray2EigenVector3d(this-&gt;StateCurrent.TotalAccumDV_BN_B);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1aa9c7b685dd943568ccb690e28892c114" kindref="member">ImuSensor::writeOutputMessages</ref>(uint64_t<sp/>Clock)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>IMUSensorMsgPayload<sp/>localOutput;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;accel_SN_P_out,<sp/>localOutput.AccelPlatform);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;DV_SN_P_out,<sp/>localOutput.DVFramePlatform);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;omega_PN_P_out,<sp/>localOutput.AngVelPlatform);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;prv_PN_out,<sp/>localOutput.DRFramePlatform);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a0e0e0f6392ab90693928b6cd54eae772" kindref="member">sensorOutMsg</ref>.write(&amp;localOutput,<sp/>this-&gt;moduleID,<sp/>Clock);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1a9414c358e2125a2d5473eb255aff1d2e" kindref="member">ImuSensor::setLSBs</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>LSBa,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>LSBo)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a079ad19d25831b9fc9cb750dd138c243" kindref="member">aDisc</ref>.setLSB(Eigen::Vector3d(LSBa,<sp/>LSBa,<sp/>LSBa));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a9e6c50c4fb04c556dfac1939d93eddd2" kindref="member">oDisc</ref>.setLSB(Eigen::Vector3d(LSBo,<sp/>LSBo,<sp/>LSBo));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1ad547c166a3e00f60068bcf549f04b18b" kindref="member">ImuSensor::setCarryError</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aCarry,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>oCarry)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a079ad19d25831b9fc9cb750dd138c243" kindref="member">aDisc</ref>.setCarryError(aCarry);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a9e6c50c4fb04c556dfac1939d93eddd2" kindref="member">oDisc</ref>.setCarryError(oCarry);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1ab4cfdba5b443ab773bbc7e82cc801c6a" kindref="member">ImuSensor::setRoundDirection</ref>(roundDirection_t<sp/>aRound,<sp/>roundDirection_t<sp/>oRound){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a079ad19d25831b9fc9cb750dd138c243" kindref="member">aDisc</ref>.setRoundDirection(aRound);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a9e6c50c4fb04c556dfac1939d93eddd2" kindref="member">oDisc</ref>.setRoundDirection(oRound);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1a0ea8f642fa2ce9b9496ba8ae0957f77e" kindref="member">ImuSensor::applySensorDiscretization</ref>(uint64_t<sp/>CurrentTime)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt<sp/>=<sp/>(CurrentTime<sp/>-<sp/>this-&gt;PreviousTime)*1.0E-9;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_imu_sensor_1a079ad19d25831b9fc9cb750dd138c243" kindref="member">aDisc</ref>.LSB.any())<sp/></highlight><highlight class="comment">//If<sp/>aLSB<sp/>has<sp/>been<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;accel_SN_P_out<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1a079ad19d25831b9fc9cb750dd138c243" kindref="member">aDisc</ref>.discretize(this-&gt;accel_SN_P_out);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;DV_SN_P_out<sp/>-=<sp/>this-&gt;<ref refid="class_imu_sensor_1a079ad19d25831b9fc9cb750dd138c243" kindref="member">aDisc</ref>.getDiscretizationErrors()<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_imu_sensor_1a9e6c50c4fb04c556dfac1939d93eddd2" kindref="member">oDisc</ref>.LSB.any())<sp/></highlight><highlight class="comment">//<sp/>If<sp/>oLSB<sp/>has<sp/>been<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;omega_PN_P_out<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1a9e6c50c4fb04c556dfac1939d93eddd2" kindref="member">oDisc</ref>.discretize(this-&gt;omega_PN_P_out);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;prv_PN_out<sp/>-=<sp/>this-&gt;<ref refid="class_imu_sensor_1a9e6c50c4fb04c556dfac1939d93eddd2" kindref="member">oDisc</ref>.getDiscretizationErrors()<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1a9737593635fbc870f04bc9ccf9ae7fc3" kindref="member">ImuSensor::set_oSatBounds</ref>(Eigen::MatrixXd<sp/>oSatBounds){</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a8186405461fcc9de4e486269fa03b897" kindref="member">oSat</ref>.setBounds(oSatBounds);</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1aa45d292f9462d292fb3e5bb2291a0911" kindref="member">ImuSensor::set_aSatBounds</ref>(Eigen::MatrixXd<sp/>aSatBounds){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1ae21daf5927f97d379b79ac1e964b236f" kindref="member">aSat</ref>.setBounds(aSatBounds);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1a8189fe1647277dd33b5187a4d66559d6" kindref="member">ImuSensor::scaleTruth</ref>()</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omega_PN_P_out<sp/>=<sp/>this-&gt;omega_PN_P_out.cwiseProduct(this-&gt;<ref refid="class_imu_sensor_1a0391957c105db2db5e358e0578620afa" kindref="member">gyroScale</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;prv_PN_out<sp/>=<sp/>this-&gt;prv_PN_out.cwiseProduct(this-&gt;<ref refid="class_imu_sensor_1a0391957c105db2db5e358e0578620afa" kindref="member">gyroScale</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;accel_SN_P_out<sp/>=<sp/>this-&gt;accel_SN_P_out.cwiseProduct(this-&gt;<ref refid="class_imu_sensor_1a2f63e763d1ce0c54f20613b41eeeb3d8" kindref="member">accelScale</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;DV_SN_P_out<sp/>=<sp/>this-&gt;DV_SN_P_out.cwiseProduct(this-&gt;<ref refid="class_imu_sensor_1a2f63e763d1ce0c54f20613b41eeeb3d8" kindref="member">accelScale</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1a3722c6de7bc39eb96f66fae607bc4c43" kindref="member">ImuSensor::applySensorErrors</ref>(uint64_t<sp/>CurrentTime)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>OmegaErrors;<sp/></highlight><highlight class="comment">//angular<sp/>noise<sp/>plus<sp/>bias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>AccelErrors;<sp/></highlight><highlight class="comment">//linear<sp/>noise<sp/>plus<sp/>bias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt;<sp/></highlight><highlight class="comment">//time<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>(CurrentTime<sp/>-<sp/>this-&gt;PreviousTime)*1.0E-9;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>OmegaErrors<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1a2714aa64b719d8402ce4480bace2f93d" kindref="member">navErrorsGyro</ref><sp/>+<sp/>this-&gt;<ref refid="class_imu_sensor_1a487b939a2cd4be64abb8ff4c01f582db" kindref="member">senRotBias</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omega_PN_P_out<sp/>+=<sp/>OmegaErrors;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;prv_PN_out<sp/>+=<sp/>OmegaErrors<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>AccelErrors<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1aca1f6e58534b341e02882d5ac5b6b4eb" kindref="member">navErrorsAccel</ref><sp/>+<sp/>this-&gt;<ref refid="class_imu_sensor_1a562dd8eefd0dcb2a1a47de1e48f32622" kindref="member">senTransBias</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;accel_SN_P_out<sp/>+=<sp/>AccelErrors;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;DV_SN_P_out<sp/>+=<sp/>AccelErrors<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1a61538ed1a43671cf1c46cf2bced1713b" kindref="member">ImuSensor::computeSensorErrors</ref>()</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;errorModelAccel.setPropMatrix(this-&gt;<ref refid="class_imu_sensor_1a462a84f02843d63909b9b133ccfed4ca" kindref="member">AMatrixAccel</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;errorModelAccel.computeNextState();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1aca1f6e58534b341e02882d5ac5b6b4eb" kindref="member">navErrorsAccel</ref><sp/>=<sp/>this-&gt;errorModelAccel.getCurrentState();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;errorModelGyro.setPropMatrix(this-&gt;<ref refid="class_imu_sensor_1abbde16b5703a13a1267f1487a57915ac" kindref="member">AMatrixGyro</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;errorModelGyro.computeNextState();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a2714aa64b719d8402ce4480bace2f93d" kindref="member">navErrorsGyro</ref><sp/>=<sp/>this-&gt;errorModelGyro.getCurrentState();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1a6a8c5958fdcecca1862027950dc5c9b8" kindref="member">ImuSensor::applySensorSaturation</ref>(uint64_t<sp/>CurrentTime)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>dt<sp/>=<sp/>(CurrentTime<sp/>-<sp/>PreviousTime)*1.0E-9;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omega_PN_P_in<sp/>=<sp/>this-&gt;omega_PN_P_out;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omega_PN_P_out<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1a8186405461fcc9de4e486269fa03b897" kindref="member">oSat</ref>.saturate(omega_PN_P_in);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;numStates;<sp/>i++){</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;omega_PN_P_out(i)<sp/>!=<sp/>omega_PN_P_in(i)){</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;prv_PN_out(i)<sp/>=<sp/>this-&gt;omega_PN_P_out(i)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>accel_SN_P_in<sp/>=<sp/>this-&gt;accel_SN_P_out;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;accel_SN_P_out<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1ae21daf5927f97d379b79ac1e964b236f" kindref="member">aSat</ref>.saturate(accel_SN_P_in);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;numStates;<sp/>i++){</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;accel_SN_P_out(i)<sp/>!=<sp/>accel_SN_P_in(i)){</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;DV_SN_P_out(i)<sp/>=<sp/>this-&gt;accel_SN_P_out(i)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1a6d6819347e328f264c2b8ceed9bb2426" kindref="member">ImuSensor::computePlatformDR</ref>()</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_P2P1_cArray[9];<sp/></highlight><highlight class="comment">//dcm_P2P1<sp/>as<sp/>cArray<sp/>for<sp/>C2PRV<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prv_PN_cArray[3];<sp/></highlight><highlight class="comment">//cArray<sp/>of<sp/>PRV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calculated<sp/>time<sp/>averaged<sp/>cumulative<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_P2P1;<sp/><sp/></highlight><highlight class="comment">//<sp/>direction<sp/>cosine<sp/>matrix<sp/>from<sp/>P<sp/>at<sp/>time<sp/>1<sp/>to<sp/>P<sp/>at<sp/>time<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_P2P1<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1acbfdb4922ff27544818b8b4cc5771069" kindref="member">dcm_PB</ref><sp/>*<sp/>this-&gt;current_sigma_BN.toRotationMatrix().transpose()<sp/>*<sp/>(this-&gt;<ref refid="class_imu_sensor_1acbfdb4922ff27544818b8b4cc5771069" kindref="member">dcm_PB</ref><sp/>*<sp/>this-&gt;previous_sigma_BN.toRotationMatrix().transpose()).transpose();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrix3d2CArray(dcm_P2P1,<sp/>dcm_P2P1_cArray);<sp/></highlight><highlight class="comment">//makes<sp/>a<sp/>9x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>C2PRV(RECAST3X3<sp/>dcm_P2P1_cArray,<sp/>prv_PN_cArray);<sp/></highlight><highlight class="comment">//makes<sp/>it<sp/>back<sp/>into<sp/>a<sp/>3x3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;prv_PN_out<sp/>=<sp/>cArray2EigenVector3d(prv_PN_cArray);</highlight><highlight class="comment">//writes<sp/>it<sp/>back<sp/>to<sp/>the<sp/>variable<sp/>to<sp/>be<sp/>passed<sp/>along.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//calculate<sp/>&quot;instantaneous&quot;<sp/>angular<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omega_PN_P_out<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1acbfdb4922ff27544818b8b4cc5771069" kindref="member">dcm_PB</ref><sp/>*<sp/>this-&gt;current_omega_BN_B;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1a7c6f46b424f5961ace6d548976f75375" kindref="member">ImuSensor::computePlatformDV</ref>(uint64_t<sp/>CurrentTime)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>&quot;instantaneous&quot;<sp/>linear<sp/>acceleration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDotDot_SN_B;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sensor<sp/>non<sp/>conservative<sp/>acceleration<sp/>relative<sp/>to<sp/>inertial<sp/>frame<sp/>in<sp/>body<sp/>frame<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>rDotDot_SN_B<sp/>=<sp/>this-&gt;current_nonConservativeAccelpntB_B<sp/>+<sp/>this-&gt;current_omegaDot_BN_B.cross(this-&gt;<ref refid="class_imu_sensor_1a292f559c78121f56b0835a65b82a75a5" kindref="member">sensorPos_B</ref>)<sp/>+<sp/>this-&gt;current_omega_BN_B.cross(this-&gt;current_omega_BN_B.cross(this-&gt;sensorPos_B));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;accel_SN_P_out<sp/>=<sp/>this-&gt;<ref refid="class_imu_sensor_1acbfdb4922ff27544818b8b4cc5771069" kindref="member">dcm_PB</ref><sp/>*<sp/>rDotDot_SN_B;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>time-average<sp/>cumulative<sp/>delta<sp/>v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_NB_1;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>direction<sp/>cosine<sp/>matrix<sp/>from<sp/>N<sp/>to<sp/>B<sp/>at<sp/>time<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_NB_1<sp/>=<sp/>this-&gt;previous_sigma_BN.toRotationMatrix();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_NB_2;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>direction<sp/>cosine<sp/>matrix<sp/>from<sp/>N<sp/>to<sp/>B<sp/>at<sp/>time<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_NB_2<sp/>=<sp/>this-&gt;current_sigma_BN.toRotationMatrix();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;DV_SN_P_out<sp/>=this-&gt;<ref refid="class_imu_sensor_1acbfdb4922ff27544818b8b4cc5771069" kindref="member">dcm_PB</ref><sp/>*<sp/>dcm_NB_2.transpose()<sp/>*<sp/>((dcm_NB_2<sp/>*<sp/>this-&gt;current_TotalAccumDV_BN_B<sp/>-<sp/>dcm_NB_1<sp/>*<sp/>this-&gt;previous_TotalAccumDV_BN_B)<sp/>+<sp/>((dcm_NB_2<sp/>*<sp/>this-&gt;current_omega_BN_B).cross(dcm_NB_2<sp/>*<sp/>this-&gt;<ref refid="class_imu_sensor_1a292f559c78121f56b0835a65b82a75a5" kindref="member">sensorPos_B</ref>)<sp/>-<sp/>(dcm_NB_1<sp/>*<sp/>this-&gt;previous_omega_BN_B).cross(dcm_NB_1<sp/>*<sp/>this-&gt;sensorPos_B)));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_imu_sensor_1ac9f21753d436841421f808589f054665" kindref="member">ImuSensor::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_imu_sensor_1ab8895587e902106f24e41863b4e901a1" kindref="member">readInputMessages</ref>();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_imu_sensor_1a1f0a73a035c51dd2b01c7db7ac94c3d1" kindref="member">NominalReady</ref>)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>true<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a6d6819347e328f264c2b8ceed9bb2426" kindref="member">computePlatformDR</ref>();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a7c6f46b424f5961ace6d548976f75375" kindref="member">computePlatformDV</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>sensed<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a61538ed1a43671cf1c46cf2bced1713b" kindref="member">computeSensorErrors</ref>();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a3722c6de7bc39eb96f66fae607bc4c43" kindref="member">applySensorErrors</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a8189fe1647277dd33b5187a4d66559d6" kindref="member">scaleTruth</ref>();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a0ea8f642fa2ce9b9496ba8ae0957f77e" kindref="member">applySensorDiscretization</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a6a8c5958fdcecca1862027950dc5c9b8" kindref="member">applySensorSaturation</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Output<sp/>sensed<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1aa9c7b685dd943568ccb690e28892c114" kindref="member">writeOutputMessages</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//record<sp/>data<sp/>from<sp/>the<sp/>current<sp/>spacecraft<sp/>message<sp/>which<sp/>is<sp/>needed<sp/>for<sp/>the<sp/>next<sp/>IMU<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;previous_sigma_BN<sp/>=<sp/>this-&gt;current_sigma_BN;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;previous_omega_BN_B<sp/>=<sp/>this-&gt;current_omega_BN_B;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;previous_TotalAccumDV_BN_B<sp/>=<sp/>this-&gt;current_TotalAccumDV_BN_B;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;PreviousTime<sp/>=<sp/>CurrentSimNanos;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_imu_sensor_1a1f0a73a035c51dd2b01c7db7ac94c3d1" kindref="member">NominalReady</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/sensors/imuSensor/imuSensor.cpp"/>
  </compounddef>
</doxygen>
