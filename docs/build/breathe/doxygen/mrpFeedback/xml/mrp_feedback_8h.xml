<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="mrp_feedback_8h" kind="file" language="C++">
    <compoundname>mrpFeedback.h</compoundname>
    <includes local="yes">architecture/utilities/bskLogging.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="yes">cMsgCInterface/RWSpeedMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/RWAvailabilityMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/RWArrayConfigMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/VehicleConfigMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/AttGuidMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/CmdTorqueBodyMsg_C.h</includes>
    <includedby refid="mrp_feedback_8c" local="yes">/Users/julio/Desktop/basilisk/src/fswAlgorithms/attControl/mrpFeedback/mrpFeedback.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/attControl/mrpFeedback/mrpFeedback.h</label>
        <link refid="mrp_feedback_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="8">
        <label>cMsgCInterface/AttGuidMsg_C.h</label>
      </node>
      <node id="9">
        <label>cMsgCInterface/CmdTorqueBodyMsg_C.h</label>
      </node>
      <node id="6">
        <label>cMsgCInterface/RWArrayConfigMsg_C.h</label>
      </node>
      <node id="5">
        <label>cMsgCInterface/RWAvailabilityMsg_C.h</label>
      </node>
      <node id="4">
        <label>cMsgCInterface/RWSpeedMsg_C.h</label>
      </node>
      <node id="7">
        <label>cMsgCInterface/VehicleConfigMsg_C.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmrp_feedback_config" prot="public">mrpFeedbackConfig</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="mrp_feedback_8h_1a32f1163198d4e5fe43a299626d48d719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_mrpFeedback</definition>
        <argsstring>(mrpFeedbackConfig *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_mrpFeedback</name>
        <param>
          <type><ref refid="structmrp_feedback_config" kindref="compound">mrpFeedbackConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
<para>This method sets up the module output message of type :ref:<computeroutput>CmdTorqueBodyMsgPayload</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with this module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attControl/mrpFeedback/mrpFeedback.h" line="65" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attControl/mrpFeedback/mrpFeedback.c" bodystart="39" bodyend="43" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attControl/mrpFeedback/mrpFeedback.h" declline="65" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="mrp_feedback_8h_1af95feabc63b77df75d7552e0885db35b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_mrpFeedback</definition>
        <argsstring>(mrpFeedbackConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_mrpFeedback</name>
        <param>
          <type><ref refid="structmrp_feedback_config" kindref="compound">mrpFeedbackConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method takes the attitude and rate errors relative to the Reference frame, as well as the reference frame angular rates and acceleration, and computes the required control torque Lr. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the MRP Steering attitude control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>zero the output message</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Read the attitude tracking error message</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>read in optional RW speed and availability message</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>compute control update time</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>compute body rate</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>evaluate integral term</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>evaluate required attitude control torque Lr</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>set the output message and write it out</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>write the output integral feedback torque</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attControl/mrpFeedback/mrpFeedback.h" line="66" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attControl/mrpFeedback/mrpFeedback.c" bodystart="106" bodyend="224" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attControl/mrpFeedback/mrpFeedback.h" declline="66" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="mrp_feedback_8h_1aaa62e8bb44dce8b636828ac81a24ed4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_mrpFeedback</definition>
        <argsstring>(mrpFeedbackConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_mrpFeedback</name>
        <param>
          <type><ref refid="structmrp_feedback_config" kindref="compound">mrpFeedbackConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs a complete reset of the module. Local module variables that retain time varying states between function calls are reset to their default values. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the MRP steering control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>zero and read in vehicle configuration message</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>copy over spacecraft inertia tensor</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>zero the number of RW by default</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>check if RW configuration message exists</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Read static RW config data message and store it in module variables</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Reset the integral measure of the rate tracking error</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Reset the prior time flag state. If zero, control time step not evaluated on the first function call</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attControl/mrpFeedback/mrpFeedback.h" line="67" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attControl/mrpFeedback/mrpFeedback.c" bodystart="53" bodyend="97" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attControl/mrpFeedback/mrpFeedback.h" declline="67" declcolumn="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_MRP_FEEDBACK_CONTROL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_MRP_FEEDBACK_CONTROL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/bskLogging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/RWSpeedMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/RWAvailabilityMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/RWArrayConfigMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/VehicleConfigMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/AttGuidMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/CmdTorqueBodyMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structmrp_feedback_config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="36" refid="structmrp_feedback_config_1ac3d2a0a91ab16850b97fd99a3eb2f80b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structmrp_feedback_config_1ac3d2a0a91ab16850b97fd99a3eb2f80b" kindref="member">K</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37" refid="structmrp_feedback_config_1ad3129f88440a7a509f380cda4464f855" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structmrp_feedback_config_1ad3129f88440a7a509f380cda4464f855" kindref="member">P</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="structmrp_feedback_config_1a44f84f50aa8206c8730613dd82a2e942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structmrp_feedback_config_1a44f84f50aa8206c8730613dd82a2e942" kindref="member">Ki</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="structmrp_feedback_config_1a35d488edd6b817af4157e1e1062a0122" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structmrp_feedback_config_1a35d488edd6b817af4157e1e1062a0122" kindref="member">integralLimit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="structmrp_feedback_config_1ad0e6c14e1f7596ecbd45cedf2c0cc765" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmrp_feedback_config_1ad0e6c14e1f7596ecbd45cedf2c0cc765" kindref="member">controlLawType</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="structmrp_feedback_config_1a0e9c9ad73f779dbe52c4af09e72128ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structmrp_feedback_config_1a0e9c9ad73f779dbe52c4af09e72128ad" kindref="member">priorTime</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="structmrp_feedback_config_1aa59ed6ae4dc31bf93c2f425c337923ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="structmrp_feedback_config_1a062e06e7feca945e298d89d369b7a7cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>int_sigma[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="structmrp_feedback_config_1a0ba18464dc4f6ef8b8fb9c60f4958d05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>knownTorquePntB_B[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="structmrp_feedback_config_1a190aa7f4a9144b373208787dd2c15aa6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ISCPntB_B[9];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="structmrp_feedback_config_1a1198afa45416aeb7a5307156a8a2efdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RWArrayConfigMsgPayload<sp/><ref refid="structmrp_feedback_config_1a1198afa45416aeb7a5307156a8a2efdc" kindref="member">rwConfigParams</ref>;<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>declare<sp/>module<sp/>IO<sp/>interfaces<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structmrp_feedback_config_1abd6c207d3f80e345b4189fb69573e2db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RWSpeedMsg_C<sp/><ref refid="structmrp_feedback_config_1abd6c207d3f80e345b4189fb69573e2db" kindref="member">rwSpeedsInMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="structmrp_feedback_config_1a25c9390036e92819e67a21fa6ddbef2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RWAvailabilityMsg_C<sp/><ref refid="structmrp_feedback_config_1a25c9390036e92819e67a21fa6ddbef2b" kindref="member">rwAvailInMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="structmrp_feedback_config_1a09860e9158c2147ec0f7d3bce5718ff4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RWArrayConfigMsg_C<sp/><ref refid="structmrp_feedback_config_1a09860e9158c2147ec0f7d3bce5718ff4" kindref="member">rwParamsInMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="structmrp_feedback_config_1a892f53a41f7af47a105f999200bdeba2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CmdTorqueBodyMsg_C<sp/><ref refid="structmrp_feedback_config_1a892f53a41f7af47a105f999200bdeba2" kindref="member">cmdTorqueOutMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="structmrp_feedback_config_1aa0dfbd30d6146eaf3b347446704b057c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CmdTorqueBodyMsg_C<sp/><ref refid="structmrp_feedback_config_1aa0dfbd30d6146eaf3b347446704b057c" kindref="member">intFeedbackTorqueOutMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="structmrp_feedback_config_1aa2db6c942143542506e12e502aa64273" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>AttGuidMsg_C<sp/><ref refid="structmrp_feedback_config_1aa2db6c942143542506e12e502aa64273" kindref="member">guidInMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="structmrp_feedback_config_1ad7597d3cd6ee3cecbe2de401b4cdb5cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VehicleConfigMsg_C<sp/><ref refid="structmrp_feedback_config_1ad7597d3cd6ee3cecbe2de401b4cdb5cd" kindref="member">vehConfigInMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structmrp_feedback_config_1a34b86fbbab331fe55bb802c4bf9dd175" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BSKLogger<sp/>*<ref refid="structmrp_feedback_config_1a34b86fbbab331fe55bb802c4bf9dd175" kindref="member">bskLogger</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<ref refid="structmrp_feedback_config" kindref="compound">mrpFeedbackConfig</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_mrpFeedback(<ref refid="structmrp_feedback_config" kindref="compound">mrpFeedbackConfig</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_mrpFeedback(<ref refid="structmrp_feedback_config" kindref="compound">mrpFeedbackConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_mrpFeedback(<ref refid="structmrp_feedback_config" kindref="compound">mrpFeedbackConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attControl/mrpFeedback/mrpFeedback.h"/>
  </compounddef>
</doxygen>
