<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="spacecraft_location_8cpp" kind="file" language="C++">
    <compoundname>spacecraftLocation.cpp</compoundname>
    <includes refid="spacecraft_location_8h" local="yes">simulation/environment/spacecraftLocation/spacecraftLocation.h</includes>
    <includes local="yes">architecture/utilities/avsEigenSupport.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/astroConstants.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/environment/spacecraftLocation/spacecraftLocation.cpp</label>
        <link refid="spacecraft_location_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>simulation/environment/spacecraftLocation/spacecraftLocation.h</label>
        <link refid="spacecraft_location_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Eigen/Dense</label>
      </node>
      <node id="6">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="10">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="9">
        <label>architecture/msgPayloadDefC/AccessMsgPayload.h</label>
      </node>
      <node id="8">
        <label>architecture/msgPayloadDefC/SCStatesMsgPayload.h</label>
      </node>
      <node id="7">
        <label>architecture/msgPayloadDefC/SpicePlanetStateMsgPayload.h</label>
      </node>
      <node id="14">
        <label>architecture/utilities/astroConstants.h</label>
      </node>
      <node id="12">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="11">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="13">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;simulation/environment/spacecraftLocation/spacecraftLocation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenSupport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/astroConstants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="class_spacecraft_location_1a4792c6aa6bb6362268950eb11a77a955" kindref="member">SpacecraftLocation::SpacecraftLocation</ref>()</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_location_1a96a1c2a600dc6fc213e70edb91c57789" kindref="member">rEquator</ref><sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_location_1ab3c063afb680432cceb01c37a232b23a" kindref="member">rPolar</ref><sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_location_1a91fbdd6ef9021dd2dc6e2c0e0d348c40" kindref="member">maximumRange</ref><sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_location_1a3b1e1d00b9f1e474000d9b654eff91d5" kindref="member">r_LB_B</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_location_1abc99c836f7cb0ff41817a2d629125f05" kindref="member">aHat_B</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_location_1a51459ea0105a078fa2f711529d934a00" kindref="member">theta</ref><sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;planetState<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_location_1a8d8ec7f181ff7dc64d1a8049d95ffc66" kindref="member">planetInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;planetState.J20002Pfix[0][0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;planetState.J20002Pfix[1][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;planetState.J20002Pfix[2][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="class_spacecraft_location_1ac6b64d12ad1f6211eb81d015cf56d4ce" kindref="member">SpacecraftLocation::~SpacecraftLocation</ref>()</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c=0;<sp/>c&lt;this-&gt;<ref refid="class_spacecraft_location_1af0af040058fee4c026abc23790c09e02" kindref="member">accessOutMsgs</ref>.size();<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_spacecraft_location_1af0af040058fee4c026abc23790c09e02" kindref="member">accessOutMsgs</ref>.at(c);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_location_1a3032e9b177877165cc36080474af4568" kindref="member">SpacecraftLocation::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spacecraft_location_1aae7d3e1a59856c8d0a2ba1db5dce8c97" kindref="member">scStateInMsgs</ref>.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spacecraft_location_1a9376c74221c9e8a294e4e3ad052324c8" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;SpacecraftLocation<sp/>module<sp/>must<sp/>have<sp/>at<sp/>least<sp/>one<sp/>spacecraft<sp/>added<sp/>through<sp/>`addSpacecraftToModel`&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_spacecraft_location_1a1dcee881809b0b0ea05889c47afff524" kindref="member">primaryScStateInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spacecraft_location_1a9376c74221c9e8a294e4e3ad052324c8" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;SpacecraftLocation<sp/>module<sp/>must<sp/>have<sp/>`primaryScStateInMsg`<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spacecraft_location_1a96a1c2a600dc6fc213e70edb91c57789" kindref="member">rEquator</ref><sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spacecraft_location_1a9376c74221c9e8a294e4e3ad052324c8" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;SpacecraftLocation<sp/>rEquator<sp/>must<sp/>be<sp/>set<sp/>to<sp/>the<sp/>planet<sp/>equatorial<sp/>radius&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>polar<sp/>radius<sp/>is<sp/>not<sp/>specified,<sp/>then<sp/>it<sp/>is<sp/>set<sp/>equal<sp/>to<sp/>the<sp/>equatorial<sp/>radius<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spacecraft_location_1a96a1c2a600dc6fc213e70edb91c57789" kindref="member">rEquator</ref><sp/>&gt;<sp/>0.0<sp/>&amp;&amp;<sp/>this-&gt;<ref refid="class_spacecraft_location_1ab3c063afb680432cceb01c37a232b23a" kindref="member">rPolar</ref>&lt;0.0)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_location_1ab3c063afb680432cceb01c37a232b23a" kindref="member">rPolar</ref><sp/>=<sp/><ref refid="class_spacecraft_location_1a96a1c2a600dc6fc213e70edb91c57789" kindref="member">rEquator</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;zScale<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_location_1a96a1c2a600dc6fc213e70edb91c57789" kindref="member">rEquator</ref><sp/>/<sp/>this-&gt;<ref refid="class_spacecraft_location_1ab3c063afb680432cceb01c37a232b23a" kindref="member">rPolar</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spacecraft_location_1abc99c836f7cb0ff41817a2d629125f05" kindref="member">aHat_B</ref>.norm()<sp/>&gt;<sp/>0.1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spacecraft_location_1a51459ea0105a078fa2f711529d934a00" kindref="member">theta</ref><sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spacecraft_location_1a9376c74221c9e8a294e4e3ad052324c8" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;SpacecraftLocation<sp/>must<sp/>set<sp/>theta<sp/>if<sp/>you<sp/>specify<sp/>aHat_B&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_location_1abc99c836f7cb0ff41817a2d629125f05" kindref="member">aHat_B</ref>.normalize();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_location_1a3dd2d760274186d9fd9161960d6e903d" kindref="member">SpacecraftLocation::addSpacecraftToModel</ref>(Message&lt;SCStatesMsgPayload&gt;<sp/>*tmpScMsg)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_location_1aae7d3e1a59856c8d0a2ba1db5dce8c97" kindref="member">scStateInMsgs</ref>.push_back(tmpScMsg-&gt;addSubscriber());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>output<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>Message&lt;AccessMsgPayload&gt;<sp/>*msg;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Message&lt;AccessMsgPayload&gt;;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_location_1af0af040058fee4c026abc23790c09e02" kindref="member">accessOutMsgs</ref>.push_back(msg);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>expand<sp/>the<sp/>buffer<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>AccessMsgPayload<sp/>accMsg;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;accessMsgBuffer.push_back(accMsg);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_location_1ae691c1c94f731db9ae8f9a74a110bfc2" kindref="member">SpacecraftLocation::ReadMessages</ref>()</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>SCStatesMsgPayload<sp/>scMsg;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>out<sp/>the<sp/>vector<sp/>of<sp/>spacecraft<sp/>states.<sp/><sp/>This<sp/>is<sp/>created<sp/>freshly<sp/>below.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scStatesBuffer.clear();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>in<sp/>primary<sp/>spacecraft<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;primaryScStatesBuffer<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_location_1a1dcee881809b0b0ea05889c47afff524" kindref="member">primaryScStateInMsg</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;r_BN_N<sp/>=<sp/>cArray2EigenVector3d(this-&gt;primaryScStatesBuffer.r_BN_N);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>in<sp/>the<sp/>spacecraft<sp/>state<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scRead;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!this-&gt;<ref refid="class_spacecraft_location_1aae7d3e1a59856c8d0a2ba1db5dce8c97" kindref="member">scStateInMsgs</ref>.empty())</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scRead<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>this-&gt;<ref refid="class_spacecraft_location_1aae7d3e1a59856c8d0a2ba1db5dce8c97" kindref="member">scStateInMsgs</ref>.size();<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scMsg<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_location_1aae7d3e1a59856c8d0a2ba1db5dce8c97" kindref="member">scStateInMsgs</ref>.at(c)();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scRead<sp/>=<sp/>scRead<sp/>&amp;&amp;<sp/>this-&gt;<ref refid="class_spacecraft_location_1aae7d3e1a59856c8d0a2ba1db5dce8c97" kindref="member">scStateInMsgs</ref>.at(c).isWritten();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;scStatesBuffer.push_back(scMsg);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spacecraft_location_1a9376c74221c9e8a294e4e3ad052324c8" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Spacecraft<sp/>location<sp/>has<sp/>no<sp/>other<sp/>spacecraft<sp/>to<sp/>track.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scRead<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>planetRead<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_spacecraft_location_1a8d8ec7f181ff7dc64d1a8049d95ffc66" kindref="member">planetInMsg</ref>.isLinked())</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planetRead<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_location_1a8d8ec7f181ff7dc64d1a8049d95ffc66" kindref="member">planetInMsg</ref>.isWritten();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;planetState<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_location_1a8d8ec7f181ff7dc64d1a8049d95ffc66" kindref="member">planetInMsg</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(planetRead<sp/>&amp;&amp;<sp/>scRead);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_location_1a9c5eadb9a0a2bda33909d2232ac14b49" kindref="member">SpacecraftLocation::WriteMessages</ref>(uint64_t<sp/>CurrentClock)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c=0;<sp/>c&lt;<sp/>this-&gt;accessMsgBuffer.size();<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_location_1af0af040058fee4c026abc23790c09e02" kindref="member">accessOutMsgs</ref>.at(c)-&gt;write(&amp;this-&gt;accessMsgBuffer.at(c),<sp/>this-&gt;moduleID,<sp/>CurrentClock);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpacecraftLocation::computeAccess()</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_LP_P;<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>planet<sp/>position<sp/>and<sp/>orientation<sp/>relative<sp/>to<sp/>inertial<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;dcm_PN<sp/>=<sp/>cArray2EigenMatrix3d(*this-&gt;planetState.J20002Pfix);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;r_PN_N<sp/>=<sp/>cArray2EigenVector3d(this-&gt;planetState.PositionVector);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>primary<sp/>spacecraft<sp/>relative<sp/>to<sp/>planet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigma_BN<sp/>=<sp/>cArray2EigenMRPd(this-&gt;primaryScStatesBuffer.sigma_BN);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_NB<sp/>=<sp/>sigma_BN.toRotationMatrix();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>r_LP_P<sp/>=<sp/>this-&gt;dcm_PN<sp/>*<sp/>(this-&gt;r_BN_N<sp/>+<sp/>dcm_NB<sp/>*<sp/>this-&gt;<ref refid="class_spacecraft_location_1a3b1e1d00b9f1e474000d9b654eff91d5" kindref="member">r_LB_B</ref><sp/>-<sp/>this-&gt;r_PN_N);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>affine<sp/>scaling<sp/>to<sp/>map<sp/>ellipsoid<sp/>to<sp/>sphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>r_LP_P[2]<sp/>=<sp/>r_LP_P[2]<sp/>*<sp/>this-&gt;zScale;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>other<sp/>spacecraft<sp/>positions<sp/>relative<sp/>to<sp/>planet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c=0;<sp/>c<sp/>&lt;<sp/>this-&gt;<ref refid="class_spacecraft_location_1aae7d3e1a59856c8d0a2ba1db5dce8c97" kindref="member">scStateInMsgs</ref>.size();<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_SN_N;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>satellite<sp/>position<sp/>relative<sp/>to<sp/>inertial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_SP_P;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>satellite<sp/>position<sp/>relative<sp/>to<sp/>planet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_SL_P;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>satellite<sp/>position<sp/>relative<sp/>to<sp/>primary<sp/>spacecraft<sp/>location<sp/>L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_SN_N<sp/>=<sp/>cArray2EigenVector3d(this-&gt;scStatesBuffer.at(c).r_BN_N);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_SP_P<sp/>=<sp/>this-&gt;dcm_PN<sp/>*<sp/>(r_SN_N<sp/>-<sp/>this-&gt;r_PN_N);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>affine<sp/>scaling<sp/>to<sp/>map<sp/>ellipsoid<sp/>to<sp/>sphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_SP_P[2]<sp/>=<sp/>r_SP_P[2]<sp/>*<sp/>this-&gt;zScale;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_SL_P<sp/>=<sp/>r_SP_P<sp/>-<sp/>r_LP_P;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>point<sp/>of<sp/>closest<sp/>approach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>param;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>scaling<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=<sp/>-<sp/>r_LP_P.dot(r_SL_P)/r_SL_P.dot(r_SL_P);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rClose<sp/>=<sp/>r_LP_P<sp/>+<sp/>param<sp/>*<sp/>r_SL_P;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>out<sp/>of<sp/>bounds<sp/>condition.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=<sp/>std::min(param,<sp/>1.0);<sp/></highlight><highlight class="comment">//<sp/>If<sp/>param<sp/>&gt;<sp/>1,<sp/>the<sp/>closest<sp/>point<sp/>on<sp/>segment<sp/>is<sp/>the<sp/>other<sp/>satellite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param<sp/>=<sp/>std::max(param,<sp/>0.0);<sp/></highlight><highlight class="comment">//<sp/>If<sp/>param<sp/>&lt;<sp/>0,<sp/>the<sp/>closest<sp/>point<sp/>on<sp/>segment<sp/>is<sp/>the<sp/>primary<sp/>satellite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>access<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;accessMsgBuffer.at(c)<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_location_1af0af040058fee4c026abc23790c09e02" kindref="member">accessOutMsgs</ref>.at(c)-&gt;zeroMsgPayload;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rClose.norm()<sp/>&gt;<sp/>this-&gt;rEquator)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_SL_P[2]<sp/>=<sp/>r_SL_P[2]<sp/>/<sp/>this-&gt;zScale;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>range<sp/>=<sp/>r_SL_P.norm();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;accessMsgBuffer.at(c).slantRange<sp/>=<sp/>range;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;accessMsgBuffer.at(c).hasAccess<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>out<sp/>of<sp/>range<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spacecraft_location_1a91fbdd6ef9021dd2dc6e2c0e0d348c40" kindref="member">maximumRange</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>range<sp/>&gt;<sp/>this-&gt;<ref refid="class_spacecraft_location_1a91fbdd6ef9021dd2dc6e2c0e0d348c40" kindref="member">maximumRange</ref>)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;accessMsgBuffer.at(c).hasAccess<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>other<sp/>spacecraft<sp/>is<sp/>within<sp/>sensor/communication<sp/>boresight<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spacecraft_location_1a51459ea0105a078fa2f711529d934a00" kindref="member">theta</ref><sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>aHat_P;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sensor<sp/>axis<sp/>in<sp/>planet<sp/>frame<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>angle<sp/>between<sp/>relative<sp/>positin<sp/>vector<sp/>and<sp/>aHat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aHat_P<sp/>=<sp/>this-&gt;dcm_PN<sp/>*<sp/>dcm_NB<sp/>*<sp/>this-&gt;<ref refid="class_spacecraft_location_1abc99c836f7cb0ff41817a2d629125f05" kindref="member">aHat_B</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>safeAcos(r_SL_P.dot(aHat_P)<sp/>/<sp/>range);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;accessMsgBuffer.at(c).elevation<sp/>=<sp/>M_PI_2<sp/>-<sp/>phi;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phi<sp/>&gt;<sp/>this-&gt;<ref refid="class_spacecraft_location_1a51459ea0105a078fa2f711529d934a00" kindref="member">theta</ref>)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>spacecraft<sp/>is<sp/>outside<sp/>the<sp/>cone<sp/>field<sp/>of<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;accessMsgBuffer.at(c).hasAccess<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_location_1a3b6b47c002de413828bfc5f2205b48ed" kindref="member">SpacecraftLocation::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_location_1ae691c1c94f731db9ae8f9a74a110bfc2" kindref="member">ReadMessages</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;computeAccess();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_location_1a9c5eadb9a0a2bda33909d2232ac14b49" kindref="member">WriteMessages</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/environment/spacecraftLocation/spacecraftLocation.cpp"/>
  </compounddef>
</doxygen>
