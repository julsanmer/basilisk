<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="orb_elem_convert_8cpp" kind="file" language="C++">
    <compoundname>orbElemConvert.cpp</compoundname>
    <includes refid="orb_elem_convert_8h" local="yes">simulation/dynamics/DynOutput/orbElemConvert/orbElemConvert.h</includes>
    <includes local="no">cstring</includes>
    <includes local="no">iostream</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/dynamics/DynOutput/orbElemConvert/orbElemConvert.cpp</label>
        <link refid="orb_elem_convert_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>simulation/dynamics/DynOutput/orbElemConvert/orbElemConvert.h</label>
        <link refid="orb_elem_convert_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="8">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="7">
        <label>architecture/msgPayloadDefC/ClassicElementsMsgPayload.h</label>
      </node>
      <node id="5">
        <label>architecture/msgPayloadDefC/SCStatesMsgPayload.h</label>
      </node>
      <node id="6">
        <label>architecture/msgPayloadDefC/SpicePlanetStateMsgPayload.h</label>
      </node>
      <node id="10">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="13">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="9">
        <label>architecture/utilities/orbitalMotion.h</label>
      </node>
      <node id="11">
        <label>cstring</label>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;simulation/dynamics/DynOutput/orbElemConvert/orbElemConvert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="class_orb_elem_convert_1a1afdb0ef93724ae4b648e499a202f61c" kindref="member">OrbElemConvert::OrbElemConvert</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="class_orb_elem_convert_1a10edea2845612edaf3bd1b241be9d7d4" kindref="member">OrbElemConvert::~OrbElemConvert</ref>()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orb_elem_convert_1aadfc15178ecc34fc6f6a6000042a94e5" kindref="member">OrbElemConvert::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInputs<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numOutputs<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>numInputs<sp/>+=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1aa23d02338726cca0122d3c969b02e8c9" kindref="member">scStateInMsg</ref>.isLinked();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>numInputs<sp/>+=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1af415dc325cf5a62e6cde24f604eeb865" kindref="member">spiceStateInMsg</ref>.isLinked();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>numInputs<sp/>+=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1a0ddd91a04f38613f1f308c9fa268bf9b" kindref="member">elemInMsg</ref>.isLinked();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>numOutputs<sp/>+=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1a65637091ea57c296a1e7f4b656f502ac" kindref="member">scStateOutMsg</ref>.isLinked();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>numOutputs<sp/>+=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1a3d418afc3d44ec9fed0e9e7ed7051621" kindref="member">spiceStateOutMsg</ref>.isLinked();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>numOutputs<sp/>+=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1a59665a042ef5d83f174d375508830bde" kindref="member">elemOutMsg</ref>.isLinked();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numInputs<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bskLogger.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>input<sp/>message<sp/>was<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numOutputs<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bskLogger.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>output<sp/>message<sp/>was<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numInputs<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bskLogger.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Found<sp/>%d<sp/>input<sp/>messages.<sp/><sp/>There<sp/>can<sp/>be<sp/>only<sp/>one.&quot;</highlight><highlight class="normal">,<sp/>numInputs);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orb_elem_convert_1adcfc99158c04d507f07d46eb6767dab6" kindref="member">OrbElemConvert::WriteOutputMessages</ref>(uint64_t<sp/>CurrentClock)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_orb_elem_convert_1a59665a042ef5d83f174d375508830bde" kindref="member">elemOutMsg</ref>.isLinked()<sp/>&amp;&amp;<sp/>this-&gt;inputsGood)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_orb_elem_convert_1a59665a042ef5d83f174d375508830bde" kindref="member">elemOutMsg</ref>.write(&amp;this-&gt;<ref refid="class_orb_elem_convert_1adc276f19b06155de13ef83d2e6c79bce" kindref="member">CurrentElem</ref>,<sp/>this-&gt;moduleID,<sp/>CurrentClock);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_orb_elem_convert_1a65637091ea57c296a1e7f4b656f502ac" kindref="member">scStateOutMsg</ref>.isLinked()<sp/>&amp;&amp;<sp/>this-&gt;inputsGood)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCStatesMsgPayload<sp/>scMsg;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scMsg<sp/>=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1a65637091ea57c296a1e7f4b656f502ac" kindref="member">scStateOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(this-&gt;<ref refid="class_orb_elem_convert_1ac1b1757df27331fb8a4e4b02a914f981" kindref="member">r_N</ref>,<sp/>scMsg.r_BN_N);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(this-&gt;<ref refid="class_orb_elem_convert_1ac662af8d973277473c25146dfdcb87eb" kindref="member">v_N</ref>,<sp/>scMsg.v_BN_N);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_orb_elem_convert_1a65637091ea57c296a1e7f4b656f502ac" kindref="member">scStateOutMsg</ref>.write(&amp;scMsg,<sp/>this-&gt;moduleID,<sp/>CurrentClock);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_orb_elem_convert_1a3d418afc3d44ec9fed0e9e7ed7051621" kindref="member">spiceStateOutMsg</ref>.isLinked()<sp/>&amp;&amp;<sp/>this-&gt;inputsGood)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpicePlanetStateMsgPayload<sp/>spiceMsg;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spiceMsg<sp/>=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1a3d418afc3d44ec9fed0e9e7ed7051621" kindref="member">spiceStateOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(this-&gt;<ref refid="class_orb_elem_convert_1ac1b1757df27331fb8a4e4b02a914f981" kindref="member">r_N</ref>,<sp/>spiceMsg.PositionVector);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(this-&gt;<ref refid="class_orb_elem_convert_1ac662af8d973277473c25146dfdcb87eb" kindref="member">v_N</ref>,<sp/>spiceMsg.VelocityVector);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_orb_elem_convert_1a3d418afc3d44ec9fed0e9e7ed7051621" kindref="member">spiceStateOutMsg</ref>.write(&amp;spiceMsg,<sp/>this-&gt;moduleID,<sp/>CurrentClock);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orb_elem_convert_1ae07e2fe1ef81e831ea9cc96930e58e20" kindref="member">OrbElemConvert::Elements2Cartesian</ref>()</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>elem2rv(<ref refid="class_orb_elem_convert_1abc821b629f6bda3de4f3453af6d473ae" kindref="member">mu</ref>,<sp/>&amp;<ref refid="class_orb_elem_convert_1adc276f19b06155de13ef83d2e6c79bce" kindref="member">CurrentElem</ref>,<sp/><ref refid="class_orb_elem_convert_1ac1b1757df27331fb8a4e4b02a914f981" kindref="member">r_N</ref>,<sp/><ref refid="class_orb_elem_convert_1ac662af8d973277473c25146dfdcb87eb" kindref="member">v_N</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orb_elem_convert_1a458f988c160d93e6ba67f856463e6072" kindref="member">OrbElemConvert::Cartesian2Elements</ref>()</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>rv2elem(<ref refid="class_orb_elem_convert_1abc821b629f6bda3de4f3453af6d473ae" kindref="member">mu</ref>,<sp/><ref refid="class_orb_elem_convert_1ac1b1757df27331fb8a4e4b02a914f981" kindref="member">r_N</ref>,<sp/><ref refid="class_orb_elem_convert_1ac662af8d973277473c25146dfdcb87eb" kindref="member">v_N</ref>,<sp/>&amp;<ref refid="class_orb_elem_convert_1adc276f19b06155de13ef83d2e6c79bce" kindref="member">CurrentElem</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orb_elem_convert_1a12cc9f3c61e7fb8227053b6859293cef" kindref="member">OrbElemConvert::ReadInputs</ref>()</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;inputsGood<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_orb_elem_convert_1a0ddd91a04f38613f1f308c9fa268bf9b" kindref="member">elemInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_orb_elem_convert_1adc276f19b06155de13ef83d2e6c79bce" kindref="member">CurrentElem</ref><sp/>=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1a0ddd91a04f38613f1f308c9fa268bf9b" kindref="member">elemInMsg</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;inputsGood<sp/>=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1a0ddd91a04f38613f1f308c9fa268bf9b" kindref="member">elemInMsg</ref>.isWritten();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_orb_elem_convert_1aa23d02338726cca0122d3c969b02e8c9" kindref="member">scStateInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_orb_elem_convert_1adb4f24e3b2705a71252e51951ff2875f" kindref="member">statesIn</ref><sp/>=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1aa23d02338726cca0122d3c969b02e8c9" kindref="member">scStateInMsg</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;inputsGood<sp/>=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1aa23d02338726cca0122d3c969b02e8c9" kindref="member">scStateInMsg</ref>.isWritten();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(this-&gt;<ref refid="class_orb_elem_convert_1adb4f24e3b2705a71252e51951ff2875f" kindref="member">statesIn</ref>.r_BN_N,<sp/>this-&gt;r_N);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(this-&gt;<ref refid="class_orb_elem_convert_1adb4f24e3b2705a71252e51951ff2875f" kindref="member">statesIn</ref>.v_BN_N,<sp/>this-&gt;v_N);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_orb_elem_convert_1af415dc325cf5a62e6cde24f604eeb865" kindref="member">spiceStateInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_orb_elem_convert_1a409cd14b17677ac4a22a85e4837aaa36" kindref="member">planetIn</ref><sp/>=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1af415dc325cf5a62e6cde24f604eeb865" kindref="member">spiceStateInMsg</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;inputsGood<sp/>=<sp/>this-&gt;<ref refid="class_orb_elem_convert_1af415dc325cf5a62e6cde24f604eeb865" kindref="member">spiceStateInMsg</ref>.isWritten();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(this-&gt;<ref refid="class_orb_elem_convert_1a409cd14b17677ac4a22a85e4837aaa36" kindref="member">planetIn</ref>.PositionVector,<sp/>this-&gt;r_N);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(this-&gt;<ref refid="class_orb_elem_convert_1a409cd14b17677ac4a22a85e4837aaa36" kindref="member">planetIn</ref>.VelocityVector,<sp/>this-&gt;v_N);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orb_elem_convert_1a88e251f8d5f11b886ec083f59fa55e69" kindref="member">OrbElemConvert::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_orb_elem_convert_1a12cc9f3c61e7fb8227053b6859293cef" kindref="member">ReadInputs</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_orb_elem_convert_1a0ddd91a04f38613f1f308c9fa268bf9b" kindref="member">elemInMsg</ref>.isLinked()<sp/>&amp;&amp;<sp/>inputsGood)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orb_elem_convert_1ae07e2fe1ef81e831ea9cc96930e58e20" kindref="member">Elements2Cartesian</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(inputsGood)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orb_elem_convert_1a458f988c160d93e6ba67f856463e6072" kindref="member">Cartesian2Elements</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_orb_elem_convert_1adcfc99158c04d507f07d46eb6767dab6" kindref="member">WriteOutputMessages</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/DynOutput/orbElemConvert/orbElemConvert.cpp"/>
  </compounddef>
</doxygen>
