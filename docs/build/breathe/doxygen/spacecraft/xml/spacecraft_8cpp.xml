<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="spacecraft_8cpp" kind="file" language="C++">
    <compoundname>spacecraft.cpp</compoundname>
    <includes refid="spacecraft_8h" local="yes">spacecraft.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="yes">../_GeneralModuleFiles/svIntegratorRK4.h</includes>
    <includes local="yes">architecture/utilities/avsEigenSupport.h</includes>
    <includes local="yes">architecture/utilities/avsEigenMRP.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="16">
        <label>../_GeneralModuleFiles/hubEffector.h</label>
      </node>
      <node id="20">
        <label>../_GeneralModuleFiles/svIntegratorRK4.h</label>
      </node>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/dynamics/spacecraft/spacecraft.cpp</label>
        <link refid="spacecraft_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>spacecraft.h</label>
        <link refid="spacecraft_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="18">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="14">
        <label>architecture/msgPayloadDefC/AttRefMsgPayload.h</label>
      </node>
      <node id="13">
        <label>architecture/msgPayloadDefC/SCMassPropsMsgPayload.h</label>
      </node>
      <node id="12">
        <label>architecture/msgPayloadDefC/SCStatesMsgPayload.h</label>
      </node>
      <node id="15">
        <label>architecture/msgPayloadDefC/TransRefMsgPayload.h</label>
      </node>
      <node id="22">
        <label>architecture/utilities/avsEigenMRP.h</label>
      </node>
      <node id="21">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="17">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="19">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="23">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>simulation/dynamics/_GeneralModuleFiles/dynParamManager.h</label>
      </node>
      <node id="7">
        <label>simulation/dynamics/_GeneralModuleFiles/dynamicEffector.h</label>
      </node>
      <node id="9">
        <label>simulation/dynamics/_GeneralModuleFiles/dynamicObject.h</label>
      </node>
      <node id="8">
        <label>simulation/dynamics/_GeneralModuleFiles/gravityEffector.h</label>
      </node>
      <node id="6">
        <label>simulation/dynamics/_GeneralModuleFiles/stateEffector.h</label>
      </node>
      <node id="10">
        <label>simulation/dynamics/_GeneralModuleFiles/stateVecIntegrator.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spacecraft.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../_GeneralModuleFiles/svIntegratorRK4.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenSupport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenMRP.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="class_spacecraft_1a93c3e7d6d270c6efd9bec0f9229e688a" kindref="member">Spacecraft::Spacecraft</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>default<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a52e4a7145ca537e82b534d259124a1cd" kindref="member">sysTimePropertyName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;systemTime&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>values<sp/>to<sp/>either<sp/>zero<sp/>or<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a2d106becdd232562b877c4c13c8ada48" kindref="member">currTimeStep</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1afabcf550ebad0f6a322a413c04311458" kindref="member">timePrevious</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a2cf1991fd6046630656c5686cd403207" kindref="member">simTimePrevious</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1adf6f33831060a77550c82e58f03758e6" kindref="member">dvAccum_CN_B</ref>.setZero();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a52a55e41c02a99108d31e80fc30d15d1" kindref="member">dvAccum_BN_B</ref>.setZero();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>integrator<sp/>as<sp/>RK4<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;integrator<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>svIntegratorRK4(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="class_spacecraft_1ac0e87c9c8fae261371f401895e428f96" kindref="member">Spacecraft::~Spacecraft</ref>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_1a3ce76026a7a2b9e2ff055a356b89c43f" kindref="member">Spacecraft::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a799d5a5eca86ce46626dd2c8007d631e" kindref="member">gravField</ref>.Reset(CurrentSimNanos);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>method<sp/>for<sp/>initializing<sp/>the<sp/>dynamics<sp/>of<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a819a219985ea44109e2d13d3358a01c2" kindref="member">initializeDynamics</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>initial<sp/>spacecraft<sp/>states<sp/>relative<sp/>to<sp/>inertial<sp/>frame,<sp/>taking<sp/>into<sp/>account<sp/>initial<sp/>sc<sp/>states<sp/>might<sp/>be<sp/>defined<sp/>relative<sp/>to<sp/>a<sp/>planet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a799d5a5eca86ce46626dd2c8007d631e" kindref="member">gravField</ref>.updateInertialPosAndVel(this-&gt;hubR_N-&gt;getState(),<sp/>this-&gt;hubV_N-&gt;getState());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1abbd07242efc017d284d26e4706904045" kindref="member">writeOutputStateMessages</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>over<sp/>stateEffectors<sp/>to<sp/>call<sp/>writeOutputStateMessages<sp/>and<sp/>write<sp/>initial<sp/>state<sp/>output<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>writeOutputStateMessages<sp/>for<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;writeOutputStateMessages(CurrentSimNanos);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_1a075d7ad4c47a3391dfc5593282b6119a" kindref="member">Spacecraft::addStateEffector</ref>(StateEffector<sp/>*newStateEffector)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.push_back(newStateEffector);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_1a40b0af2b1ba9da6b85834cbbde9ebea6" kindref="member">Spacecraft::addDynamicEffector</ref>(DynamicEffector<sp/>*newDynamicEffector)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a1b7d69d6ada5070853057df6b1041850" kindref="member">dynEffectors</ref>.push_back(newDynamicEffector);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_1abbd07242efc017d284d26e4706904045" kindref="member">Spacecraft::writeOutputStateMessages</ref>(uint64_t<sp/>clockTime)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Populate<sp/>state<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>SCStatesMsgPayload<sp/>stateOut;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>stateOut<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a55745cd6d8da59f9b061d3b25be7cfb5" kindref="member">scStateOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(*this-&gt;inertialPositionProperty,<sp/>stateOut.r_BN_N);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(*this-&gt;inertialVelocityProperty,<sp/>stateOut.v_BN_N);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigmaLocal_BN;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaLocal_BN<sp/>=<sp/>(Eigen::Vector3d)<sp/>this-&gt;hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_NB<sp/>=<sp/>sigmaLocal_BN.toRotationMatrix();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rLocal_CN_N<sp/>=<sp/>(*this-&gt;inertialPositionProperty)<sp/>+<sp/>dcm_NB*(*this-&gt;c_B);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>vLocal_CN_N<sp/>=<sp/>(*this-&gt;inertialVelocityProperty)<sp/>+<sp/>dcm_NB*(*this-&gt;cDot_B);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(rLocal_CN_N,<sp/>stateOut.r_CN_N);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(vLocal_CN_N,<sp/>stateOut.v_CN_N);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(this-&gt;hubSigma-&gt;getState(),<sp/>stateOut.sigma_BN);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(this-&gt;hubOmega_BN_B-&gt;getState(),<sp/>stateOut.omega_BN_B);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(this-&gt;<ref refid="class_spacecraft_1adf6f33831060a77550c82e58f03758e6" kindref="member">dvAccum_CN_B</ref>,<sp/>stateOut.TotalAccumDVBdy);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>stateOut.MRPSwitchCount<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.MRPSwitchCount;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(this-&gt;<ref refid="class_spacecraft_1a52a55e41c02a99108d31e80fc30d15d1" kindref="member">dvAccum_BN_B</ref>,<sp/>stateOut.TotalAccumDV_BN_B);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;<ref refid="class_spacecraft_1ac056bf8c133de42d5cddad2e12fd4e43" kindref="member">nonConservativeAccelpntB_B</ref>,<sp/>stateOut.nonConservativeAccelpntB_B);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;<ref refid="class_spacecraft_1a12ccb1833b06ce68822c902c3e66de1d" kindref="member">omegaDot_BN_B</ref>,<sp/>stateOut.omegaDot_BN_B);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a55745cd6d8da59f9b061d3b25be7cfb5" kindref="member">scStateOutMsg</ref>.write(&amp;stateOut,<sp/>this-&gt;moduleID,<sp/>clockTime);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Populate<sp/>mass<sp/>state<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>SCMassPropsMsgPayload<sp/>massStateOut;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>massStateOut<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a47090e8cc94c59416af05cf0ff1c1201" kindref="member">scMassOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>massStateOut.massSC<sp/>=<sp/>(*this-&gt;m_SC)(0,0);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(*this-&gt;c_B,<sp/>massStateOut.c_B);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(*this-&gt;ISCPntB_B,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)massStateOut.ISC_PntB_B);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a47090e8cc94c59416af05cf0ff1c1201" kindref="member">scMassOutMsg</ref>.write(&amp;massStateOut,<sp/>this-&gt;moduleID,<sp/>clockTime);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Spacecraft::readOptionalRefMsg()</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spacecraft_1a92ba594d1d04678dccb4bd4180cb0dee" kindref="member">attRefInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omega_BN_B;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttRefMsgPayload<sp/>attRefMsgBuffer;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attRefMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a92ba594d1d04678dccb4bd4180cb0dee" kindref="member">attRefInMsg</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigma_BN<sp/>=<sp/>cArray2EigenMRPd(attRefMsgBuffer.sigma_RN);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omega_BN_N<sp/>=<sp/>cArray2EigenVector3d(attRefMsgBuffer.omega_RN_N);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_BN<sp/>=<sp/>sigma_BN.toRotationMatrix().transpose();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>omega_BN_B<sp/>=<sp/>dcm_BN<sp/>*<sp/>omega_BN_N;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;hubSigma-&gt;setState(eigenMRPd2Vector3d(sigma_BN));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;hubOmega_BN_B-&gt;setState(omega_BN_B);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_spacecraft_1a42bfb24710e5e54a82018dca565c3a7a" kindref="member">transRefInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_RN_N;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>v_RN_N;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TransRefMsgPayload<sp/>transRefMsgBuffer;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transRefMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a42bfb24710e5e54a82018dca565c3a7a" kindref="member">transRefInMsg</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_RN_N<sp/>=<sp/>cArray2EigenVector3d(transRefMsgBuffer.r_RN_N);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_RN_N<sp/>=<sp/>cArray2EigenVector3d(transRefMsgBuffer.v_RN_N);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;hubR_N-&gt;setState(r_RN_N);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;hubV_N-&gt;setState(v_RN_N);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_1abcae3ee68bd5e93f0e5940031b284064" kindref="member">Spacecraft::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Convert<sp/>current<sp/>time<sp/>to<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newTime<sp/>=<sp/>CurrentSimNanos*NANO2SEC;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>access<sp/>to<sp/>the<sp/>spice<sp/>bodies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a799d5a5eca86ce46626dd2c8007d631e" kindref="member">gravField</ref>.UpdateState(CurrentSimNanos);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Integrate<sp/>the<sp/>state<sp/>forward<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;integrateState(newTime);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>set,<sp/>read<sp/>in<sp/>and<sp/>prescribe<sp/>attitude<sp/>reference<sp/>motion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>readOptionalRefMsg();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rLocal_BN_N<sp/>=<sp/>this-&gt;hubR_N-&gt;getState();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>vLocal_BN_N<sp/>=<sp/>this-&gt;hubV_N-&gt;getState();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a799d5a5eca86ce46626dd2c8007d631e" kindref="member">gravField</ref>.updateInertialPosAndVel(rLocal_BN_N,<sp/>vLocal_BN_N);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Write<sp/>the<sp/>state<sp/>of<sp/>the<sp/>vehicle<sp/>into<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1abbd07242efc017d284d26e4706904045" kindref="member">writeOutputStateMessages</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>over<sp/>stateEffectors<sp/>to<sp/>call<sp/>writeOutputStateMessages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>writeOutputStateMessages<sp/>for<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;writeOutputStateMessages(CurrentSimNanos);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a2cf1991fd6046630656c5686cd403207" kindref="member">simTimePrevious</ref><sp/>=<sp/>CurrentSimNanos;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_1a0128fd0c1e6e846a6ef3dc3da092bafc" kindref="member">Spacecraft::linkInStates</ref>(DynParamManager&amp;<sp/>statesIn)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>access<sp/>to<sp/>all<sp/>hub<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hubR_N<sp/>=<sp/>statesIn.getStateObject(</highlight><highlight class="stringliteral">&quot;hubPosition&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hubV_N<sp/>=<sp/>statesIn.getStateObject(</highlight><highlight class="stringliteral">&quot;hubVelocity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hubSigma<sp/>=<sp/>statesIn.getStateObject(</highlight><highlight class="stringliteral">&quot;hubSigma&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Need<sp/>sigmaBN<sp/>for<sp/>MRP<sp/>switching<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hubOmega_BN_B<sp/>=<sp/>statesIn.getStateObject(</highlight><highlight class="stringliteral">&quot;hubOmega&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hubGravVelocity<sp/>=<sp/>statesIn.getStateObject(</highlight><highlight class="stringliteral">&quot;hubGravVelocity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;BcGravVelocity<sp/>=<sp/>statesIn.getStateObject(</highlight><highlight class="stringliteral">&quot;BcGravVelocity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>access<sp/>to<sp/>the<sp/>hubs<sp/>position<sp/>and<sp/>velocity<sp/>in<sp/>the<sp/>property<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;inertialPositionProperty<sp/>=<sp/>statesIn.getPropertyReference(</highlight><highlight class="stringliteral">&quot;r_BN_N&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;inertialVelocityProperty<sp/>=<sp/>statesIn.getPropertyReference(</highlight><highlight class="stringliteral">&quot;v_BN_N&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;g_N<sp/>=<sp/>statesIn.getPropertyReference(</highlight><highlight class="stringliteral">&quot;g_N&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_1a819a219985ea44109e2d13d3358a01c2" kindref="member">Spacecraft::initializeDynamics</ref>()</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Spacecraft<sp/>initiates<sp/>all<sp/>of<sp/>the<sp/>spaceCraft<sp/>mass<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initM_SC(1,1);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initMDot_SC(1,1);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initC_B(3,1);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initISCPntB_B(3,3);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initCPrime_B(3,1);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initCDot_B(3,1);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initISCPntBPrime_B(3,3);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>systemTime(2,1);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>systemTime.setZero();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Create<sp/>the<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_SC<sp/>=<sp/>this-&gt;dynManager.createProperty(</highlight><highlight class="stringliteral">&quot;m_SC&quot;</highlight><highlight class="normal">,<sp/>initM_SC);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mDot_SC<sp/>=<sp/>this-&gt;dynManager.createProperty(</highlight><highlight class="stringliteral">&quot;mDot_SC&quot;</highlight><highlight class="normal">,<sp/>initMDot_SC);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;c_B<sp/>=<sp/>this-&gt;dynManager.createProperty(</highlight><highlight class="stringliteral">&quot;centerOfMassSC&quot;</highlight><highlight class="normal">,<sp/>initC_B);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ISCPntB_B<sp/>=<sp/>this-&gt;dynManager.createProperty(</highlight><highlight class="stringliteral">&quot;inertiaSC&quot;</highlight><highlight class="normal">,<sp/>initISCPntB_B);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ISCPntBPrime_B<sp/>=<sp/>this-&gt;dynManager.createProperty(</highlight><highlight class="stringliteral">&quot;inertiaPrimeSC&quot;</highlight><highlight class="normal">,<sp/>initISCPntBPrime_B);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cPrime_B<sp/>=<sp/>this-&gt;dynManager.createProperty(</highlight><highlight class="stringliteral">&quot;centerOfMassPrimeSC&quot;</highlight><highlight class="normal">,<sp/>initCPrime_B);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cDot_B<sp/>=<sp/>this-&gt;dynManager.createProperty(</highlight><highlight class="stringliteral">&quot;centerOfMassDotSC&quot;</highlight><highlight class="normal">,<sp/>initCDot_B);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sysTime<sp/>=<sp/>this-&gt;dynManager.createProperty(this-&gt;<ref refid="class_spacecraft_1a52e4a7145ca537e82b534d259124a1cd" kindref="member">sysTimePropertyName</ref>,<sp/>systemTime);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Register<sp/>the<sp/>gravity<sp/>properties<sp/>with<sp/>the<sp/>dynManager,<sp/>&apos;erbody<sp/>wants<sp/>g_N!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a799d5a5eca86ce46626dd2c8007d631e" kindref="member">gravField</ref>.registerProperties(this-&gt;dynManager);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Register<sp/>the<sp/>hub<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.registerStates(this-&gt;dynManager);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>stateEffectors<sp/>to<sp/>register<sp/>their<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>stateIt;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(stateIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.begin();<sp/>stateIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.end();<sp/>stateIt++)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*stateIt)-&gt;registerStates(this-&gt;dynManager);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Link<sp/>in<sp/>states<sp/>for<sp/>the<sp/>Spacecraft,<sp/>gravity<sp/>and<sp/>the<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a0128fd0c1e6e846a6ef3dc3da092bafc" kindref="member">linkInStates</ref>(this-&gt;dynManager);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a799d5a5eca86ce46626dd2c8007d631e" kindref="member">gravField</ref>.linkInStates(this-&gt;dynManager);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.linkInStates(this-&gt;dynManager);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Update<sp/>the<sp/>mass<sp/>properties<sp/>of<sp/>the<sp/>spacecraft<sp/>to<sp/>retrieve<sp/>c_B<sp/>and<sp/>cDot_B<sp/>to<sp/>update<sp/>r_BN_N<sp/>and<sp/>v_BN_N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1abcfb214fd2cafa7456286e263df0f1f2" kindref="member">updateSCMassProps</ref>(0.0);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Edit<sp/>r_BN_N<sp/>and<sp/>v_BN_N<sp/>to<sp/>take<sp/>into<sp/>account<sp/>that<sp/>point<sp/>B<sp/>and<sp/>point<sp/>C<sp/>are<sp/>not<sp/>coincident</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Pulling<sp/>the<sp/>state<sp/>from<sp/>the<sp/>hub<sp/>at<sp/>this<sp/>time<sp/>gives<sp/>us<sp/>r_CN_N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rInit_BN_N<sp/>=<sp/>this-&gt;hubR_N-&gt;getState();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigma_BN;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>sigma_BN<sp/>=<sp/>(Eigen::Vector3d)<sp/>this-&gt;hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_NB<sp/>=<sp/>sigma_BN.toRotationMatrix();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Substract<sp/>off<sp/>the<sp/>center<sp/>mass<sp/>to<sp/>leave<sp/>r_BN_N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>rInit_BN_N<sp/>-=<sp/>dcm_NB*(*this-&gt;c_B);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Subtract<sp/>off<sp/>cDot_B<sp/>to<sp/>get<sp/>v_BN_N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>vInit_BN_N<sp/>=<sp/>this-&gt;hubV_N-&gt;getState();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>vInit_BN_N<sp/>-=<sp/>dcm_NB*(*this-&gt;cDot_B);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Finally<sp/>set<sp/>the<sp/>translational<sp/>states<sp/>r_BN_N<sp/>and<sp/>v_BN_N<sp/>with<sp/>the<sp/>corrections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hubR_N-&gt;setState(rInit_BN_N);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hubV_N-&gt;setState(vInit_BN_N);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>the<sp/>stateEffectros<sp/>to<sp/>link<sp/>in<sp/>the<sp/>states<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(stateIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.begin();<sp/>stateIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.end();<sp/>stateIt++)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*stateIt)-&gt;linkInStates(this-&gt;dynManager);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>the<sp/>dynamicEffectors<sp/>to<sp/>link<sp/>in<sp/>the<sp/>states<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DynamicEffector*&gt;::iterator<sp/>dynIt;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dynIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a1b7d69d6ada5070853057df6b1041850" kindref="member">dynEffectors</ref>.begin();<sp/>dynIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_1a1b7d69d6ada5070853057df6b1041850" kindref="member">dynEffectors</ref>.end();<sp/>dynIt++)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*dynIt)-&gt;linkInStates(this-&gt;dynManager);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>set,<sp/>read<sp/>in<sp/>and<sp/>prescribe<sp/>attitude<sp/>reference<sp/>motion<sp/>as<sp/>initial<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>readOptionalRefMsg();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>equations<sp/>of<sp/>motion<sp/>at<sp/>time<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a92a08390765d30462807161656a9785b" kindref="member">equationsOfMotion</ref>(0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_1abcfb214fd2cafa7456286e263df0f1f2" kindref="member">Spacecraft::updateSCMassProps</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Zero<sp/>the<sp/>properties<sp/>which<sp/>will<sp/>get<sp/>populated<sp/>in<sp/>this<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;m_SC).setZero();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;mDot_SC).setZero();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;c_B).setZero();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;ISCPntB_B).setZero();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;cPrime_B).setZero();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;cDot_B).setZero();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;ISCPntBPrime_B).setZero();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>in<sp/>hubs<sp/>mass<sp/>props<sp/>to<sp/>the<sp/>spacecraft<sp/>mass<sp/>props</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.updateEffectorMassProps(time);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;m_SC)(0,0)<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.effProps.mEff;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;ISCPntB_B)<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.effProps.IEffPntB_B;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;c_B)<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.effProps.mEff*this-&gt;hub.effProps.rEff_CB_B;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>state<sp/>effectors<sp/>to<sp/>get<sp/>mass<sp/>props</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;updateEffectorMassProps(time);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Add<sp/>in<sp/>effectors<sp/>mass<sp/>props<sp/>into<sp/>mass<sp/>props<sp/>of<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;m_SC)(0,0)<sp/>+=<sp/>(*it)-&gt;effProps.mEff;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;mDot_SC)(0,0)<sp/>+=<sp/>(*it)-&gt;effProps.mEffDot;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;ISCPntB_B)<sp/>+=<sp/>(*it)-&gt;effProps.IEffPntB_B;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;c_B)<sp/>+=<sp/>(*it)-&gt;effProps.mEff*(*it)-&gt;effProps.rEff_CB_B;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;ISCPntBPrime_B)<sp/>+=<sp/>(*it)-&gt;effProps.IEffPrimePntB_B;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;cPrime_B)<sp/>+=<sp/>(*it)-&gt;effProps.mEff*(*it)-&gt;effProps.rEffPrime_CB_B;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>high<sp/>fidelity<sp/>mass<sp/>depletion,<sp/>this<sp/>is<sp/>left<sp/>out:<sp/>+=<sp/>(*it)-&gt;effProps.mEffDot*(*it)-&gt;effProps.rEff_CB_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Divide<sp/>c_B<sp/>and<sp/>cPrime_B<sp/>by<sp/>the<sp/>total<sp/>mass<sp/>of<sp/>the<sp/>spaceCraft<sp/>to<sp/>finalize<sp/>c_B<sp/>and<sp/>cPrime_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;c_B)<sp/>=<sp/>(*this-&gt;c_B)/(*this-&gt;m_SC)(0,0);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;cPrime_B)<sp/>=<sp/>(*this-&gt;cPrime_B)/(*this-&gt;m_SC)(0,0)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(*this-&gt;mDot_SC)(0,0)*(*this-&gt;c_B)/(*this-&gt;m_SC)(0,0)/(*this-&gt;m_SC)(0,0);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaLocal_BN_B<sp/>=<sp/>hubOmega_BN_B-&gt;getState();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cLocal_B<sp/>=<sp/>(*this-&gt;c_B);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;cDot_B)<sp/>=<sp/>(*this-&gt;cPrime_B)<sp/>+<sp/>omegaLocal_BN_B.cross(cLocal_B);</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_1a92a08390765d30462807161656a9785b" kindref="member">Spacecraft::equationsOfMotion</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTimeSeconds,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeStep)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Update<sp/>time<sp/>to<sp/>the<sp/>current<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>integTimeNanos<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a2cf1991fd6046630656c5686cd403207" kindref="member">simTimePrevious</ref><sp/>+<sp/>(uint64_t)<sp/>((integTimeSeconds-this-&gt;<ref refid="class_spacecraft_1afabcf550ebad0f6a322a413c04311458" kindref="member">timePrevious</ref>)/NANO2SEC);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;sysTime)<sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>integTimeNanos,<sp/>integTimeSeconds;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Zero<sp/>all<sp/>Matrices<sp/>and<sp/>vectors<sp/>for<sp/>back-sub<sp/>and<sp/>the<sp/>dynamics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.matrixA.setZero();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.matrixB.setZero();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.matrixC.setZero();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.matrixD.setZero();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.vecTrans.setZero();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.vecRot.setZero();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1ae6648e0069c33bb766cb30988a7fffbb" kindref="member">sumForceExternal_B</ref>.setZero();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1ade6a699a8be7d2ffb2f2f35d58cd8056" kindref="member">sumForceExternal_N</ref>.setZero();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1af724193f9c8beb47b6dbfe892cceef2f" kindref="member">sumTorquePntB_B</ref>.setZero();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Update<sp/>the<sp/>mass<sp/>properties<sp/>of<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1abcfb214fd2cafa7456286e263df0f1f2" kindref="member">updateSCMassProps</ref>(integTimeSeconds);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>This<sp/>is<sp/>where<sp/>gravity<sp/>is<sp/>computed<sp/>(gravity<sp/>needs<sp/>to<sp/>know<sp/>c_B<sp/>to<sp/>calculated<sp/>gravity<sp/>about<sp/>r_CN_N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigmaBNLoc;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_NB;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cLocal_N;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaBNLoc<sp/>=<sp/>(Eigen::Vector3d)<sp/>this-&gt;hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_NB<sp/>=<sp/>sigmaBNLoc.toRotationMatrix();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>cLocal_N<sp/>=<sp/>dcm_NB*(*this-&gt;c_B);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rLocal_CN_N<sp/>=<sp/>this-&gt;hubR_N-&gt;getState()<sp/>+<sp/>dcm_NB*(*this-&gt;c_B);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>vLocal_CN_N<sp/>=<sp/>this-&gt;hubV_N-&gt;getState()<sp/>+<sp/>dcm_NB*(*this-&gt;cDot_B);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a799d5a5eca86ce46626dd2c8007d631e" kindref="member">gravField</ref>.computeGravityField(rLocal_CN_N,<sp/>vLocal_CN_N);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>dynEffectors<sp/>to<sp/>compute<sp/>force<sp/>and<sp/>torque<sp/>on<sp/>the<sp/>s/c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DynamicEffector*&gt;::iterator<sp/>dynIt;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dynIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a1b7d69d6ada5070853057df6b1041850" kindref="member">dynEffectors</ref>.begin();<sp/>dynIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_1a1b7d69d6ada5070853057df6b1041850" kindref="member">dynEffectors</ref>.end();<sp/>dynIt++)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Compute<sp/>the<sp/>force<sp/>and<sp/>torque<sp/>contributions<sp/>from<sp/>the<sp/>dynamicEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*dynIt)-&gt;computeForceTorque(integTimeSeconds,<sp/>timeStep);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1ade6a699a8be7d2ffb2f2f35d58cd8056" kindref="member">sumForceExternal_N</ref><sp/>+=<sp/>(*dynIt)-&gt;forceExternal_N;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1ae6648e0069c33bb766cb30988a7fffbb" kindref="member">sumForceExternal_B</ref><sp/>+=<sp/>(*dynIt)-&gt;forceExternal_B;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1af724193f9c8beb47b6dbfe892cceef2f" kindref="member">sumTorquePntB_B</ref><sp/>+=<sp/>(*dynIt)-&gt;torqueExternalPntB_B;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>state<sp/>effectors<sp/>to<sp/>get<sp/>contributions<sp/>for<sp/>back-substitution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-<sp/>Set<sp/>the<sp/>contribution<sp/>matrices<sp/>to<sp/>zero<sp/>(just<sp/>in<sp/>case<sp/>a<sp/>stateEffector<sp/>+=<sp/>on<sp/>the<sp/>matrix<sp/>or<sp/>the<sp/>stateEffector</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doesn&apos;t<sp/>have<sp/>a<sp/>contribution<sp/>for<sp/>a<sp/>matrix<sp/>and<sp/>doesn&apos;t<sp/>set<sp/>the<sp/>matrix<sp/>to<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8f80ead6314dd52194ee72418187f4ad" kindref="member">backSubContributions</ref>.matrixA.setZero();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8f80ead6314dd52194ee72418187f4ad" kindref="member">backSubContributions</ref>.matrixB.setZero();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8f80ead6314dd52194ee72418187f4ad" kindref="member">backSubContributions</ref>.matrixC.setZero();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8f80ead6314dd52194ee72418187f4ad" kindref="member">backSubContributions</ref>.matrixD.setZero();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8f80ead6314dd52194ee72418187f4ad" kindref="member">backSubContributions</ref>.vecTrans.setZero();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8f80ead6314dd52194ee72418187f4ad" kindref="member">backSubContributions</ref>.vecRot.setZero();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>the<sp/>update<sp/>contributions<sp/>method<sp/>for<sp/>the<sp/>stateEffectors<sp/>and<sp/>add<sp/>in<sp/>contributions<sp/>to<sp/>the<sp/>hub<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;updateContributions(integTimeSeconds,<sp/>this-&gt;<ref refid="class_spacecraft_1a8f80ead6314dd52194ee72418187f4ad" kindref="member">backSubContributions</ref>,<sp/>this-&gt;hubSigma-&gt;getState(),<sp/>this-&gt;hubOmega_BN_B-&gt;getState(),<sp/>*this-&gt;g_N);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.matrixA<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_1a8f80ead6314dd52194ee72418187f4ad" kindref="member">backSubContributions</ref>.matrixA;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.matrixB<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_1a8f80ead6314dd52194ee72418187f4ad" kindref="member">backSubContributions</ref>.matrixB;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.matrixC<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_1a8f80ead6314dd52194ee72418187f4ad" kindref="member">backSubContributions</ref>.matrixC;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.matrixD<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_1a8f80ead6314dd52194ee72418187f4ad" kindref="member">backSubContributions</ref>.matrixD;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.vecTrans<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_1a8f80ead6314dd52194ee72418187f4ad" kindref="member">backSubContributions</ref>.vecTrans;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.vecRot<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_1a8f80ead6314dd52194ee72418187f4ad" kindref="member">backSubContributions</ref>.vecRot;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Finish<sp/>the<sp/>math<sp/>that<sp/>is<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cLocal_B;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cPrimeLocal_B;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>cLocal_B<sp/>=<sp/>*this-&gt;c_B;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>cPrimeLocal_B<sp/>=<sp/>*cPrime_B;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>intermediateMatrix;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>intermediateVector;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaLocalBN_B<sp/>=<sp/>this-&gt;hubOmega_BN_B-&gt;getState();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.matrixA<sp/>+=<sp/>(*this-&gt;m_SC)(0,0)*intermediateMatrix.Identity();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>intermediateMatrix<sp/>=<sp/>eigenTilde((*this-&gt;c_B));<sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>c_B<sp/>skew<sp/>symmetric<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.matrixB<sp/>+=<sp/>-(*this-&gt;m_SC)(0,0)*intermediateMatrix;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.matrixC<sp/>+=<sp/>(*this-&gt;m_SC)(0,0)*intermediateMatrix;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.matrixD<sp/>+=<sp/>*ISCPntB_B;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.vecTrans<sp/>+=<sp/>-2.0*(*this-&gt;m_SC)(0,<sp/>0)*omegaLocalBN_B.cross(cPrimeLocal_B)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>(*this-&gt;m_SC)(0,<sp/>0)*omegaLocalBN_B.cross(omegaLocalBN_B.cross(cLocal_B))</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>2.0*(*mDot_SC)(0,0)*(cPrimeLocal_B+omegaLocalBN_B.cross(cLocal_B));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>intermediateVector<sp/>=<sp/>*ISCPntB_B*omegaLocalBN_B;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.vecRot<sp/>+=<sp/>-omegaLocalBN_B.cross(intermediateVector)<sp/>-<sp/>*ISCPntBPrime_B*omegaLocalBN_B;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Map<sp/>external<sp/>force_N<sp/>to<sp/>the<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sumForceExternalMappedToB;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>sumForceExternalMappedToB<sp/>=<sp/>dcm_NB.transpose()*this-&gt;<ref refid="class_spacecraft_1ade6a699a8be7d2ffb2f2f35d58cd8056" kindref="member">sumForceExternal_N</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Edit<sp/>both<sp/>v_trans<sp/>and<sp/>v_rot<sp/>with<sp/>gravity<sp/>and<sp/>external<sp/>force<sp/>and<sp/>torque</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gLocal_N<sp/>=<sp/>*this-&gt;g_N;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/><sp/>Make<sp/>additional<sp/>contributions<sp/>to<sp/>the<sp/>matrices<sp/>from<sp/>the<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Need<sp/>to<sp/>find<sp/>force<sp/>of<sp/>gravity<sp/>on<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gravityForce_N;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>gravityForce_N<sp/>=<sp/>(*this-&gt;m_SC)(0,0)*gLocal_N;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gravityForce_B;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>gravityForce_B<sp/>=<sp/>dcm_NB.transpose()*gravityForce_N;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.vecTrans<sp/>+=<sp/>gravityForce_B<sp/>+<sp/>sumForceExternalMappedToB<sp/>+<sp/>this-&gt;<ref refid="class_spacecraft_1ae6648e0069c33bb766cb30988a7fffbb" kindref="member">sumForceExternal_B</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.hubBackSubMatrices.vecRot<sp/>+=<sp/>cLocal_B.cross(gravityForce_B)<sp/>+<sp/>this-&gt;<ref refid="class_spacecraft_1af724193f9c8beb47b6dbfe892cceef2f" kindref="member">sumTorquePntB_B</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Compute<sp/>the<sp/>derivatives<sp/>of<sp/>the<sp/>hub<sp/>states<sp/>before<sp/>looping<sp/>through<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.computeDerivatives(integTimeSeconds,<sp/>this-&gt;hubV_N-&gt;getStateDeriv(),<sp/>this-&gt;hubOmega_BN_B-&gt;getStateDeriv(),<sp/>this-&gt;hubSigma-&gt;getState());</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>state<sp/>effectors<sp/>for<sp/>compute<sp/>derivatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/><ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;computeDerivatives(integTimeSeconds,<sp/>this-&gt;hubV_N-&gt;getStateDeriv(),<sp/>this-&gt;hubOmega_BN_B-&gt;getStateDeriv(),<sp/>this-&gt;hubSigma-&gt;getState());</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_1a4edb3260a7d6a871a5dbd62b15b0b557" kindref="member">Spacecraft::preIntegration</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integrateToThisTime)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;timeStep<sp/>=<sp/>integrateToThisTime<sp/>-<sp/>this-&gt;<ref refid="class_spacecraft_1afabcf550ebad0f6a322a413c04311458" kindref="member">timePrevious</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>v_CN_N<sp/>before<sp/>integration<sp/>for<sp/>accumulated<sp/>DV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>oldV_BN_N<sp/>=<sp/>this-&gt;hubV_N-&gt;getState();<sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>V_BN_N<sp/>before<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>oldV_CN_N;<sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>V_CN_N<sp/>before<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>oldC_B;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Center<sp/>of<sp/>mass<sp/>offset<sp/>before<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>oldSigma_BN;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Sigma_BN<sp/>before<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>the<sp/>angular<sp/>rate,<sp/>oldOmega_BN_B<sp/>from<sp/>the<sp/>dyn<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;oldOmega_BN_B<sp/>=<sp/>this-&gt;hubOmega_BN_B-&gt;getState();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>center<sp/>of<sp/>mass,<sp/>v_BN_N<sp/>and<sp/>dcm_NB<sp/>from<sp/>the<sp/>dyn<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>oldSigma_BN<sp/>=<sp/>(Eigen::Vector3d)<sp/>this-&gt;hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Finally<sp/>find<sp/>v_CN_N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>oldDcm_NB<sp/>=<sp/>oldSigma_BN.toRotationMatrix();<sp/></highlight><highlight class="comment">//<sp/>-<sp/>dcm_NB<sp/>before<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>oldV_CN_N<sp/>=<sp/>oldV_BN_N<sp/>+<sp/>oldDcm_NB*(*this-&gt;cDot_B);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Integrate<sp/>the<sp/>state<sp/>from<sp/>the<sp/>last<sp/>time<sp/>(timeBefore)<sp/>to<sp/>the<sp/>integrateToThisTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.matchGravitytoVelocityState(oldV_CN_N);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>gravity<sp/>velocity<sp/>to<sp/>base<sp/>velocity<sp/>for<sp/>DV<sp/>estimation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;timeBefore<sp/>=<sp/>integrateToThisTime<sp/>-<sp/>this-&gt;timeStep;</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_1a14bcc341b733517c76c4cb372081bc5c" kindref="member">Spacecraft::postIntegration</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integrateToThisTime)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;timePrevious<sp/>=<sp/>integrateToThisTime;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>copy<sp/>the<sp/>current<sp/>time<sp/>into<sp/>previous<sp/>time<sp/>for<sp/>next<sp/>integrate<sp/>state<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>mass<sp/>properties<sp/>to<sp/>get<sp/>current<sp/>info<sp/>on<sp/>the<sp/>mass<sp/>props<sp/>of<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1abcfb214fd2cafa7456286e263df0f1f2" kindref="member">updateSCMassProps</ref>(integrateToThisTime);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>v_CN_N<sp/>after<sp/>the<sp/>integration<sp/>for<sp/>accumulated<sp/>DV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>newV_BN_N<sp/>=<sp/>this-&gt;hubV_N-&gt;getState();<sp/></highlight><highlight class="comment">//<sp/>-<sp/>V_BN_N<sp/>after<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>newV_CN_N;<sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>V_CN_N<sp/>after<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>newSigma_BN;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Sigma_BN<sp/>after<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>center<sp/>of<sp/>mass,<sp/>v_BN_N<sp/>and<sp/>dcm_NB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sigmaBNLoc;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaBNLoc<sp/>=<sp/>(Eigen::Vector3d)<sp/>this-&gt;hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>newSigma_BN<sp/>=<sp/>sigmaBNLoc;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>newDcm_NB<sp/>=<sp/>newSigma_BN.toRotationMatrix();<sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>dcm_NB<sp/>after<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>newV_CN_N<sp/>=<sp/>newV_BN_N<sp/>+<sp/>newDcm_NB*(*this-&gt;cDot_B);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>accumulated<sp/>DV<sp/>of<sp/>the<sp/>center<sp/>of<sp/>mass<sp/>in<sp/>the<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1adf6f33831060a77550c82e58f03758e6" kindref="member">dvAccum_CN_B</ref><sp/>+=<sp/>newDcm_NB.transpose()*(newV_CN_N<sp/>-</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;BcGravVelocity-&gt;getState());</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>the<sp/>accumulated<sp/>DV<sp/>of<sp/>the<sp/>body<sp/>frame<sp/>in<sp/>the<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a52a55e41c02a99108d31e80fc30d15d1" kindref="member">dvAccum_BN_B</ref><sp/>+=<sp/>newDcm_NB.transpose()*(newV_BN_N<sp/>-</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;hubGravVelocity-&gt;getState());</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>non-conservative<sp/>acceleration<sp/>of<sp/>the<sp/>body<sp/>frame<sp/>in<sp/>the<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1ac056bf8c133de42d5cddad2e12fd4e43" kindref="member">nonConservativeAccelpntB_B</ref><sp/>=<sp/>(newDcm_NB.transpose()*(newV_BN_N<sp/>-</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;hubGravVelocity-&gt;getState()))/this-&gt;timeStep;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>angular<sp/>acceleration<sp/>in<sp/>the<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>newOmega_BN_B;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>newOmega_BN_B<sp/>=<sp/>this-&gt;hubOmega_BN_B-&gt;getState();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(this-&gt;timeStep)<sp/>&gt;<sp/>1e-10)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a12ccb1833b06ce68822c902c3e66de1d" kindref="member">omegaDot_BN_B</ref><sp/>=<sp/>(newOmega_BN_B<sp/>-<sp/>this-&gt;oldOmega_BN_B)/this-&gt;timeStep;<sp/></highlight><highlight class="comment">//angular<sp/>acceleration<sp/>of<sp/>B<sp/>wrt<sp/>N<sp/>in<sp/>the<sp/>Body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a12ccb1833b06ce68822c902c3e66de1d" kindref="member">omegaDot_BN_B</ref><sp/>=<sp/>{0.,<sp/>0.,<sp/>.0};</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Compute<sp/>Energy<sp/>and<sp/>Momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1ab51b7d9516525ac7155bd0053a5586c6" kindref="member">computeEnergyMomentum</ref>(integrateToThisTime);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>hubs<sp/>modify<sp/>states<sp/>to<sp/>allow<sp/>for<sp/>switching<sp/>of<sp/>MRPs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.modifyStates(integrateToThisTime);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>over<sp/>stateEffectors<sp/>to<sp/>call<sp/>modifyStates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>energy<sp/>and<sp/>momentum<sp/>calulations<sp/>for<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;modifyStates(integrateToThisTime);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Compute<sp/>force<sp/>and<sp/>torque<sp/>on<sp/>the<sp/>body<sp/>due<sp/>to<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a928a60547dbcb8747c4ffb9b959390f3" kindref="member">calcForceTorqueFromStateEffectors</ref>(integrateToThisTime,<sp/>newOmega_BN_B);</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_1ab51b7d9516525ac7155bd0053a5586c6" kindref="member">Spacecraft::computeEnergyMomentum</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Grab<sp/>values<sp/>from<sp/>state<sp/>Manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rLocal_BN_N<sp/>=<sp/>hubR_N-&gt;getState();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDotLocal_BN_N<sp/>=<sp/>hubV_N-&gt;getState();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigmaLocal_BN;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaLocal_BN<sp/>=<sp/>(Eigen::Vector3d<sp/>)<sp/>hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>DCM&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcmLocal_NB<sp/>=<sp/>sigmaLocal_BN.toRotationMatrix();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcmLocal_BN<sp/>=<sp/>dcmLocal_NB.transpose();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Convert<sp/>from<sp/>inertial<sp/>frame<sp/>to<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rBNLocal_B;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDotBNLocal_B;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>rBNLocal_B<sp/>=<sp/>dcmLocal_BN*rLocal_BN_N;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>rDotBNLocal_B<sp/>=<sp/>dcmLocal_BN*rDotLocal_BN_N;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>zero<sp/>necessarry<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>totOrbAngMomPntN_B;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>totRotAngMomPntC_B;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>totOrbAngMomPntN_B.setZero();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>totRotAngMomPntC_B.setZero();</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a93c2f806cbbb8fd66049e9d151ff01cf" kindref="member">totOrbAngMomPntN_N</ref>.setZero();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1ac97ca80348d82c4a3c3df82ec852928b" kindref="member">totRotAngMomPntC_N</ref>.setZero();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a7b5c83744cf4bb9b57b1a05f0fef4c1e" kindref="member">rotAngMomPntCContr_B</ref>.setZero();</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a43bf4cffed66187ede684bfceb143e1b" kindref="member">totOrbEnergy</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a9e358898d9bd2057cc562df4366dcb23" kindref="member">totRotEnergy</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a9efd229cdf0e515cb1d91c2f872fe859" kindref="member">rotEnergyContr</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>the<sp/>hubs<sp/>contribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a8e79040a4017adbd83932f7dfb45b2ea" kindref="member">hub</ref>.updateEnergyMomContributions(time,<sp/>this-&gt;<ref refid="class_spacecraft_1a7b5c83744cf4bb9b57b1a05f0fef4c1e" kindref="member">rotAngMomPntCContr_B</ref>,<sp/>this-&gt;<ref refid="class_spacecraft_1a9efd229cdf0e515cb1d91c2f872fe859" kindref="member">rotEnergyContr</ref>,<sp/>this-&gt;hubOmega_BN_B-&gt;getState());</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>totRotAngMomPntC_B<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_1a7b5c83744cf4bb9b57b1a05f0fef4c1e" kindref="member">rotAngMomPntCContr_B</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a9e358898d9bd2057cc562df4366dcb23" kindref="member">totRotEnergy</ref><sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_1a9efd229cdf0e515cb1d91c2f872fe859" kindref="member">rotEnergyContr</ref>;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>over<sp/>stateEffectors<sp/>to<sp/>get<sp/>their<sp/>contributions<sp/>to<sp/>energy<sp/>and<sp/>momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>the<sp/>matrices<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a7b5c83744cf4bb9b57b1a05f0fef4c1e" kindref="member">rotAngMomPntCContr_B</ref>.setZero();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a9efd229cdf0e515cb1d91c2f872fe859" kindref="member">rotEnergyContr</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>energy<sp/>and<sp/>momentum<sp/>calulations<sp/>for<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;updateEnergyMomContributions(time,<sp/>this-&gt;<ref refid="class_spacecraft_1a7b5c83744cf4bb9b57b1a05f0fef4c1e" kindref="member">rotAngMomPntCContr_B</ref>,<sp/>this-&gt;<ref refid="class_spacecraft_1a9efd229cdf0e515cb1d91c2f872fe859" kindref="member">rotEnergyContr</ref>,<sp/>this-&gt;hubOmega_BN_B-&gt;getState());</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totRotAngMomPntC_B<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_1a7b5c83744cf4bb9b57b1a05f0fef4c1e" kindref="member">rotAngMomPntCContr_B</ref>;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a9e358898d9bd2057cc562df4366dcb23" kindref="member">totRotEnergy</ref><sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_1a9efd229cdf0e515cb1d91c2f872fe859" kindref="member">rotEnergyContr</ref>;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>cDot_B<sp/>from<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cDotLocal_B<sp/>=<sp/>(*this-&gt;cDot_B);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Add<sp/>in<sp/>orbital<sp/>kinetic<sp/>energy<sp/>into<sp/>the<sp/>total<sp/>orbital<sp/>energy<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a43bf4cffed66187ede684bfceb143e1b" kindref="member">totOrbEnergy</ref><sp/>+=<sp/>1.0/2.0*(*this-&gt;m_SC)(0,0)*(rDotBNLocal_B.dot(rDotBNLocal_B)<sp/>+<sp/>2.0*rDotBNLocal_B.dot(cDotLocal_B)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>cDotLocal_B.dot(cDotLocal_B));</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>gravity<sp/>effector<sp/>and<sp/>add<sp/>in<sp/>its<sp/>potential<sp/>contributions<sp/>to<sp/>the<sp/>total<sp/>orbital<sp/>energy<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a97ca84dd14a9bba7aff4c9afcb06e59c" kindref="member">orbPotentialEnergyContr</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rLocal_CN_N<sp/>=<sp/>this-&gt;hubR_N-&gt;getState()<sp/>+<sp/>dcmLocal_NB*(*this-&gt;c_B);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spacecraft_1a799d5a5eca86ce46626dd2c8007d631e" kindref="member">gravField</ref>.updateEnergyContributions(rLocal_CN_N,<sp/>this-&gt;<ref refid="class_spacecraft_1a97ca84dd14a9bba7aff4c9afcb06e59c" kindref="member">orbPotentialEnergyContr</ref>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a43bf4cffed66187ede684bfceb143e1b" kindref="member">totOrbEnergy</ref><sp/>+=<sp/>(*this-&gt;m_SC)(0,0)*this-&gt;<ref refid="class_spacecraft_1a97ca84dd14a9bba7aff4c9afcb06e59c" kindref="member">orbPotentialEnergyContr</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>total<sp/>rotational<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a9e358898d9bd2057cc562df4366dcb23" kindref="member">totRotEnergy</ref><sp/>+=<sp/>-1.0/2.0*(*this-&gt;m_SC)(0,0)*cDotLocal_B.dot(cDotLocal_B);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>orbital<sp/>angular<sp/>momentum<sp/>for<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rCN_N;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDotCN_N;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>rCN_N<sp/>=<sp/>rLocal_BN_N<sp/>+<sp/>dcmLocal_NB*(*this-&gt;c_B);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>rDotCN_N<sp/>=<sp/>rDotLocal_BN_N<sp/>+<sp/>dcmLocal_NB*cDotLocal_B;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1a93c2f806cbbb8fd66049e9d151ff01cf" kindref="member">totOrbAngMomPntN_N</ref><sp/>=<sp/>(*this-&gt;m_SC)(0,0)*(rCN_N.cross(rDotCN_N));</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>rotational<sp/>angular<sp/>momentum<sp/>for<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>totRotAngMomPntC_B<sp/>+=<sp/>-(*this-&gt;m_SC)(0,0)*(Eigen::Vector3d<sp/>(*this-&gt;c_B)).cross(cDotLocal_B);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_1ac97ca80348d82c4a3c3df82ec852928b" kindref="member">totRotAngMomPntC_N</ref><sp/>=<sp/>dcmLocal_NB*totRotAngMomPntC_B;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_1a928a60547dbcb8747c4ffb9b959390f3" kindref="member">Spacecraft::calcForceTorqueFromStateEffectors</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time,<sp/>Eigen::Vector3d<sp/>omega_BN_B)</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>over<sp/>stateEffectors<sp/>to<sp/>get<sp/>their<sp/>contributions<sp/>to<sp/>energy<sp/>and<sp/>momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_1a9fa92c6ee0320327eb0713c3f38c9fbf" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;calcForceTorqueOnBody(time,<sp/>omega_BN_B);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/spacecraft/spacecraft.cpp"/>
  </compounddef>
</doxygen>
