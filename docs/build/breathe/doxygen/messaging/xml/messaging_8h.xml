<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="messaging_8h" kind="file" language="C++">
    <compoundname>messaging.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="yes">architecture/_GeneralModuleFiles/sys_model.h</includes>
    <includes local="no">vector</includes>
    <includes refid="msg_header_8h" local="yes">architecture/messaging/msgHeader.h</includes>
    <includes local="yes">architecture/utilities/bskLogging.h</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/architecture/messaging/messaging.h</label>
        <link refid="messaging_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>architecture/messaging/msgHeader.h</label>
        <link refid="msg_header_8h_source"/>
      </node>
      <node id="3">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="6">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>typeinfo</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_read_functor" prot="public">ReadFunctor</innerclass>
    <innerclass refid="class_write_functor" prot="public">WriteFunctor</innerclass>
    <innerclass refid="class_message" prot="public">Message</innerclass>
    <innerclass refid="class_recorder" prot="public">Recorder</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment">Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment">copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment">WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment">MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment">WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment">ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MESSAGING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MESSAGING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/_GeneralModuleFiles/sys_model.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/messaging/msgHeader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/bskLogging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>messageType&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_message" kindref="compound">Message</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>messageType&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_recorder" kindref="compound">Recorder</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>messageType&gt;</highlight></codeline>
<codeline lineno="37" refid="class_read_functor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_read_functor" kindref="compound">ReadFunctor</ref>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref>*<sp/>payloadPointer;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_msg_header" kindref="compound">MsgHeader</ref><sp/>*headerPointer;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialized;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="class_read_functor_1adbad2cf8fc5a044b66191c56bdfc3785" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">BSKLogger</ref><sp/><ref refid="class_read_functor_1adbad2cf8fc5a044b66191c56bdfc3785" kindref="member">bskLogger</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="class_read_functor_1a86cbcbb19dc2659174868fd7ba4ebe73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref><sp/><ref refid="class_read_functor_1a86cbcbb19dc2659174868fd7ba4ebe73" kindref="member">zeroMsgPayload</ref><sp/>={};<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_read_functor_1a239f3d1ddfde3be4dfd4e94ff4b1cea3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_read_functor_1a239f3d1ddfde3be4dfd4e94ff4b1cea3" kindref="member">ReadFunctor</ref>()<sp/>:<sp/>initialized(<ref refid="class_recorder" kindref="compound">false</ref>)<sp/>{};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_read_functor_1aba9e06f354903e0fd5c6ab39d47a3190" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_read_functor_1aba9e06f354903e0fd5c6ab39d47a3190" kindref="member">ReadFunctor</ref>(<ref refid="class_recorder" kindref="compound">messageType</ref>*<sp/><ref refid="class_recorder" kindref="compound">payloadPtr</ref>,<sp/><ref refid="struct_msg_header" kindref="compound">MsgHeader</ref><sp/>*<ref refid="class_recorder" kindref="compound">headerPtr</ref>)<sp/>:<sp/>payloadPointer(<ref refid="class_recorder" kindref="compound">payloadPtr</ref>),<sp/>headerPointer(<ref refid="class_recorder" kindref="compound">headerPtr</ref>),<sp/>initialized(<ref refid="class_recorder" kindref="compound">true</ref>){};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_read_functor_1a874aa47a1d4bf71b9fe80fdd0435c657" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_recorder" kindref="compound">messageType</ref>&amp;<sp/><ref refid="class_read_functor_1a874aa47a1d4bf71b9fe80fdd0435c657" kindref="member">operator()</ref>(){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;initialized)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref><sp/><ref refid="class_recorder" kindref="compound">var</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_functor_1adbad2cf8fc5a044b66191c56bdfc3785" kindref="member">bskLogger</ref>.bskLog(<ref refid="class_recorder" kindref="compound">BSK_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>C++<sp/>read<sp/>functor,<sp/>you<sp/>are<sp/>trying<sp/>to<sp/>read<sp/>an<sp/>un-connected<sp/>message<sp/>of<sp/>type<sp/>%s\nThis<sp/>program<sp/>is<sp/>about<sp/>to<sp/>self<sp/>destruct.&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="class_recorder" kindref="compound">var</ref>).<ref refid="class_recorder" kindref="compound">name</ref>());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*this-&gt;payloadPointer;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_read_functor_1a20c1a1f1bd674eafb6a7d812d9a3cc96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_read_functor_1a20c1a1f1bd674eafb6a7d812d9a3cc96" kindref="member">isLinked</ref>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;initialized;};<sp/><sp/></highlight><highlight class="comment">//<sp/>something<sp/>that<sp/>can<sp/>be<sp/>checked<sp/>so<sp/>that<sp/>uninitialized<sp/>messages<sp/>aren&apos;t<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_read_functor_1a770bcf3f3f6fc9ef97e1ee2debaf4fd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_read_functor_1a770bcf3f3f6fc9ef97e1ee2debaf4fd8" kindref="member">isWritten</ref>(){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;initialized)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;headerPointer-&gt;<ref refid="struct_msg_header_1ab49d65d36ef1843216f532fe5fe3c6f7" kindref="member">isWritten</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref><sp/><ref refid="class_recorder" kindref="compound">var</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_functor_1adbad2cf8fc5a044b66191c56bdfc3785" kindref="member">bskLogger</ref>.bskLog(<ref refid="class_recorder" kindref="compound">BSK_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>C++<sp/>read<sp/>functor,<sp/>you<sp/>are<sp/>checking<sp/>if<sp/>an<sp/>unconnected<sp/>msg<sp/>of<sp/>type<sp/>%s<sp/>is<sp/>written.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="class_recorder" kindref="compound">var</ref>).<ref refid="class_recorder" kindref="compound">name</ref>());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_read_functor_1ac35f410c0131e0af28727ff6c214af89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">uint64_t</ref><sp/><ref refid="class_read_functor_1ac35f410c0131e0af28727ff6c214af89" kindref="member">timeWritten</ref>(){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;initialized)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref><sp/><ref refid="class_recorder" kindref="compound">var</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_functor_1adbad2cf8fc5a044b66191c56bdfc3785" kindref="member">bskLogger</ref>.bskLog(<ref refid="class_recorder" kindref="compound">BSK_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>C++<sp/>read<sp/>functor,<sp/>you<sp/>are<sp/>requesting<sp/>the<sp/>write<sp/>time<sp/>of<sp/>an<sp/>unconnected<sp/>msg<sp/>of<sp/>type<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="class_recorder" kindref="compound">var</ref>).<ref refid="class_recorder" kindref="compound">name</ref>());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;headerPointer-&gt;<ref refid="struct_msg_header_1a0b5771ef607daea0eaf6f08e03d51463" kindref="member">timeWritten</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_read_functor_1a44866a398b091478fa9b54830b6c832c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">int64_t</ref><sp/><ref refid="class_read_functor_1a44866a398b091478fa9b54830b6c832c" kindref="member">moduleID</ref>(){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;initialized)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref><sp/><ref refid="class_recorder" kindref="compound">var</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_functor_1adbad2cf8fc5a044b66191c56bdfc3785" kindref="member">bskLogger</ref>.bskLog(<ref refid="class_recorder" kindref="compound">BSK_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>C++<sp/>read<sp/>functor,<sp/>you<sp/>are<sp/>requesting<sp/>moduleID<sp/>of<sp/>an<sp/>unconnected<sp/>msg<sp/>of<sp/>type<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="class_recorder" kindref="compound">var</ref>).<ref refid="class_recorder" kindref="compound">name</ref>());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;headerPointer-&gt;<ref refid="struct_msg_header_1ab49d65d36ef1843216f532fe5fe3c6f7" kindref="member">isWritten</ref>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref><sp/><ref refid="class_recorder" kindref="compound">var</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_read_functor_1adbad2cf8fc5a044b66191c56bdfc3785" kindref="member">bskLogger</ref>.bskLog(<ref refid="class_recorder" kindref="compound">BSK_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>C++<sp/>read<sp/>functor,<sp/>you<sp/>are<sp/>requesting<sp/>moduleID<sp/>of<sp/>an<sp/>unwritten<sp/>msg<sp/>of<sp/>type<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="class_recorder" kindref="compound">var</ref>).<ref refid="class_recorder" kindref="compound">name</ref>());</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;headerPointer-&gt;<ref refid="struct_msg_header_1af42c3dd61ee88287569115a147ff012f" kindref="member">moduleID</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_read_functor_1a4ae659ad3f75346b7a6039daed610fa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_read_functor_1a4ae659ad3f75346b7a6039daed610fa5" kindref="member">subscribeToC</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="class_recorder" kindref="compound">source</ref>){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>method<sp/>works<sp/>by<sp/>knowing<sp/>that<sp/>the<sp/>first<sp/>member<sp/>of<sp/>a<sp/>C<sp/>message<sp/>is<sp/>the<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;headerPointer<sp/>=<sp/>(<ref refid="struct_msg_header" kindref="compound">MsgHeader</ref>*)<sp/><ref refid="class_recorder" kindref="compound">source</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>the<sp/>address<sp/>to<sp/>connect<sp/>to<sp/>C-wrapped<sp/>message<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>assumes<sp/>the<sp/>header<sp/>memory<sp/>is<sp/>aligned<sp/>with<sp/>0<sp/>additional<sp/>padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_msg_header" kindref="compound">MsgHeader</ref>*<sp/><ref refid="class_recorder" kindref="compound">pt</ref><sp/>=<sp/>this-&gt;headerPointer;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;payloadPointer<sp/>=<sp/>(<ref refid="class_recorder" kindref="compound">messageType</ref><sp/>*)<sp/>(++<ref refid="class_recorder" kindref="compound">pt</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>flag<sp/>that<sp/>this<sp/>input<sp/>message<sp/>is<sp/>connected<sp/>to<sp/>another<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>input<sp/>message<sp/>as<sp/>linked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;headerPointer-&gt;<ref refid="struct_msg_header_1a11f61cb53086b60f46df3b93c8d5463e" kindref="member">isLinked</ref><sp/>=<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>source<sp/>output<sp/>message<sp/>as<sp/>linked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_read_functor_1ab0d18ebd0fb0b8f92d088fa57c4455c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_read_functor_1ab0d18ebd0fb0b8f92d088fa57c4455c4" kindref="member">subscribeTo</ref>(<ref refid="class_recorder" kindref="compound">Message&lt;messageType&gt;</ref><sp/>*<ref refid="class_recorder" kindref="compound">source</ref>){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_recorder" kindref="compound">source</ref>-&gt;addSubscriber();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_read_functor_1a45eda48f0f38c92ea0ef286a21f1bdec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">uint8_t</ref><sp/><ref refid="class_read_functor_1a45eda48f0f38c92ea0ef286a21f1bdec" kindref="member">isSubscribedToC</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_recorder" kindref="compound">source</ref>){</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">int8_t</ref><sp/><ref refid="class_recorder" kindref="compound">firstCheck</ref><sp/>=<sp/>(this-&gt;headerPointer<sp/>==<sp/>(<ref refid="struct_msg_header" kindref="compound">MsgHeader</ref>*)<sp/><ref refid="class_recorder" kindref="compound">source</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_msg_header" kindref="compound">MsgHeader</ref>*<sp/><ref refid="class_recorder" kindref="compound">pt</ref><sp/>=<sp/>this-&gt;headerPointer;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">int8_t</ref><sp/><ref refid="class_recorder" kindref="compound">secondCheck</ref><sp/>=<sp/>(this-&gt;payloadPointer<sp/>==<sp/>(<ref refid="class_recorder" kindref="compound">messageType</ref><sp/>*)<sp/>(++<ref refid="class_recorder" kindref="compound">pt</ref>));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;initialized<sp/>&amp;&amp;<sp/><ref refid="class_recorder" kindref="compound">firstCheck</ref><sp/>&amp;&amp;<sp/><ref refid="class_recorder" kindref="compound">secondCheck</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="138" refid="class_read_functor_1a8114a7f28c01ed251140069575b8adab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">uint8_t</ref><sp/><ref refid="class_read_functor_1a8114a7f28c01ed251140069575b8adab" kindref="member">isSubscribedTo</ref>(<ref refid="class_recorder" kindref="compound">Message&lt;messageType&gt;</ref><sp/>*<ref refid="class_recorder" kindref="compound">source</ref>){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_msg_header" kindref="compound">MsgHeader</ref><sp/>*<ref refid="class_recorder" kindref="compound">dummyMsgPtr</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">int8_t</ref><sp/><ref refid="class_recorder" kindref="compound">firstCheck</ref><sp/>=<sp/>(this-&gt;payloadPointer<sp/>==<sp/><ref refid="class_recorder" kindref="compound">source</ref>-&gt;getMsgPointers(&amp;(<ref refid="class_recorder" kindref="compound">dummyMsgPtr</ref>)));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">int8_t</ref><sp/><ref refid="class_recorder" kindref="compound">secondCheck</ref><sp/>=<sp/>(this-&gt;headerPointer<sp/>==<sp/><ref refid="class_recorder" kindref="compound">dummyMsgPtr</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;initialized<sp/>&amp;&amp;<sp/><ref refid="class_recorder" kindref="compound">firstCheck</ref><sp/>&amp;&amp;<sp/><ref refid="class_recorder" kindref="compound">secondCheck</ref><sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="class_read_functor_1a6fb31656bf96eef6d2a0b35ada06fd7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">Recorder&lt;messageType&gt;</ref><sp/><ref refid="class_read_functor_1a6fb31656bf96eef6d2a0b35ada06fd7f" kindref="member">recorder</ref>(<ref refid="class_recorder" kindref="compound">uint64_t</ref><sp/><ref refid="class_recorder" kindref="compound">timeDiff</ref><sp/>=<sp/>0){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recorder" kindref="compound">Recorder&lt;messageType&gt;</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_recorder" kindref="compound">timeDiff</ref>);}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>messageType&gt;</highlight></codeline>
<codeline lineno="154" refid="class_write_functor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_write_functor" kindref="compound">WriteFunctor</ref>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref>*<sp/>payloadPointer;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_msg_header" kindref="compound">MsgHeader</ref>*<sp/>headerPointer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160" refid="class_write_functor_1a5ba165481825148cab8c4bcc269b5a7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_write_functor_1a5ba165481825148cab8c4bcc269b5a7c" kindref="member">WriteFunctor</ref>(){};</highlight></codeline>
<codeline lineno="162" refid="class_write_functor_1a3bd7cb033af023a84e1d80d21ac410f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_write_functor_1a3bd7cb033af023a84e1d80d21ac410f7" kindref="member">WriteFunctor</ref>(<ref refid="class_recorder" kindref="compound">messageType</ref>*<sp/>payloadPointer,<sp/><ref refid="struct_msg_header" kindref="compound">MsgHeader</ref><sp/>*headerPointer)<sp/>:<sp/>payloadPointer(payloadPointer),<sp/>headerPointer(headerPointer){};</highlight></codeline>
<codeline lineno="164" refid="class_write_functor_1a6d7fdf5341bf0c711c4c480bc42545f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_write_functor_1a6d7fdf5341bf0c711c4c480bc42545f8" kindref="member">operator()</ref>(<ref refid="class_recorder" kindref="compound">messageType</ref><sp/>*payload,<sp/><ref refid="class_recorder" kindref="compound">int64_t</ref><sp/>moduleID,<sp/><ref refid="class_recorder" kindref="compound">uint64_t</ref><sp/><ref refid="class_recorder" kindref="compound">callTime</ref>){</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*this-&gt;payloadPointer<sp/>=<sp/>*payload;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;headerPointer-&gt;<ref refid="struct_msg_header_1ab49d65d36ef1843216f532fe5fe3c6f7" kindref="member">isWritten</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;headerPointer-&gt;<ref refid="struct_msg_header_1a0b5771ef607daea0eaf6f08e03d51463" kindref="member">timeWritten</ref><sp/>=<sp/><ref refid="class_recorder" kindref="compound">callTime</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;headerPointer-&gt;<ref refid="struct_msg_header_1af42c3dd61ee88287569115a147ff012f" kindref="member">moduleID</ref><sp/>=<sp/>moduleID;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal">};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>messageType&gt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_recorder" kindref="compound">Recorder</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>messageType&gt;</highlight></codeline>
<codeline lineno="180" refid="class_message" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_message" kindref="compound">Message</ref>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref><sp/>payload<sp/>=<sp/>{};<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_msg_header" kindref="compound">MsgHeader</ref><sp/>header<sp/>=<sp/>{};<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">ReadFunctor&lt;messageType&gt;</ref><sp/>read<sp/>=<sp/><ref refid="class_recorder" kindref="compound">ReadFunctor&lt;messageType&gt;</ref>(&amp;payload,<sp/>&amp;header);<sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187" refid="class_message_1aed1e0f77358ed822bf3d6deea11f8e70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">WriteFunctor&lt;messageType&gt;</ref><sp/><ref refid="class_message_1aed1e0f77358ed822bf3d6deea11f8e70" kindref="member">write</ref><sp/>=<sp/><ref refid="class_recorder" kindref="compound">WriteFunctor&lt;messageType&gt;</ref>(&amp;payload,<sp/>&amp;header);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">ReadFunctor&lt;messageType&gt;</ref><sp/><ref refid="class_message_1aaf9bf1023cf97b61453e348b718c003c" kindref="member">addSubscriber</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">WriteFunctor&lt;messageType&gt;</ref><sp/><ref refid="class_message_1a119d23d8cbfd5c4ad40e66abfb5ad951" kindref="member">addAuthor</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref>*<sp/><ref refid="class_message_1a91600ef7c5d6666d15b784efe1bea201" kindref="member">subscribeRaw</ref>(<ref refid="struct_msg_header" kindref="compound">MsgHeader</ref><sp/>**<ref refid="class_recorder" kindref="compound">msgPtr</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref>*<sp/><ref refid="class_message_1a1a840c3e3f9b74dde5989688f2c7cc6a" kindref="member">getMsgPointers</ref>(<ref refid="struct_msg_header" kindref="compound">MsgHeader</ref><sp/>**<ref refid="class_recorder" kindref="compound">msgPtr</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="class_message_1ac5d936a5196562792d0360a17c40be32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">Recorder&lt;messageType&gt;</ref><sp/><ref refid="class_message_1ac5d936a5196562792d0360a17c40be32" kindref="member">recorder</ref>(<ref refid="class_recorder" kindref="compound">uint64_t</ref><sp/><ref refid="class_recorder" kindref="compound">timeDiff</ref><sp/>=<sp/>0){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recorder" kindref="compound">Recorder&lt;messageType&gt;</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_recorder" kindref="compound">timeDiff</ref>);}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201" refid="class_message_1a159ab0efd3a7a1c32764cdf2a1781a5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref><sp/><ref refid="class_message_1a159ab0efd3a7a1c32764cdf2a1781a5f" kindref="member">zeroMsgPayload</ref><sp/>=<sp/>{};<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_message_1afab8e409f40fe9059705246aeda9c200" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_message_1afab8e409f40fe9059705246aeda9c200" kindref="member">isLinked</ref>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;header.<ref refid="struct_msg_header_1a11f61cb53086b60f46df3b93c8d5463e" kindref="member">isLinked</ref>;};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="class_message_1ae7cbcbe30dee96310f16f42076782e07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">uint64_t</ref><sp/><ref refid="class_message_1ae7cbcbe30dee96310f16f42076782e07" kindref="member">getPayloadSize</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_recorder" kindref="compound">messageType</ref>);};</highlight></codeline>
<codeline lineno="208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>messageType&gt;</highlight></codeline>
<codeline lineno="212" refid="class_message_1aaf9bf1023cf97b61453e348b718c003c" refkind="member"><highlight class="normal"><ref refid="class_recorder" kindref="compound">ReadFunctor&lt;messageType&gt;</ref><sp/><ref refid="class_message_1aaf9bf1023cf97b61453e348b718c003c" kindref="member">Message&lt;messageType&gt;::addSubscriber</ref>(){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;header.isLinked<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;read;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>messageType&gt;</highlight></codeline>
<codeline lineno="218" refid="class_message_1a119d23d8cbfd5c4ad40e66abfb5ad951" refkind="member"><highlight class="normal"><ref refid="class_recorder" kindref="compound">WriteFunctor&lt;messageType&gt;</ref><sp/><ref refid="class_message_1a119d23d8cbfd5c4ad40e66abfb5ad951" kindref="member">Message&lt;messageType&gt;::addAuthor</ref>(){</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;write;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>messageType&gt;</highlight></codeline>
<codeline lineno="223" refid="class_message_1a91600ef7c5d6666d15b784efe1bea201" refkind="member"><highlight class="normal"><ref refid="class_recorder" kindref="compound">messageType</ref>*<sp/><ref refid="class_message_1a91600ef7c5d6666d15b784efe1bea201" kindref="member">Message&lt;messageType&gt;::subscribeRaw</ref>(<ref refid="struct_msg_header" kindref="compound">MsgHeader</ref><sp/>**<ref refid="class_recorder" kindref="compound">msgPtr</ref>){</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_recorder" kindref="compound">msgPtr</ref><sp/>=<sp/>&amp;this-&gt;header;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;header.isLinked<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;this-&gt;payload;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>messageType&gt;</highlight></codeline>
<codeline lineno="230" refid="class_message_1a1a840c3e3f9b74dde5989688f2c7cc6a" refkind="member"><highlight class="normal"><ref refid="class_recorder" kindref="compound">messageType</ref>*<sp/><ref refid="class_message_1a1a840c3e3f9b74dde5989688f2c7cc6a" kindref="member">Message&lt;messageType&gt;::getMsgPointers</ref>(<ref refid="struct_msg_header" kindref="compound">MsgHeader</ref><sp/>**<ref refid="class_recorder" kindref="compound">msgPtr</ref>){</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_recorder" kindref="compound">msgPtr</ref><sp/>=<sp/>&amp;this-&gt;header;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;this-&gt;payload;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>messageType&gt;</highlight></codeline>
<codeline lineno="237" refid="class_recorder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_recorder" kindref="compound">Recorder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SysModel{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">Recorder</ref>(){};</highlight></codeline>
<codeline lineno="241" refid="class_recorder_1af8f9d820758a80b14b835b32167ca11b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder_1af8f9d820758a80b14b835b32167ca11b" kindref="member">Recorder</ref>(<ref refid="class_recorder" kindref="compound">Message&lt;messageType&gt;</ref>*<sp/><ref refid="class_recorder" kindref="compound">message</ref>,<sp/><ref refid="class_recorder" kindref="compound">uint64_t</ref><sp/><ref refid="class_recorder" kindref="compound">timeDiff</ref><sp/>=<sp/>0){</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;timeInterval<sp/>=<sp/><ref refid="class_recorder" kindref="compound">timeDiff</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;readMessage<sp/>=<sp/><ref refid="class_recorder" kindref="compound">message</ref>-&gt;addSubscriber();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_recorder" kindref="compound">ModelTag</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Rec:&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_recorder_1a05e22f586ac508c0b580ce6d72d0d852" kindref="member">findMsgName</ref>(std::string(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(*message).name()));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247" refid="class_recorder_1a8c38cb1187e038ec273b6f48b36d9b69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder_1a8c38cb1187e038ec273b6f48b36d9b69" kindref="member">Recorder</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="class_recorder" kindref="compound">message</ref>,<sp/><ref refid="class_recorder" kindref="compound">uint64_t</ref><sp/><ref refid="class_recorder" kindref="compound">timeDiff</ref><sp/>=<sp/>0){</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;timeInterval<sp/>=<sp/><ref refid="class_recorder" kindref="compound">timeDiff</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_msg_header" kindref="compound">MsgHeader</ref>*<sp/><ref refid="class_recorder" kindref="compound">msgPt</ref><sp/>=<sp/>(<ref refid="struct_msg_header" kindref="compound">MsgHeader</ref><sp/>*)<sp/><ref refid="class_recorder" kindref="compound">message</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_msg_header" kindref="compound">MsgHeader</ref><sp/>*<ref refid="class_recorder" kindref="compound">pt</ref><sp/>=<sp/><ref refid="class_recorder" kindref="compound">msgPt</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref>*<sp/>payloadPointer;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payloadPointer<sp/>=<sp/>(<ref refid="class_recorder" kindref="compound">messageType</ref><sp/>*)<sp/>(++<ref refid="class_recorder" kindref="compound">pt</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;readMessage<sp/>=<sp/><ref refid="class_recorder" kindref="compound">ReadFunctor&lt;messageType&gt;</ref>(payloadPointer,<sp/><ref refid="class_recorder" kindref="compound">msgPt</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_recorder" kindref="compound">ModelTag</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Rec:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">Message&lt;messageType&gt;</ref><sp/><ref refid="class_recorder" kindref="compound">tempMsg</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_recorder" kindref="compound">msgName</ref><sp/>=<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="class_recorder" kindref="compound">tempMsg</ref>).<ref refid="class_recorder" kindref="compound">name</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_recorder" kindref="compound">ModelTag</ref><sp/>+=<sp/><ref refid="class_recorder_1a05e22f586ac508c0b580ce6d72d0d852" kindref="member">findMsgName</ref>(<ref refid="class_recorder" kindref="compound">msgName</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262" refid="class_recorder_1a3e3b0501a1231e477697b0eb6caa03a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder_1a3e3b0501a1231e477697b0eb6caa03a8" kindref="member">Recorder</ref>(<ref refid="class_recorder" kindref="compound">ReadFunctor&lt;messageType&gt;</ref>*<sp/><ref refid="class_recorder" kindref="compound">messageReader</ref>,<sp/><ref refid="class_recorder" kindref="compound">uint64_t</ref><sp/><ref refid="class_recorder" kindref="compound">timeDiff</ref><sp/>=<sp/>0){</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;timeInterval<sp/>=<sp/><ref refid="class_recorder" kindref="compound">timeDiff</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;readMessage<sp/>=<sp/>*<ref refid="class_recorder" kindref="compound">messageReader</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_recorder" kindref="compound">messageReader</ref>-&gt;isLinked())<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">messageType</ref><sp/><ref refid="class_recorder" kindref="compound">var</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder_1ae076726846472beb9ef55ada292ed54e" kindref="member">bskLogger</ref>.bskLog(<ref refid="class_recorder" kindref="compound">BSK_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>C++<sp/>read<sp/>functor,<sp/>you<sp/>are<sp/>requesting<sp/>to<sp/>record<sp/>an<sp/>un-connected<sp/>input<sp/>message<sp/>of<sp/>type<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="class_recorder" kindref="compound">var</ref>).<ref refid="class_recorder" kindref="compound">name</ref>());</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_recorder" kindref="compound">ModelTag</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Rec:&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_recorder_1a05e22f586ac508c0b580ce6d72d0d852" kindref="member">findMsgName</ref>(std::string(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(*messageReader).name()));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">~Recorder</ref>(){};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="class_recorder_1a86cc9953757de9ed07f4e81bda5913fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_recorder_1a86cc9953757de9ed07f4e81bda5913fe" kindref="member">SelfInit</ref>(){};</highlight></codeline>
<codeline lineno="276" refid="class_recorder_1ab5fd51789b6de630a660b0c3a330799f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_recorder_1ab5fd51789b6de630a660b0c3a330799f" kindref="member">IntegratedInit</ref>(){};</highlight></codeline>
<codeline lineno="278" refid="class_recorder_1aeb8561c7cfba47c4a71b2faaf6b76f7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_recorder_1aeb8561c7cfba47c4a71b2faaf6b76f7b" kindref="member">UpdateState</ref>(<ref refid="class_recorder" kindref="compound">uint64_t</ref><sp/><ref refid="class_recorder" kindref="compound">CurrentSimNanos</ref>){</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_recorder" kindref="compound">CurrentSimNanos</ref><sp/>&gt;=<sp/>this-&gt;nextUpdateTime)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;msgRecordTimes.push_back(<ref refid="class_recorder" kindref="compound">CurrentSimNanos</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;msgWrittenTimes.push_back(this-&gt;readMessage.timeWritten());</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;msgRecord.push_back(this-&gt;readMessage());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;nextUpdateTime<sp/>+=<sp/>this-&gt;timeInterval;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="287" refid="class_recorder_1a600ead436d02555bdc789d4661667fe5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_recorder_1a600ead436d02555bdc789d4661667fe5" kindref="member">Reset</ref>(<ref refid="class_recorder" kindref="compound">uint64_t</ref><sp/><ref refid="class_recorder" kindref="compound">CurrentSimNanos</ref>){</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;msgRecord.clear();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;msgRecordTimes.clear();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;msgWrittenTimes.clear();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;nextUpdateTime<sp/>=<sp/><ref refid="class_recorder" kindref="compound">CurrentSimNanos</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="294" refid="class_recorder_1a9514a8cdf484b6f78a3e64d0a24d440e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;&amp;<sp/><ref refid="class_recorder_1a9514a8cdf484b6f78a3e64d0a24d440e" kindref="member">times</ref>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;msgRecordTimes;}</highlight></codeline>
<codeline lineno="296" refid="class_recorder_1af99f10a05385544e5f0c1f198c1ae16a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;&amp;<sp/><ref refid="class_recorder_1af99f10a05385544e5f0c1f198c1ae16a" kindref="member">timesWritten</ref>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;msgWrittenTimes;}</highlight></codeline>
<codeline lineno="298" refid="class_recorder_1a66874b92f5b2f0f270c00ca7d6858388" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;messageType&gt;&amp;<sp/><ref refid="class_recorder_1a66874b92f5b2f0f270c00ca7d6858388" kindref="member">record</ref>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;msgRecord;};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301" refid="class_recorder_1a05e22f586ac508c0b580ce6d72d0d852" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_recorder_1a05e22f586ac508c0b580ce6d72d0d852" kindref="member">findMsgName</ref>(std::string<sp/><ref refid="class_recorder" kindref="compound">msgName</ref>)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_recorder" kindref="compound">locMsg</ref><sp/>=<sp/><ref refid="class_recorder" kindref="compound">msgName</ref>.find(</highlight><highlight class="stringliteral">&quot;Payload&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_recorder" kindref="compound">locMsg</ref><sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">msgName</ref>.erase(<ref refid="class_recorder" kindref="compound">locMsg</ref>,<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">locMsg</ref><sp/>=<sp/><ref refid="class_recorder" kindref="compound">msgName</ref>.find(</highlight><highlight class="stringliteral">&quot;Message&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_recorder" kindref="compound">locMsg</ref><sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">msgName</ref>.replace(<ref refid="class_recorder" kindref="compound">locMsg</ref>,<sp/>7,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_recorder" kindref="compound">c</ref><sp/>=<sp/>0;<sp/><ref refid="class_recorder" kindref="compound">c</ref>&lt;10;<sp/><ref refid="class_recorder" kindref="compound">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">locMsg</ref><sp/>=<sp/><ref refid="class_recorder" kindref="compound">msgName</ref>.rfind(std::to_string(<ref refid="class_recorder" kindref="compound">c</ref>));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_recorder" kindref="compound">locMsg</ref><sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">msgName</ref>.erase(0,<sp/><ref refid="class_recorder" kindref="compound">locMsg</ref>+1);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recorder" kindref="compound">msgName</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="class_recorder_1a1054a982a62e40a40401e43dd6c08dff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_recorder_1a1054a982a62e40a40401e43dd6c08dff" kindref="member">clear</ref>(){</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;msgRecord.clear();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;msgRecordTimes.clear();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;msgWrittenTimes.clear();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="class_recorder_1ae076726846472beb9ef55ada292ed54e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">BSKLogger</ref><sp/><ref refid="class_recorder_1ae076726846472beb9ef55ada292ed54e" kindref="member">bskLogger</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="class_recorder_1ac7d569a619f95d2161bd4f70e9ffe630" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_recorder_1ac7d569a619f95d2161bd4f70e9ffe630" kindref="member">updateTimeInterval</ref>(<ref refid="class_recorder" kindref="compound">uint64_t</ref><sp/><ref refid="class_recorder" kindref="compound">timeDiff</ref>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;timeInterval<sp/>=<sp/><ref refid="class_recorder" kindref="compound">timeDiff</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;messageType&gt;<sp/>msgRecord;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/>msgRecordTimes;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/>msgWrittenTimes;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">uint64_t</ref><sp/>nextUpdateTime<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">uint64_t</ref><sp/>timeInterval;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recorder" kindref="compound">ReadFunctor&lt;messageType&gt;</ref><sp/>readMessage;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal">};</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/architecture/messaging/messaging.h"/>
  </compounddef>
</doxygen>
