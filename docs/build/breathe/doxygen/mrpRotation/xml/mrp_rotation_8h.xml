<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="mrp_rotation_8h" kind="file" language="C++">
    <compoundname>mrpRotation.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="yes">cMsgCInterface/AttStateMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/AttRefMsg_C.h</includes>
    <includes local="yes">architecture/utilities/bskLogging.h</includes>
    <includedby refid="mrp_rotation_8c" local="yes">/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h</label>
        <link refid="mrp_rotation_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="4">
        <label>cMsgCInterface/AttRefMsg_C.h</label>
      </node>
      <node id="3">
        <label>cMsgCInterface/AttStateMsg_C.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmrp_rotation_config" prot="public">mrpRotationConfig</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="mrp_rotation_8h_1adfe4e5fa92c861c7c5bfecafe0102030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_mrpRotation</definition>
        <argsstring>(mrpRotationConfig *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_mrpRotation</name>
        <param>
          <type><ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
<para>This method initializes the configData for mrpRotation model. It creates the module output message. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the null space control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h" line="56" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" bodystart="40" bodyend="45" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h" declline="56" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="mrp_rotation_8h_1a56a033ed8b084cb8009cd10ff613415e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_mrpRotation</definition>
        <argsstring>(mrpRotationConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_mrpRotation</name>
        <param>
          <type><ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
<para>This resets the module to original states. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the null space control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h" line="57" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" bodystart="54" bodyend="66" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h" declline="57" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="mrp_rotation_8h_1a10871218b2feaea0cc095348d85bfc55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_mrpRotation</definition>
        <argsstring>(mrpRotationConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_mrpRotation</name>
        <param>
          <type><ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
<para>This method takes the input attitude reference frame, and and superimposes the dynamics MRP scanning motion on top of this. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the mrpRotation module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>read in input reference frame message</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Check if a desired attitude configuration message exists. This allows for dynamic changes to the desired MRP rotation</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute time step to use in the integration downstream</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute output reference frame</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>write attitude guidance reference output</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Update last time the module was called to current call time</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h" line="58" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" bodystart="75" bodyend="117" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h" declline="58" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="mrp_rotation_8h_1ac25b30d633a7498e043e59dbd1be2b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checkRasterCommands</definition>
        <argsstring>(mrpRotationConfig *configData)</argsstring>
        <name>checkRasterCommands</name>
        <param>
          <type><ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <briefdescription>
<para>This function checks if there is a new commanded raster maneuver message available. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the mrpRotation module </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>check if a new attitude reference command message content is availble</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>copy over the commanded initial MRP and rate information</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>reset the prior commanded attitude state variables</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h" line="60" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" bodystart="125" bodyend="140" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h" declline="60" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="mrp_rotation_8h_1a5026fb8adc993ae9f003d1668aa050bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void computeTimeStep</definition>
        <argsstring>(mrpRotationConfig *configData, uint64_t callTime)</argsstring>
        <name>computeTimeStep</name>
        <param>
          <type><ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <briefdescription>
<para>This function computes control update time. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the mrpRotation module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h" line="61" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" bodystart="147" bodyend="155" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h" declline="61" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="mrp_rotation_8h_1a73523b22ce747907fb04af0c7b3c2c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void computeMRPRotationReference</definition>
        <argsstring>(mrpRotationConfig *configData, double sigma_R0N[3], double omega_R0N_N[3], double domega_R0N_N[3], AttRefMsgPayload *attRefOut)</argsstring>
        <name>computeMRPRotationReference</name>
        <param>
          <type><ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma_R0N</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>omega_R0N_N</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>domega_R0N_N</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>AttRefMsgPayload *</type>
          <declname>attRefOut</declname>
        </param>
        <briefdescription>
<para>This function computes the reference (MRP attitude Set, angular velocity and angular acceleration) associated with a rotation defined in terms of an initial MRP set and a constant angular velocity vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the mrpRotation module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sigma_R0N</parametername>
</parameternamelist>
<parameterdescription>
<para>The input reference attitude using MRPs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>omega_R0N_N</parametername>
</parameternamelist>
<parameterdescription>
<para>The input reference frame angular rate vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domega_R0N_N</parametername>
</parameternamelist>
<parameterdescription>
<para>The input reference frame angular acceleration vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attRefOut</parametername>
</parameternamelist>
<parameterdescription>
<para>The output message copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Compute attitude reference frame R/N information</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute angular velocity of R/N</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute angular acceleration of R/N</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h" line="62" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" bodystart="167" bodyend="201" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h" declline="62" declcolumn="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_MRP_ROTATION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_MRP_ROTATION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/AttStateMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/AttRefMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/bskLogging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structmrp_rotation_config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Declare<sp/>module<sp/>public<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structmrp_rotation_config_1a025cce359d0824e4b07b7a34fb610975" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mrpSet[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35" refid="structmrp_rotation_config_1a60ab73151de35c7f6f43540d840002ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_RR0_R[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Declare<sp/>module<sp/>private<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structmrp_rotation_config_1a4d0d55e466dad06c73494b2b053fb4f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cmdSet[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="structmrp_rotation_config_1a2486db4ed77cd4b7bfa3b0e661f229e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cmdRates[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="structmrp_rotation_config_1aa98147aea637f99836f94b07b1702fcb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>priorCmdSet[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="structmrp_rotation_config_1a44fcda1412f09bd95abaadaa32fd5f56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>priorCmdRates[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="structmrp_rotation_config_1a2ae5d71f7ea1b226fd052a5704386740" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structmrp_rotation_config_1a2ae5d71f7ea1b226fd052a5704386740" kindref="member">priorTime</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="structmrp_rotation_config_1a17ac7a36465f230813b3b57a2c5771a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structmrp_rotation_config_1a17ac7a36465f230813b3b57a2c5771a9" kindref="member">dt</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Declare<sp/>module<sp/>IO<sp/>interfaces<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structmrp_rotation_config_1a875097ffd1bf430eb507e1fcb2816307" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsg_C<sp/><ref refid="structmrp_rotation_config_1a875097ffd1bf430eb507e1fcb2816307" kindref="member">attRefOutMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="structmrp_rotation_config_1a032c93a075189c70a3996d55fd4bad4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsg_C<sp/><ref refid="structmrp_rotation_config_1a032c93a075189c70a3996d55fd4bad4c" kindref="member">attRefInMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="structmrp_rotation_config_1a5f80e107083577e43ba8529ffb2f9c37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>AttStateMsg_C<sp/><sp/><ref refid="structmrp_rotation_config_1a5f80e107083577e43ba8529ffb2f9c37" kindref="member">desiredAttInMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structmrp_rotation_config_1a0ad3f0a5ad863b837ed6c4e56e186384" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BSKLogger<sp/>*<ref refid="structmrp_rotation_config_1a0ad3f0a5ad863b837ed6c4e56e186384" kindref="member">bskLogger</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_mrpRotation(<ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_mrpRotation(<ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_mrpRotation(<ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkRasterCommands(<ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref><sp/>*configData);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeTimeStep(<ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeMRPRotationReference(<ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref><sp/>*configData,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma_R0N[3],</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_R0N_N[3],</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>domega_R0N_N[3],</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttRefMsgPayload<sp/><sp/><sp/>*attRefOut);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h"/>
  </compounddef>
</doxygen>
