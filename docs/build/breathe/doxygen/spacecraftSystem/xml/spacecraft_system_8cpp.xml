<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="spacecraft_system_8cpp" kind="file" language="C++">
    <compoundname>spacecraftSystem.cpp</compoundname>
    <includes refid="spacecraft_system_8h" local="yes">spacecraftSystem.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="yes">../_GeneralModuleFiles/svIntegratorRK4.h</includes>
    <includes local="yes">architecture/utilities/avsEigenSupport.h</includes>
    <includes local="yes">architecture/utilities/avsEigenMRP.h</includes>
    <includes local="yes">../../../architecture/utilities/rigidBodyKinematics.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="22">
        <label>../../../architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="5">
        <label>../_GeneralModuleFiles/dynParamManager.h</label>
      </node>
      <node id="7">
        <label>../_GeneralModuleFiles/dynamicEffector.h</label>
      </node>
      <node id="9">
        <label>../_GeneralModuleFiles/dynamicObject.h</label>
      </node>
      <node id="8">
        <label>../_GeneralModuleFiles/gravityEffector.h</label>
      </node>
      <node id="12">
        <label>../_GeneralModuleFiles/hubEffector.h</label>
      </node>
      <node id="6">
        <label>../_GeneralModuleFiles/stateEffector.h</label>
      </node>
      <node id="10">
        <label>../_GeneralModuleFiles/stateVecIntegrator.h</label>
      </node>
      <node id="19">
        <label>../_GeneralModuleFiles/svIntegratorRK4.h</label>
      </node>
      <node id="11">
        <label>../_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/dynamics/spacecraftSystem/spacecraftSystem.cpp</label>
        <link refid="spacecraft_system_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>spacecraftSystem.h</label>
        <link refid="spacecraft_system_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="15">
        <label>architecture/msgPayloadDefC/SCEnergyMomentumMsgPayload.h</label>
      </node>
      <node id="14">
        <label>architecture/msgPayloadDefC/SCMassPropsMsgPayload.h</label>
      </node>
      <node id="13">
        <label>architecture/msgPayloadDefC/SCStatesMsgPayload.h</label>
      </node>
      <node id="21">
        <label>architecture/utilities/avsEigenMRP.h</label>
      </node>
      <node id="20">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="17">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="18">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="23">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spacecraftSystem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../_GeneralModuleFiles/svIntegratorRK4.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenSupport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenMRP.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">SpacecraftUnit::SpacecraftUnit()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>default<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a8a830b45a78c6c0e7666917d2200746c" kindref="member">spacecraftName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;spacecraft&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>values<sp/>to<sp/>either<sp/>zero<sp/>or<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1ac73744519357b2ba9adfa7009fb8f1b0" kindref="member">dvAccum_CN_B</ref>.setZero();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a0a8274a0e04c0f9b29d6a03b9ae51229" kindref="member">dvAccum_BN_B</ref>.setZero();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">SpacecraftUnit::~SpacecraftUnit()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_unit_1abf8a4ba2a5a05b1c852c162671802083" kindref="member">SpacecraftUnit::addStateEffector</ref>(StateEffector<sp/>*newStateEffector)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.push_back(newStateEffector);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Give<sp/>the<sp/>stateEffector<sp/>the<sp/>name<sp/>of<sp/>the<sp/>spacecraft<sp/>it<sp/>is<sp/>attached<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>newStateEffector-&gt;nameOfSpacecraftAttachedTo<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a8a830b45a78c6c0e7666917d2200746c" kindref="member">spacecraftName</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_unit_1aefe890e240131f67ef095b55e8a51acc" kindref="member">SpacecraftUnit::addDynamicEffector</ref>(DynamicEffector<sp/>*newDynamicEffector)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a98e6d9333b0c3ec06255e684d4b0cb12" kindref="member">dynEffectors</ref>.push_back(newDynamicEffector);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_unit_1a463ff3e62a0a25fcf4516b300eb5b07c" kindref="member">SpacecraftUnit::addDockingPort</ref>(<ref refid="struct_docking_data" kindref="compound">DockingData</ref><sp/>*newDockingPort)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1ac50dcd9260157bb52070e591dcae8641" kindref="member">dockingPoints</ref>.push_back(newDockingPort);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_unit_1a4423ccc2926e1334f079f0dd5f4f305f" kindref="member">SpacecraftUnit::SelfInitSC</ref>(int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_unit_1a843bdacaac79688da31859e3e36163d7" kindref="member">SpacecraftUnit::ResetSC</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.Reset(CurrentSimNanos);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_unit_1a25b63efcf8529d876a6cf8dd546ae973" kindref="member">SpacecraftUnit::writeOutputMessagesSC</ref>(uint64_t<sp/>clockTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Write<sp/>output<sp/>messages<sp/>for<sp/>each<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Populate<sp/>state<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>SCStatesMsgPayload<sp/>stateOut;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>stateOut<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a4e441237d1d8b08369c7c3527b5314c6" kindref="member">scStateOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(*this-&gt;<ref refid="class_spacecraft_unit_1a180fa5005a74a39617ad7890a041553e" kindref="member">inertialPositionProperty</ref>,<sp/>stateOut.r_BN_N);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(*this-&gt;<ref refid="class_spacecraft_unit_1a81894d5710b27fe54e6a16869ae139f4" kindref="member">inertialVelocityProperty</ref>,<sp/>stateOut.v_BN_N);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigmaLocal_BN;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaLocal_BN<sp/>=<sp/>(Eigen::Vector3d)<sp/>this-&gt;hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_NB<sp/>=<sp/>sigmaLocal_BN.toRotationMatrix();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rLocal_CN_N<sp/>=<sp/>(*this-&gt;<ref refid="class_spacecraft_unit_1a180fa5005a74a39617ad7890a041553e" kindref="member">inertialPositionProperty</ref>)<sp/>+<sp/>dcm_NB*(*this-&gt;c_B);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>vLocal_CN_N<sp/>=<sp/>(*this-&gt;<ref refid="class_spacecraft_unit_1a81894d5710b27fe54e6a16869ae139f4" kindref="member">inertialVelocityProperty</ref>)<sp/>+<sp/>dcm_NB*(*this-&gt;cDot_B);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(rLocal_CN_N,<sp/>stateOut.r_CN_N);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(vLocal_CN_N,<sp/>stateOut.v_CN_N);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(this-&gt;hubSigma-&gt;getState(),<sp/>stateOut.sigma_BN);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(this-&gt;hubOmega_BN_B-&gt;getState(),<sp/>stateOut.omega_BN_B);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(this-&gt;<ref refid="class_spacecraft_unit_1ac73744519357b2ba9adfa7009fb8f1b0" kindref="member">dvAccum_CN_B</ref>,<sp/>stateOut.TotalAccumDVBdy);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>stateOut.MRPSwitchCount<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.MRPSwitchCount;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(this-&gt;<ref refid="class_spacecraft_unit_1a0a8274a0e04c0f9b29d6a03b9ae51229" kindref="member">dvAccum_BN_B</ref>,<sp/>stateOut.TotalAccumDV_BN_B);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;<ref refid="class_spacecraft_unit_1a3222e7288fe00c331f5ccd09168949cb" kindref="member">nonConservativeAccelpntB_B</ref>,<sp/>stateOut.nonConservativeAccelpntB_B);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;<ref refid="class_spacecraft_unit_1ad1df7ae3c22c24c89c600471db35aa80" kindref="member">omegaDot_BN_B</ref>,<sp/>stateOut.omegaDot_BN_B);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a4e441237d1d8b08369c7c3527b5314c6" kindref="member">scStateOutMsg</ref>.write(&amp;stateOut,<sp/>moduleID,<sp/>clockTime);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Populate<sp/>mass<sp/>state<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>SCMassPropsMsgPayload<sp/>massStateOut;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>massStateOut<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a5eecdd47c21825020dc01ee6205cbe5f" kindref="member">scMassStateOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>massStateOut.massSC<sp/>=<sp/>(*this-&gt;m_SC)(0,0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(*this-&gt;c_B,<sp/>massStateOut.c_B);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(*this-&gt;ISCPntB_B,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)massStateOut.ISC_PntB_B);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a5eecdd47c21825020dc01ee6205cbe5f" kindref="member">scMassStateOutMsg</ref>.write(&amp;massStateOut,<sp/>moduleID,<sp/>clockTime);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Populate<sp/>energy<sp/>momentum<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>SCEnergyMomentumMsgPayload<sp/>energyMomentumOut;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>energyMomentumOut<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a5354643e1eb5e2e34cc429436bc2b424" kindref="member">scEnergyMomentumOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>energyMomentumOut.spacecraftRotEnergy<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1aa1b82e0fb52324b7495fa2c3acf5fba1" kindref="member">totRotEnergy</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>energyMomentumOut.spacecraftOrbEnergy<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a0182b827b48d14767e490a5ba8b45f57" kindref="member">totOrbEnergy</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;<ref refid="class_spacecraft_unit_1a8285a03edb471308947b67b8ef163619" kindref="member">totRotAngMomPntC_N</ref>,<sp/>energyMomentumOut.spacecraftRotAngMomPntC_N);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;<ref refid="class_spacecraft_unit_1a601738e395152e20e2862e5444baf05e" kindref="member">totOrbAngMomPntN_N</ref>,<sp/>energyMomentumOut.spacecraftOrbAngMomPntN_N);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a5354643e1eb5e2e34cc429436bc2b424" kindref="member">scEnergyMomentumOutMsg</ref>.write(&amp;energyMomentumOut,<sp/>moduleID,<sp/>clockTime);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_unit_1a340ccfd87c401c9a48ac313a15d81b3a" kindref="member">SpacecraftUnit::linkInStatesSC</ref>(DynParamManager&amp;<sp/>statesIn)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>access<sp/>to<sp/>all<sp/>spacecraft<sp/>hub<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hubR_N<sp/>=<sp/>statesIn.getStateObject(this-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.nameOfHubPosition);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hubV_N<sp/>=<sp/>statesIn.getStateObject(this-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.nameOfHubVelocity);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hubSigma<sp/>=<sp/>statesIn.getStateObject(this-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.nameOfHubSigma);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Need<sp/>sigmaBN<sp/>for<sp/>MRP<sp/>switching<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hubOmega_BN_B<sp/>=<sp/>statesIn.getStateObject(this-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.nameOfHubOmega);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hubGravVelocity<sp/>=<sp/>statesIn.getStateObject(this-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.nameOfHubGravVelocity);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;BcGravVelocity<sp/>=<sp/>statesIn.getStateObject(this-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.nameOfBcGravVelocity);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>access<sp/>to<sp/>the<sp/>hubs<sp/>position<sp/>and<sp/>velocity<sp/>in<sp/>the<sp/>property<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a180fa5005a74a39617ad7890a041553e" kindref="member">inertialPositionProperty</ref><sp/>=<sp/>statesIn.getPropertyReference(this-&gt;<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.inertialPositionPropName);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a81894d5710b27fe54e6a16869ae139f4" kindref="member">inertialVelocityProperty</ref><sp/>=<sp/>statesIn.getPropertyReference(this-&gt;<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.inertialVelocityPropName);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;g_N<sp/>=<sp/>statesIn.getPropertyReference(this-&gt;<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.vehicleGravityPropName);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_unit_1ae3ccd5694b37d4202bd52984f1239dc5" kindref="member">SpacecraftUnit::initializeDynamicsSC</ref>(DynParamManager&amp;<sp/>statesIn)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Spacecraft()<sp/>initiates<sp/>all<sp/>of<sp/>the<sp/>spaceCraft<sp/>mass<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initM_SC(1,1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initMDot_SC(1,1);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initC_B(3,1);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initISCPntB_B(3,3);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initCPrime_B(3,1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initCDot_B(3,1);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>initISCPntBPrime_B(3,3);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Create<sp/>the<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tmpName;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpName<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a8a830b45a78c6c0e7666917d2200746c" kindref="member">spacecraftName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;m_SC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_SC<sp/>=<sp/>statesIn.createProperty(tmpName,<sp/>initM_SC);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpName<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a8a830b45a78c6c0e7666917d2200746c" kindref="member">spacecraftName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;mDot_SC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mDot_SC<sp/>=<sp/>statesIn.createProperty(tmpName,<sp/>initMDot_SC);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpName<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a8a830b45a78c6c0e7666917d2200746c" kindref="member">spacecraftName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;centerOfMassSC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;c_B<sp/>=<sp/>statesIn.createProperty(tmpName,<sp/>initC_B);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpName<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a8a830b45a78c6c0e7666917d2200746c" kindref="member">spacecraftName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;inertiaSC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ISCPntB_B<sp/>=<sp/>statesIn.createProperty(tmpName,<sp/>initISCPntB_B);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpName<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a8a830b45a78c6c0e7666917d2200746c" kindref="member">spacecraftName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;inertiaPrimeSC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ISCPntBPrime_B<sp/>=<sp/>statesIn.createProperty(tmpName,<sp/>initISCPntBPrime_B);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpName<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a8a830b45a78c6c0e7666917d2200746c" kindref="member">spacecraftName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;centerOfMassPrimeSC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cPrime_B<sp/>=<sp/>statesIn.createProperty(tmpName,<sp/>initCPrime_B);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpName<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a8a830b45a78c6c0e7666917d2200746c" kindref="member">spacecraftName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;centerOfMassDotSC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cDot_B<sp/>=<sp/>statesIn.createProperty(tmpName,<sp/>initCDot_B);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Give<sp/>name<sp/>of<sp/>all<sp/>spacecraft<sp/>to<sp/>attached<sp/>hubEffector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.nameOfSpacecraftAttachedTo<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a8a830b45a78c6c0e7666917d2200746c" kindref="member">spacecraftName</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Give<sp/>name<sp/>of<sp/>all<sp/>spacecraft<sp/>to<sp/>attached<sp/>hubEffector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.nameOfSpacecraftAttachedTo<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a8a830b45a78c6c0e7666917d2200746c" kindref="member">spacecraftName</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Before<sp/>er&apos;body<sp/>registers<sp/>their<sp/>properties,<sp/>we<sp/>need<sp/>to<sp/>prepend<sp/>their<sp/>state<sp/>names<sp/>with<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.prependSpacecraftNameToStates();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.prependSpacecraftNameToStates();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>stateIt;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(stateIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.begin();<sp/>stateIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.end();<sp/>stateIt++)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*stateIt)-&gt;prependSpacecraftNameToStates();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Register<sp/>the<sp/>gravity<sp/>properties<sp/>with<sp/>the<sp/>dynManager,<sp/>&apos;erbody<sp/>wants<sp/>g_N!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.registerProperties(statesIn);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Register<sp/>the<sp/>hub<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.registerStates(statesIn);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>stateEffectors<sp/>to<sp/>register<sp/>their<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(stateIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.begin();<sp/>stateIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.end();<sp/>stateIt++)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*stateIt)-&gt;registerStates(statesIn);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Link<sp/>in<sp/>states<sp/>for<sp/>the<sp/>spacecraft,<sp/>gravity<sp/>and<sp/>the<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a340ccfd87c401c9a48ac313a15d81b3a" kindref="member">linkInStatesSC</ref>(statesIn);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.linkInStates(statesIn);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.linkInStates(statesIn);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>the<sp/>stateEffectors<sp/>to<sp/>link<sp/>in<sp/>the<sp/>states<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(stateIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.begin();<sp/>stateIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.end();<sp/>stateIt++)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*stateIt)-&gt;linkInStates(statesIn);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>the<sp/>dynamicEffectors<sp/>to<sp/>link<sp/>in<sp/>the<sp/>states<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DynamicEffector*&gt;::iterator<sp/>dynIt;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dynIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a98e6d9333b0c3ec06255e684d4b0cb12" kindref="member">dynEffectors</ref>.begin();<sp/>dynIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_unit_1a98e6d9333b0c3ec06255e684d4b0cb12" kindref="member">dynEffectors</ref>.end();<sp/>dynIt++)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*dynIt)-&gt;linkInStates(statesIn);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><ref refid="class_spacecraft_system_1adffb01adf98e06b30063dbaddf963021" kindref="member">SpacecraftSystem::SpacecraftSystem</ref>()</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>default<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1acef37d41484287a12675d32d23340b18" kindref="member">sysTimePropertyName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;systemTime&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>values<sp/>to<sp/>either<sp/>zero<sp/>or<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a255095e7af047da3330fd4999136a6ef" kindref="member">currTimeStep</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1aa3c03f6a8c83e9c36741d59204bb509d" kindref="member">timePrevious</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1ac02493b15e676da41d0b1d342f15cf9b" kindref="member">simTimePrevious</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a8a3535be3bab274615e7c565f943478a" kindref="member">numOutMsgBuffers</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>integrator<sp/>as<sp/>RK4<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;integrator<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>svIntegratorRK4(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1aa606d710003104370c90fed0272a9eb0" kindref="member">numberOfSCAttachedToPrimary</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><ref refid="class_spacecraft_system_1aefaeeee330133aa6f974a20336ee0f3e" kindref="member">SpacecraftSystem::~SpacecraftSystem</ref>()</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1af64e355724b55e68a06db1be9b80f383" kindref="member">SpacecraftSystem::addSpacecraftUndocked</ref>(<ref refid="class_spacecraft_unit" kindref="compound">SpacecraftUnit</ref><sp/>*newSpacecraft)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.push_back(newSpacecraft);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1a776745d9ba910f60dfc28246c19091ce" kindref="member">SpacecraftSystem::attachSpacecraftToPrimary</ref>(<ref refid="class_spacecraft_unit" kindref="compound">SpacecraftUnit</ref><sp/>*newSpacecraft,<sp/>std::string<sp/>dockingPortNameOfNewSpacecraft,<sp/>std::string<sp/>dockingToPortName)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>chain<sp/>of<sp/>docked<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DockingData*&gt;::iterator<sp/>dockingItPrimary;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>checkDock<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dockingItPrimary<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1ac50dcd9260157bb52070e591dcae8641" kindref="member">dockingPoints</ref>.begin();<sp/>dockingItPrimary<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1ac50dcd9260157bb52070e591dcae8641" kindref="member">dockingPoints</ref>.end();<sp/>dockingItPrimary++)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DockingData*&gt;::iterator<sp/>dockingIt;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dockingToPortName<sp/>==<sp/>(*dockingItPrimary)-&gt;portName)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dockingIt<sp/>=<sp/>newSpacecraft-&gt;<ref refid="class_spacecraft_unit_1ac50dcd9260157bb52070e591dcae8641" kindref="member">dockingPoints</ref>.begin();<sp/>dockingIt<sp/>!=<sp/>newSpacecraft-&gt;<ref refid="class_spacecraft_unit_1ac50dcd9260157bb52070e591dcae8641" kindref="member">dockingPoints</ref>.end();<sp/>dockingIt++)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dockingPortNameOfNewSpacecraft<sp/>==<sp/>(*dockingIt)-&gt;portName)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*dockingIt)-&gt;r_DP_P<sp/>=<sp/>(*dockingItPrimary)-&gt;r_DP_P;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*dockingIt)-&gt;dcm_DP<sp/>=<sp/>(*dockingItPrimary)-&gt;dcm_DP;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSpacecraft-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.dcm_BP<sp/>=<sp/>(*dockingIt)-&gt;dcm_DB.transpose()*(*dockingIt)-&gt;dcm_DP;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSpacecraft-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.r_BP_P<sp/>=<sp/>(*dockingIt)-&gt;r_DP_P<sp/>-<sp/>newSpacecraft-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.dcm_BP.transpose()*(*dockingIt)-&gt;r_DB_B;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkDock<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>Port<sp/>name<sp/>given<sp/>is<sp/>not<sp/>the<sp/>same<sp/>port<sp/>name<sp/>held<sp/>in<sp/>the<sp/>newSpacecraft&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Quitting.&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkDock<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftConnectedIt;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DockingData*&gt;::iterator<sp/>dockingItConnected;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dockingItConnected<sp/>=<sp/>(*spacecraftConnectedIt)-&gt;dockingPoints.begin();<sp/>dockingItConnected<sp/>!=<sp/>(*spacecraftConnectedIt)-&gt;dockingPoints.end();<sp/>dockingItConnected++)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DockingData*&gt;::iterator<sp/>dockingIt;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dockingToPortName<sp/>==<sp/>(*dockingItConnected)-&gt;portName)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dockingIt<sp/>=<sp/>newSpacecraft-&gt;<ref refid="class_spacecraft_unit_1ac50dcd9260157bb52070e591dcae8641" kindref="member">dockingPoints</ref>.begin();<sp/>dockingIt<sp/>!=<sp/>newSpacecraft-&gt;<ref refid="class_spacecraft_unit_1ac50dcd9260157bb52070e591dcae8641" kindref="member">dockingPoints</ref>.end();<sp/>dockingIt++)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dockingPortNameOfNewSpacecraft<sp/>==<sp/>(*dockingIt)-&gt;portName)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*dockingIt)-&gt;r_DP_P<sp/>=<sp/>(*dockingItConnected)-&gt;r_DP_P;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*dockingIt)-&gt;dcm_DP<sp/>=<sp/>(*dockingItConnected)-&gt;dcm_DP;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSpacecraft-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.dcm_BP<sp/>=<sp/>(*dockingIt)-&gt;dcm_DB.transpose()*(*dockingIt)-&gt;dcm_DP;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSpacecraft-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.r_BP_P<sp/>=<sp/>(*dockingIt)-&gt;r_DP_P<sp/>-<sp/>newSpacecraft-&gt;<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.dcm_BP.transpose()*(*dockingIt)-&gt;r_DB_B;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkDock<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>Port<sp/>name<sp/>given<sp/>is<sp/>not<sp/>the<sp/>same<sp/>port<sp/>name<sp/>held<sp/>in<sp/>the<sp/>newSpacecraft&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Quitting.&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkDock<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>The<sp/>new<sp/>spacecraft<sp/>did<sp/>not<sp/>get<sp/>attached<sp/>due<sp/>to<sp/>naming<sp/>problems<sp/>with<sp/>the<sp/>ports&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Quitting.&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1aa606d710003104370c90fed0272a9eb0" kindref="member">numberOfSCAttachedToPrimary</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSpacecraft-&gt;<ref refid="class_spacecraft_unit_1af013e0506a175402d4cca4a28daa96a0" kindref="member">docked</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1af013e0506a175402d4cca4a28daa96a0" kindref="member">docked</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.push_back(newSpacecraft);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1a45cf1aed8029392fed3fc16f4aa3bd18" kindref="member">SpacecraftSystem::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a843bdacaac79688da31859e3e36163d7" kindref="member">ResetSC</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>connected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftConnectedIt;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftConnectedIt)-&gt;ResetSC(CurrentSimNanos);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>unconnected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftUnConnectedIt;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftUnConnectedIt)-&gt;ResetSC(CurrentSimNanos);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>method<sp/>for<sp/>initializing<sp/>the<sp/>dynamics<sp/>of<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1ac66b7856e0753ea7bdf25cc1b0037071" kindref="member">initializeDynamics</ref>();</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1a418283f717ec8daf2cf5d9d0170bb120" kindref="member">SpacecraftSystem::writeOutputMessages</ref>(uint64_t<sp/>clockTime)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>writeOutputMessages<sp/>for<sp/>primary<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a25b63efcf8529d876a6cf8dd546ae973" kindref="member">writeOutputMessagesSC</ref>(clockTime,<sp/>this-&gt;moduleID);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>connected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftConnectedIt;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftConnectedIt)-&gt;writeOutputMessagesSC(clockTime,<sp/>this-&gt;moduleID);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>unconnected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftUnConnectedIt;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftUnConnectedIt)-&gt;writeOutputMessagesSC(clockTime,<sp/>this-&gt;moduleID);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1a9184ecb23127370c6fb800cd01e0fd25" kindref="member">SpacecraftSystem::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Convert<sp/>current<sp/>time<sp/>to<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newTime<sp/>=<sp/>CurrentSimNanos*NANO2SEC;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>access<sp/>to<sp/>the<sp/>spice<sp/>bodies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.UpdateState(CurrentSimNanos);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>connected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftConnectedIt;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftConnectedIt)-&gt;gravField.UpdateState(CurrentSimNanos);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>unconnected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftUnConnectedIt;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftUnConnectedIt)-&gt;gravField.UpdateState(CurrentSimNanos);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Integrate<sp/>the<sp/>state<sp/>forward<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;integrateState(newTime);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Update<sp/>the<sp/>inertial<sp/>position<sp/>of<sp/>each<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rLocal_BN_N<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubR_N-&gt;getState();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>vLocal_BN_N<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubV_N-&gt;getState();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.updateInertialPosAndVel(rLocal_BN_N,<sp/>vLocal_BN_N);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Same<sp/>thing<sp/>for<sp/>all<sp/>of<sp/>the<sp/>connected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rLocal_BN_N<sp/>=<sp/>(*spacecraftConnectedIt)-&gt;hubR_N-&gt;getState();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vLocal_BN_N<sp/>=<sp/>(*spacecraftConnectedIt)-&gt;hubV_N-&gt;getState();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftConnectedIt)-&gt;gravField.updateInertialPosAndVel(rLocal_BN_N,<sp/>vLocal_BN_N);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Same<sp/>thing<sp/>for<sp/>all<sp/>of<sp/>the<sp/>connected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rLocal_BN_N<sp/>=<sp/>(*spacecraftUnConnectedIt)-&gt;hubR_N-&gt;getState();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vLocal_BN_N<sp/>=<sp/>(*spacecraftUnConnectedIt)-&gt;hubV_N-&gt;getState();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftUnConnectedIt)-&gt;gravField.updateInertialPosAndVel(rLocal_BN_N,<sp/>vLocal_BN_N);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Write<sp/>the<sp/>state<sp/>of<sp/>the<sp/>vehicle<sp/>into<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a418283f717ec8daf2cf5d9d0170bb120" kindref="member">writeOutputMessages</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1ac02493b15e676da41d0b1d342f15cf9b" kindref="member">simTimePrevious</ref><sp/>=<sp/>CurrentSimNanos;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1ac66b7856e0753ea7bdf25cc1b0037071" kindref="member">SpacecraftSystem::initializeDynamics</ref>()</highlight></codeline>
<codeline lineno="430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>systemTime(2,1);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>systemTime.setZero();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sysTime<sp/>=<sp/>this-&gt;dynManager.createProperty(this-&gt;<ref refid="class_spacecraft_system_1acef37d41484287a12675d32d23340b18" kindref="member">sysTimePropertyName</ref>,<sp/>systemTime);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>initializeDynamics<sp/>for<sp/>primary<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1ae3ccd5694b37d4202bd52984f1239dc5" kindref="member">initializeDynamicsSC</ref>(this-&gt;dynManager);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>connected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftConnectedIt;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftConnectedIt)-&gt;initializeDynamicsSC(this-&gt;dynManager);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>unconnected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftUnConnectedIt;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftUnConnectedIt)-&gt;initializeDynamicsSC(this-&gt;dynManager);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Update<sp/>the<sp/>mass<sp/>properties<sp/>of<sp/>the<sp/>spacecraft<sp/>to<sp/>retrieve<sp/>c_B<sp/>and<sp/>cDot_B<sp/>to<sp/>update<sp/>r_BN_N<sp/>and<sp/>v_BN_N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1abb0a617141d737c550757f2c639ead4a" kindref="member">updateSystemMassProps</ref>(0.0);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>mass<sp/>props<sp/>for<sp/>all<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a5270c807cea836719424cfe2083c2188" kindref="member">updateSpacecraftMassProps</ref>(0.0,<sp/>(*(*spacecraftUnConnectedIt)));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Edit<sp/>r_BN_N<sp/>and<sp/>v_BN_N<sp/>to<sp/>take<sp/>into<sp/>account<sp/>that<sp/>point<sp/>B<sp/>and<sp/>point<sp/>C<sp/>are<sp/>not<sp/>coincident</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Pulling<sp/>the<sp/>state<sp/>from<sp/>the<sp/>hub<sp/>at<sp/>this<sp/>time<sp/>gives<sp/>us<sp/>r_CN_N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a674ba2b5b1c8ecc141cb11a8fb9b6b60" kindref="member">initializeSCPosVelocity</ref>(this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>determine<sp/>the<sp/>initial<sp/>hub<sp/>states<sp/>for<sp/>spacecraft<sp/>connected<sp/>to<sp/>the<sp/>primary<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a49cad62bf64f993cbc6f03d4e4b024d7" kindref="member">determineAttachedSCStates</ref>();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Initialize<sp/>this<sp/>for<sp/>all<sp/>other<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>mass<sp/>props<sp/>for<sp/>all<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a674ba2b5b1c8ecc141cb11a8fb9b6b60" kindref="member">initializeSCPosVelocity</ref>((*(*spacecraftUnConnectedIt)));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>all<sp/>stateEffectors<sp/>in<sp/>each<sp/>spacecraft<sp/>to<sp/>give<sp/>them<sp/>body<sp/>frame<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftIt;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftIt++)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>stateIt;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(stateIt<sp/>=<sp/>(*spacecraftIt)-&gt;states.begin();<sp/>stateIt<sp/>!=<sp/>(*spacecraftIt)-&gt;states.end();<sp/>stateIt++)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*stateIt)-&gt;receiveMotherSpacecraftData((*spacecraftIt)-&gt;hub.r_BP_P,<sp/>(*spacecraftIt)-&gt;hub.dcm_BP);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>equations<sp/>of<sp/>motion<sp/>at<sp/>time<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1aa4f0a13101addc4f05595197887fd5f3" kindref="member">equationsOfMotion</ref>(0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1a5270c807cea836719424cfe2083c2188" kindref="member">SpacecraftSystem::updateSpacecraftMassProps</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time,<sp/><ref refid="class_spacecraft_unit" kindref="compound">SpacecraftUnit</ref>&amp;<sp/>spacecraft)</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Zero<sp/>the<sp/>properties<sp/>which<sp/>will<sp/>get<sp/>populated<sp/>in<sp/>this<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>(*spacecraft.m_SC).setZero();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>(*spacecraft.mDot_SC).setZero();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>(*spacecraft.c_B).setZero();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>(*spacecraft.ISCPntB_B).setZero();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>(*spacecraft.cPrime_B).setZero();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>(*spacecraft.cDot_B).setZero();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>(*spacecraft.ISCPntBPrime_B).setZero();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>in<sp/>hubs<sp/>mass<sp/>props<sp/>to<sp/>the<sp/>spacecraft<sp/>mass<sp/>props</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.updateEffectorMassProps(time);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>(*spacecraft.m_SC)(0,0)<sp/>+=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.effProps.mEff;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>(*spacecraft.ISCPntB_B)<sp/>+=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.effProps.IEffPntB_B;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>(*spacecraft.c_B)<sp/>+=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.effProps.mEff*spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.effProps.rEff_CB_B;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>state<sp/>effectors<sp/>to<sp/>get<sp/>mass<sp/>props</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;updateEffectorMassProps(time);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Add<sp/>in<sp/>effectors<sp/>mass<sp/>props<sp/>into<sp/>mass<sp/>props<sp/>of<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraft.m_SC)(0,0)<sp/>+=<sp/>(*it)-&gt;effProps.mEff;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraft.mDot_SC)(0,0)<sp/>+=<sp/>(*it)-&gt;effProps.mEffDot;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraft.ISCPntB_B)<sp/>+=<sp/>(*it)-&gt;effProps.IEffPntB_B;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraft.c_B)<sp/>+=<sp/>(*it)-&gt;effProps.mEff*(*it)-&gt;effProps.rEff_CB_B;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraft.ISCPntBPrime_B)<sp/>+=<sp/>(*it)-&gt;effProps.IEffPrimePntB_B;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraft.cPrime_B)<sp/>+=<sp/>(*it)-&gt;effProps.mEff*(*it)-&gt;effProps.rEffPrime_CB_B;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>high<sp/>fidelity<sp/>mass<sp/>depletion,<sp/>this<sp/>is<sp/>left<sp/>out:<sp/>+=<sp/>(*it)-&gt;effProps.mEffDot*(*it)-&gt;effProps.rEff_CB_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Divide<sp/>c_B<sp/>and<sp/>cPrime_B<sp/>by<sp/>the<sp/>total<sp/>mass<sp/>of<sp/>the<sp/>spaceCraft<sp/>to<sp/>finalize<sp/>c_B<sp/>and<sp/>cPrime_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>(*spacecraft.c_B)<sp/>=<sp/>(*spacecraft.c_B)/(*spacecraft.m_SC)(0,0);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>(*spacecraft.cPrime_B)<sp/>=<sp/>(*spacecraft.cPrime_B)/(*spacecraft.m_SC)(0,0)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>(*spacecraft.mDot_SC)(0,0)*(*spacecraft.c_B)/(*spacecraft.m_SC)(0,0)/(*spacecraft.m_SC)(0,0);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaLocal_BN_B<sp/>=<sp/>spacecraft.hubOmega_BN_B-&gt;getState();</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cLocal_B<sp/>=<sp/>(*spacecraft.c_B);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>(*spacecraft.cDot_B)<sp/>=<sp/>(*spacecraft.cPrime_B)<sp/>+<sp/>omegaLocal_BN_B.cross(cLocal_B);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1abb0a617141d737c550757f2c639ead4a" kindref="member">SpacecraftSystem::updateSystemMassProps</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Zero<sp/>the<sp/>properties<sp/>which<sp/>will<sp/>get<sp/>populated<sp/>in<sp/>this<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC).setZero();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.mDot_SC).setZero();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B).setZero();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.ISCPntB_B).setZero();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.cPrime_B).setZero();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.cDot_B).setZero();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.ISCPntBPrime_B).setZero();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>in<sp/>hubs<sp/>mass<sp/>props<sp/>to<sp/>the<sp/>spacecraft<sp/>mass<sp/>props</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.updateEffectorMassProps(time);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.effProps.mEff;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.ISCPntB_B)<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.effProps.IEffPntB_B;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B)<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.effProps.mEff*this-&gt;primaryCentralSpacecraft.hub.effProps.rEff_CB_B;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>state<sp/>effectors<sp/>to<sp/>get<sp/>mass<sp/>props</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;updateEffectorMassProps(time);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Add<sp/>in<sp/>effectors<sp/>mass<sp/>props<sp/>into<sp/>mass<sp/>props<sp/>of<sp/>this-&gt;primaryCentralSpacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)<sp/>+=<sp/>(*it)-&gt;effProps.mEff;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.mDot_SC)(0,0)<sp/>+=<sp/>(*it)-&gt;effProps.mEffDot;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.ISCPntB_B)<sp/>+=<sp/>(*it)-&gt;effProps.IEffPntB_B;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B)<sp/>+=<sp/>(*it)-&gt;effProps.mEff*(*it)-&gt;effProps.rEff_CB_B;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.ISCPntBPrime_B)<sp/>+=<sp/>(*it)-&gt;effProps.IEffPrimePntB_B;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.cPrime_B)<sp/>+=<sp/>(*it)-&gt;effProps.mEff*(*it)-&gt;effProps.rEffPrime_CB_B;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>high<sp/>fidelity<sp/>mass<sp/>depletion,<sp/>this<sp/>is<sp/>left<sp/>out:<sp/>+=<sp/>(*it)-&gt;effProps.mEffDot*(*it)-&gt;effProps.rEff_CB_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>connected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftConnectedIt;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>in<sp/>hubs<sp/>mass<sp/>props<sp/>to<sp/>the<sp/>spacecraft<sp/>mass<sp/>props</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftConnectedIt)-&gt;hub.updateEffectorMassProps(time);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)<sp/>+=<sp/>(*spacecraftConnectedIt)-&gt;hub.effProps.mEff;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.ISCPntB_B)<sp/>+=<sp/>(*spacecraftConnectedIt)-&gt;hub.effProps.IEffPntB_B;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B)<sp/>+=<sp/>(*spacecraftConnectedIt)-&gt;hub.effProps.mEff*(*spacecraftConnectedIt)-&gt;hub.effProps.rEff_CB_B;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>state<sp/>effectors<sp/>to<sp/>get<sp/>mass<sp/>props</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>(*spacecraftConnectedIt)-&gt;states.begin();<sp/>it<sp/>!=<sp/>(*spacecraftConnectedIt)-&gt;states.end();<sp/>it++)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;updateEffectorMassProps(time);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Add<sp/>in<sp/>effectors<sp/>mass<sp/>props<sp/>into<sp/>mass<sp/>props<sp/>of<sp/>this-&gt;primaryCentralSpacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)<sp/>+=<sp/>(*it)-&gt;effProps.mEff;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.mDot_SC)(0,0)<sp/>+=<sp/>(*it)-&gt;effProps.mEffDot;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.ISCPntB_B)<sp/>+=<sp/>(*it)-&gt;effProps.IEffPntB_B;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B)<sp/>+=<sp/>(*it)-&gt;effProps.mEff*(*it)-&gt;effProps.rEff_CB_B;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.ISCPntBPrime_B)<sp/>+=<sp/>(*it)-&gt;effProps.IEffPrimePntB_B;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.cPrime_B)<sp/>+=<sp/>(*it)-&gt;effProps.mEff*(*it)-&gt;effProps.rEffPrime_CB_B;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>high<sp/>fidelity<sp/>mass<sp/>depletion,<sp/>this<sp/>is<sp/>left<sp/>out:<sp/>+=<sp/>(*it)-&gt;effProps.mEffDot*(*it)-&gt;effProps.rEff_CB_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Divide<sp/>c_B<sp/>and<sp/>cPrime_B<sp/>by<sp/>the<sp/>total<sp/>mass<sp/>of<sp/>the<sp/>spaceCraft<sp/>to<sp/>finalize<sp/>c_B<sp/>and<sp/>cPrime_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B)<sp/>=<sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B)/(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.cPrime_B)<sp/>=<sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.cPrime_B)/(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.mDot_SC)(0,0)*(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B)/(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)/(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaLocal_BN_B<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubOmega_BN_B-&gt;getState();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cLocal_B<sp/>=<sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.cDot_B)<sp/>=<sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.cPrime_B)<sp/>+<sp/>omegaLocal_BN_B.cross(cLocal_B);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1a674ba2b5b1c8ecc141cb11a8fb9b6b60" kindref="member">SpacecraftSystem::initializeSCPosVelocity</ref>(<ref refid="class_spacecraft_unit" kindref="compound">SpacecraftUnit</ref><sp/>&amp;spacecraft)</highlight></codeline>
<codeline lineno="605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rInit_BN_N<sp/>=<sp/>spacecraft.hubR_N-&gt;getState();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigma_BN;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>sigma_BN<sp/>=<sp/>(Eigen::Vector3d)<sp/>spacecraft.hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_NB<sp/>=<sp/>sigma_BN.toRotationMatrix();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Substract<sp/>off<sp/>the<sp/>center<sp/>mass<sp/>to<sp/>leave<sp/>r_BN_N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>rInit_BN_N<sp/>-=<sp/>dcm_NB*(*spacecraft.c_B);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Subtract<sp/>off<sp/>cDot_B<sp/>to<sp/>get<sp/>v_BN_N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>vInit_BN_N<sp/>=<sp/>spacecraft.hubV_N-&gt;getState();</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>vInit_BN_N<sp/>-=<sp/>dcm_NB*(*spacecraft.cDot_B);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Finally<sp/>set<sp/>the<sp/>translational<sp/>states<sp/>r_BN_N<sp/>and<sp/>v_BN_N<sp/>with<sp/>the<sp/>corrections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.hubR_N-&gt;setState(rInit_BN_N);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.hubV_N-&gt;setState(vInit_BN_N);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1aa4f0a13101addc4f05595197887fd5f3" kindref="member">SpacecraftSystem::equationsOfMotion</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTimeSeconds,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeStep)</highlight></codeline>
<codeline lineno="627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Update<sp/>time<sp/>to<sp/>the<sp/>current<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>integTimeNanos<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1ac02493b15e676da41d0b1d342f15cf9b" kindref="member">simTimePrevious</ref><sp/>+<sp/>(uint64_t)<sp/>((integTimeSeconds-this-&gt;<ref refid="class_spacecraft_system_1aa3c03f6a8c83e9c36741d59204bb509d" kindref="member">timePrevious</ref>)/NANO2SEC);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>(*this-&gt;sysTime)<sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)integTimeNanos,<sp/>integTimeSeconds;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1ad594da6128eb0193ef3cd9ad164fac3c" kindref="member">equationsOfMotionSystem</ref>(integTimeSeconds,<sp/>timeStep);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>unconnected<sp/>spacecraft:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>unconnected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftUnConnectedIt;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a51ca0bcf3076a95fdf6e05f824a428d4" kindref="member">equationsOfMotionSC</ref>(integTimeSeconds,<sp/>timeStep,<sp/>(*(*spacecraftUnConnectedIt)));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1a51ca0bcf3076a95fdf6e05f824a428d4" kindref="member">SpacecraftSystem::equationsOfMotionSC</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTimeSeconds,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeStep,<sp/><ref refid="class_spacecraft_unit" kindref="compound">SpacecraftUnit</ref>&amp;<sp/>spacecraft)</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Zero<sp/>all<sp/>Matrices<sp/>and<sp/>vectors<sp/>for<sp/>back-sub<sp/>and<sp/>the<sp/>dynamics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixA.setZero();</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixB.setZero();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixC.setZero();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixD.setZero();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecTrans.setZero();</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecRot.setZero();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1af76172e4448e0c54d86f27306fb203f8" kindref="member">sumForceExternal_B</ref>.setZero();</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1ada3a045252ac0cf4e60e3882c1fb4af0" kindref="member">sumForceExternal_N</ref>.setZero();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1af482c8b0de5ce1b2cde54b32bbac6cda" kindref="member">sumTorquePntB_B</ref>.setZero();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Update<sp/>the<sp/>mass<sp/>properties<sp/>of<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a5270c807cea836719424cfe2083c2188" kindref="member">updateSpacecraftMassProps</ref>(integTimeSeconds,<sp/>spacecraft);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>This<sp/>is<sp/>where<sp/>gravity<sp/>is<sp/>computed<sp/>(gravity<sp/>needs<sp/>to<sp/>know<sp/>c_B<sp/>to<sp/>calculated<sp/>gravity<sp/>about<sp/>r_CN_N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigmaBNLoc;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_NB;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cLocal_N;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaBNLoc<sp/>=<sp/>(Eigen::Vector3d)<sp/>spacecraft.hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_NB<sp/>=<sp/>sigmaBNLoc.toRotationMatrix();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>cLocal_N<sp/>=<sp/>dcm_NB*(*spacecraft.c_B);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rLocal_CN_N<sp/>=<sp/>spacecraft.hubR_N-&gt;getState()<sp/>+<sp/>dcm_NB*(*spacecraft.c_B);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>vLocal_CN_N<sp/>=<sp/>spacecraft.hubV_N-&gt;getState()<sp/>+<sp/>dcm_NB*(*spacecraft.cDot_B);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.computeGravityField(rLocal_CN_N,<sp/>vLocal_CN_N);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>dynEffectors<sp/>to<sp/>compute<sp/>force<sp/>and<sp/>torque<sp/>on<sp/>the<sp/>s/c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DynamicEffector*&gt;::iterator<sp/>dynIt;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dynIt<sp/>=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a98e6d9333b0c3ec06255e684d4b0cb12" kindref="member">dynEffectors</ref>.begin();<sp/>dynIt<sp/>!=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a98e6d9333b0c3ec06255e684d4b0cb12" kindref="member">dynEffectors</ref>.end();<sp/>dynIt++)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Compute<sp/>the<sp/>force<sp/>and<sp/>torque<sp/>contributions<sp/>from<sp/>the<sp/>dynamicEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*dynIt)-&gt;computeForceTorque(integTimeSeconds,<sp/>timeStep);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1ada3a045252ac0cf4e60e3882c1fb4af0" kindref="member">sumForceExternal_N</ref><sp/>+=<sp/>(*dynIt)-&gt;forceExternal_N;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1af76172e4448e0c54d86f27306fb203f8" kindref="member">sumForceExternal_B</ref><sp/>+=<sp/>(*dynIt)-&gt;forceExternal_B;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1af482c8b0de5ce1b2cde54b32bbac6cda" kindref="member">sumTorquePntB_B</ref><sp/>+=<sp/>(*dynIt)-&gt;torqueExternalPntB_B;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>state<sp/>effectors<sp/>to<sp/>get<sp/>contributions<sp/>for<sp/>back-substitution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-<sp/>Set<sp/>the<sp/>contribution<sp/>matrices<sp/>to<sp/>zero<sp/>(just<sp/>in<sp/>case<sp/>a<sp/>stateEffector<sp/>+=<sp/>on<sp/>the<sp/>matrix<sp/>or<sp/>the<sp/>stateEffector</highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doesn&apos;t<sp/>have<sp/>a<sp/>contribution<sp/>for<sp/>a<sp/>matrix<sp/>and<sp/>doesn&apos;t<sp/>set<sp/>the<sp/>matrix<sp/>to<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixA.setZero();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixB.setZero();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixC.setZero();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixD.setZero();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.vecTrans.setZero();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.vecRot.setZero();</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>the<sp/>update<sp/>contributions<sp/>method<sp/>for<sp/>the<sp/>stateEffectors<sp/>and<sp/>add<sp/>in<sp/>contributions<sp/>to<sp/>the<sp/>hub<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;updateContributions(integTimeSeconds,<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>,<sp/>spacecraft.hubSigma-&gt;getState(),<sp/>spacecraft.hubOmega_BN_B-&gt;getState(),<sp/>*spacecraft.g_N);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixA<sp/>+=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixA;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixB<sp/>+=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixB;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixC<sp/>+=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixC;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixD<sp/>+=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixD;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecTrans<sp/>+=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.vecTrans;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecRot<sp/>+=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.vecRot;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Finish<sp/>the<sp/>math<sp/>that<sp/>is<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cLocal_B;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cPrimeLocal_B;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>cLocal_B<sp/>=<sp/>*spacecraft.c_B;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>cPrimeLocal_B<sp/>=<sp/>*spacecraft.cPrime_B;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>intermediateMatrix;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>intermediateVector;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaLocalBN_B<sp/>=<sp/>spacecraft.hubOmega_BN_B-&gt;getState();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixA<sp/>+=<sp/>(*spacecraft.m_SC)(0,0)*intermediateMatrix.Identity();</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>intermediateMatrix<sp/>=<sp/>eigenTilde((*spacecraft.c_B));<sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>c_B<sp/>skew<sp/>symmetric<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixB<sp/>+=<sp/>-(*spacecraft.m_SC)(0,0)*intermediateMatrix;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixC<sp/>+=<sp/>(*spacecraft.m_SC)(0,0)*intermediateMatrix;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixD<sp/>+=<sp/>*spacecraft.ISCPntB_B;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecTrans<sp/>+=<sp/>-2.0*(*spacecraft.m_SC)(0,<sp/>0)*omegaLocalBN_B.cross(cPrimeLocal_B)</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>(*spacecraft.m_SC)(0,<sp/>0)*omegaLocalBN_B.cross(omegaLocalBN_B.cross(cLocal_B))</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>2.0*(*spacecraft.mDot_SC)(0,0)*(cPrimeLocal_B+omegaLocalBN_B.cross(cLocal_B));</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>intermediateVector<sp/>=<sp/>*spacecraft.ISCPntB_B*omegaLocalBN_B;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecRot<sp/>+=<sp/>-omegaLocalBN_B.cross(intermediateVector)<sp/>-<sp/>*spacecraft.ISCPntBPrime_B*omegaLocalBN_B;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Map<sp/>external<sp/>force_N<sp/>to<sp/>the<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sumForceExternalMappedToB;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>sumForceExternalMappedToB<sp/>=<sp/>dcm_NB.transpose()*spacecraft.<ref refid="class_spacecraft_unit_1ada3a045252ac0cf4e60e3882c1fb4af0" kindref="member">sumForceExternal_N</ref>;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Edit<sp/>both<sp/>v_trans<sp/>and<sp/>v_rot<sp/>with<sp/>gravity<sp/>and<sp/>external<sp/>force<sp/>and<sp/>torque</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gLocal_N<sp/>=<sp/>*spacecraft.g_N;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/><sp/>Make<sp/>additional<sp/>contributions<sp/>to<sp/>the<sp/>matrices<sp/>from<sp/>the<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Need<sp/>to<sp/>find<sp/>force<sp/>of<sp/>gravity<sp/>on<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gravityForce_N;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>gravityForce_N<sp/>=<sp/>(*spacecraft.m_SC)(0,0)*gLocal_N;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gravityForce_B;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>gravityForce_B<sp/>=<sp/>dcm_NB.transpose()*gravityForce_N;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecTrans<sp/>+=<sp/>gravityForce_B<sp/>+<sp/>sumForceExternalMappedToB<sp/>+<sp/>spacecraft.<ref refid="class_spacecraft_unit_1af76172e4448e0c54d86f27306fb203f8" kindref="member">sumForceExternal_B</ref>;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecRot<sp/>+=<sp/>cLocal_B.cross(gravityForce_B)<sp/>+<sp/>spacecraft.<ref refid="class_spacecraft_unit_1af482c8b0de5ce1b2cde54b32bbac6cda" kindref="member">sumTorquePntB_B</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Compute<sp/>the<sp/>derivatives<sp/>of<sp/>the<sp/>hub<sp/>states<sp/>before<sp/>looping<sp/>through<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.computeDerivatives(integTimeSeconds,<sp/>spacecraft.hubV_N-&gt;getStateDeriv(),<sp/>spacecraft.hubOmega_BN_B-&gt;getStateDeriv(),<sp/>spacecraft.hubSigma-&gt;getState());</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>state<sp/>effectors<sp/>for<sp/>compute<sp/>derivatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;computeDerivatives(integTimeSeconds,<sp/>spacecraft.hubV_N-&gt;getStateDeriv(),<sp/>spacecraft.hubOmega_BN_B-&gt;getStateDeriv(),<sp/>spacecraft.hubSigma-&gt;getState());</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1ad594da6128eb0193ef3cd9ad164fac3c" kindref="member">SpacecraftSystem::equationsOfMotionSystem</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTimeSeconds,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeStep)</highlight></codeline>
<codeline lineno="758"><highlight class="normal">{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Zero<sp/>all<sp/>Matrices<sp/>and<sp/>vectors<sp/>for<sp/>back-sub<sp/>and<sp/>the<sp/>dynamics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixA.setZero();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixB.setZero();</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixC.setZero();</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixD.setZero();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecTrans.setZero();</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecRot.setZero();</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1af76172e4448e0c54d86f27306fb203f8" kindref="member">sumForceExternal_B</ref>.setZero();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1ada3a045252ac0cf4e60e3882c1fb4af0" kindref="member">sumForceExternal_N</ref>.setZero();</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1af482c8b0de5ce1b2cde54b32bbac6cda" kindref="member">sumTorquePntB_B</ref>.setZero();</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Update<sp/>the<sp/>mass<sp/>properties<sp/>of<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1abb0a617141d737c550757f2c639ead4a" kindref="member">updateSystemMassProps</ref>(integTimeSeconds);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>This<sp/>is<sp/>where<sp/>gravity<sp/>is<sp/>computed<sp/>(gravity<sp/>needs<sp/>to<sp/>know<sp/>c_B<sp/>to<sp/>calculated<sp/>gravity<sp/>about<sp/>r_CN_N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigmaBNLoc;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_NB;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cLocal_N;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaBNLoc<sp/>=<sp/>(Eigen::Vector3d)<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_NB<sp/>=<sp/>sigmaBNLoc.toRotationMatrix();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>cLocal_N<sp/>=<sp/>dcm_NB*(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rLocal_CN_N<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubR_N-&gt;getState()<sp/>+<sp/>dcm_NB*(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>vLocal_CN_N<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubV_N-&gt;getState()<sp/>+<sp/>dcm_NB*(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.cDot_B);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.computeGravityField(rLocal_CN_N,<sp/>vLocal_CN_N);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>dynEffectors<sp/>to<sp/>compute<sp/>force<sp/>and<sp/>torque<sp/>on<sp/>the<sp/>s/c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DynamicEffector*&gt;::iterator<sp/>dynIt;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dynIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a98e6d9333b0c3ec06255e684d4b0cb12" kindref="member">dynEffectors</ref>.begin();<sp/>dynIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a98e6d9333b0c3ec06255e684d4b0cb12" kindref="member">dynEffectors</ref>.end();<sp/>dynIt++)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Compute<sp/>the<sp/>force<sp/>and<sp/>torque<sp/>contributions<sp/>from<sp/>the<sp/>dynamicEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*dynIt)-&gt;computeForceTorque(integTimeSeconds,<sp/>timeStep);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1ada3a045252ac0cf4e60e3882c1fb4af0" kindref="member">sumForceExternal_N</ref><sp/>+=<sp/>(*dynIt)-&gt;forceExternal_N;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1af76172e4448e0c54d86f27306fb203f8" kindref="member">sumForceExternal_B</ref><sp/>+=<sp/>(*dynIt)-&gt;forceExternal_B;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1af482c8b0de5ce1b2cde54b32bbac6cda" kindref="member">sumTorquePntB_B</ref><sp/>+=<sp/>(*dynIt)-&gt;torqueExternalPntB_B;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>connected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftConnectedIt;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>dynEffectors<sp/>to<sp/>compute<sp/>force<sp/>and<sp/>torque<sp/>on<sp/>the<sp/>s/c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dynIt<sp/>=<sp/>(*spacecraftConnectedIt)-&gt;dynEffectors.begin();<sp/>dynIt<sp/>!=<sp/>(*spacecraftConnectedIt)-&gt;dynEffectors.end();<sp/>dynIt++)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Compute<sp/>the<sp/>force<sp/>and<sp/>torque<sp/>contributions<sp/>from<sp/>the<sp/>dynamicEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*dynIt)-&gt;computeForceTorque(integTimeSeconds,<sp/>timeStep);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1ada3a045252ac0cf4e60e3882c1fb4af0" kindref="member">sumForceExternal_N</ref><sp/>+=<sp/>(*dynIt)-&gt;forceExternal_N;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1af76172e4448e0c54d86f27306fb203f8" kindref="member">sumForceExternal_B</ref><sp/>+=<sp/>(*dynIt)-&gt;forceExternal_B;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1af482c8b0de5ce1b2cde54b32bbac6cda" kindref="member">sumTorquePntB_B</ref><sp/>+=<sp/>(*dynIt)-&gt;torqueExternalPntB_B;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>state<sp/>effectors<sp/>to<sp/>get<sp/>contributions<sp/>for<sp/>back-substitution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-<sp/>Set<sp/>the<sp/>contribution<sp/>matrices<sp/>to<sp/>zero<sp/>(just<sp/>in<sp/>case<sp/>a<sp/>stateEffector<sp/>+=<sp/>on<sp/>the<sp/>matrix<sp/>or<sp/>the<sp/>stateEffector</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doesn&apos;t<sp/>have<sp/>a<sp/>contribution<sp/>for<sp/>a<sp/>matrix<sp/>and<sp/>doesn&apos;t<sp/>set<sp/>the<sp/>matrix<sp/>to<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixA.setZero();</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixB.setZero();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixC.setZero();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixD.setZero();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.vecTrans.setZero();</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.vecRot.setZero();</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>the<sp/>update<sp/>contributions<sp/>method<sp/>for<sp/>the<sp/>stateEffectors<sp/>and<sp/>add<sp/>in<sp/>contributions<sp/>to<sp/>the<sp/>hub<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;updateContributions(integTimeSeconds,<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>,<sp/>this-&gt;primaryCentralSpacecraft.hubSigma-&gt;getState(),<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubOmega_BN_B-&gt;getState(),<sp/>*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.g_N);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixA<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixA;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixB<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixB;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixC<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixC;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixD<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixD;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecTrans<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.vecTrans;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecRot<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.vecRot;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>connected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>(*spacecraftConnectedIt)-&gt;states.begin();<sp/>it<sp/>!=<sp/>(*spacecraftConnectedIt)-&gt;states.end();<sp/>it++)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-<sp/>Set<sp/>the<sp/>contribution<sp/>matrices<sp/>to<sp/>zero<sp/>(just<sp/>in<sp/>case<sp/>a<sp/>stateEffector<sp/>+=<sp/>on<sp/>the<sp/>matrix<sp/>or<sp/>the<sp/>stateEffector</highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doesn&apos;t<sp/>have<sp/>a<sp/>contribution<sp/>for<sp/>a<sp/>matrix<sp/>and<sp/>doesn&apos;t<sp/>set<sp/>the<sp/>matrix<sp/>to<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixA.setZero();</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixB.setZero();</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixC.setZero();</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixD.setZero();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.vecTrans.setZero();</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.vecRot.setZero();</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>the<sp/>update<sp/>contributions<sp/>method<sp/>for<sp/>the<sp/>stateEffectors<sp/>and<sp/>add<sp/>in<sp/>contributions<sp/>to<sp/>the<sp/>hub<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;updateContributions(integTimeSeconds,<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>,<sp/>this-&gt;primaryCentralSpacecraft.hubSigma-&gt;getState(),<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubOmega_BN_B-&gt;getState(),<sp/>*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.g_N);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixA<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixA;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixB<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixB;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixC<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixC;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixD<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.matrixD;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecTrans<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.vecTrans;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecRot<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a485bbc4faf4aca6320fee4a2a68f683f" kindref="member">backSubMatricesContributions</ref>.vecRot;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Finish<sp/>the<sp/>math<sp/>that<sp/>is<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cLocal_B;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cPrimeLocal_B;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>cLocal_B<sp/>=<sp/>*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>cPrimeLocal_B<sp/>=<sp/>*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.cPrime_B;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>intermediateMatrix;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>intermediateVector;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaLocalBN_B<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubOmega_BN_B-&gt;getState();</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixA<sp/>+=<sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)*intermediateMatrix.Identity();</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>intermediateMatrix<sp/>=<sp/>eigenTilde((*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B));<sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>c_B<sp/>skew<sp/>symmetric<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixB<sp/>+=<sp/>-(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)*intermediateMatrix;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixC<sp/>+=<sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)*intermediateMatrix;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.matrixD<sp/>+=<sp/>*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.ISCPntB_B;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecTrans<sp/>+=<sp/>-2.0*(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,<sp/>0)*omegaLocalBN_B.cross(cPrimeLocal_B)</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,<sp/>0)*omegaLocalBN_B.cross(omegaLocalBN_B.cross(cLocal_B))</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>2.0*(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.mDot_SC)(0,0)*(cPrimeLocal_B+omegaLocalBN_B.cross(cLocal_B));</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>intermediateVector<sp/>=<sp/>*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.ISCPntB_B*omegaLocalBN_B;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecRot<sp/>+=<sp/>-omegaLocalBN_B.cross(intermediateVector)<sp/>-<sp/>*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.ISCPntBPrime_B*omegaLocalBN_B;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Map<sp/>external<sp/>force_N<sp/>to<sp/>the<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sumForceExternalMappedToB;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>sumForceExternalMappedToB<sp/>=<sp/>dcm_NB.transpose()*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1ada3a045252ac0cf4e60e3882c1fb4af0" kindref="member">sumForceExternal_N</ref>;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Edit<sp/>both<sp/>v_trans<sp/>and<sp/>v_rot<sp/>with<sp/>gravity<sp/>and<sp/>external<sp/>force<sp/>and<sp/>torque</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gLocal_N<sp/>=<sp/>*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.g_N;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/><sp/>Make<sp/>additional<sp/>contributions<sp/>to<sp/>the<sp/>matrices<sp/>from<sp/>the<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Need<sp/>to<sp/>find<sp/>force<sp/>of<sp/>gravity<sp/>on<sp/>the<sp/>this-&gt;primaryCentralSpacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gravityForce_N;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>gravityForce_N<sp/>=<sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)*gLocal_N;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gravityForce_B;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>gravityForce_B<sp/>=<sp/>dcm_NB.transpose()*gravityForce_N;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecTrans<sp/>+=<sp/>gravityForce_B<sp/>+<sp/>sumForceExternalMappedToB<sp/>+<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1af76172e4448e0c54d86f27306fb203f8" kindref="member">sumForceExternal_B</ref>;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.hubBackSubMatrices.vecRot<sp/>+=<sp/>cLocal_B.cross(gravityForce_B)<sp/>+<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1af482c8b0de5ce1b2cde54b32bbac6cda" kindref="member">sumTorquePntB_B</ref>;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Compute<sp/>the<sp/>derivatives<sp/>of<sp/>the<sp/>hub<sp/>states<sp/>before<sp/>looping<sp/>through<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.computeDerivatives(integTimeSeconds,<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubV_N-&gt;getStateDeriv(),<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubOmega_BN_B-&gt;getStateDeriv(),<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubSigma-&gt;getState());</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Need<sp/>to<sp/>figure<sp/>out<sp/>how<sp/>to<sp/>pass<sp/>accelerations<sp/>of<sp/>rBDDot<sp/>and<sp/>omegaDot<sp/>of<sp/>the<sp/>primary<sp/>hub<sp/>to<sp/>the<sp/>other<sp/>hubs<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>state<sp/>effectors<sp/>for<sp/>compute<sp/>derivatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;computeDerivatives(integTimeSeconds,<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubV_N-&gt;getStateDeriv(),<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubOmega_BN_B-&gt;getStateDeriv(),<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubSigma-&gt;getState());</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>connected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>through<sp/>state<sp/>effectors<sp/>for<sp/>compute<sp/>derivatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>(*spacecraftConnectedIt)-&gt;states.begin();<sp/>it<sp/>!=<sp/>(*spacecraftConnectedIt)-&gt;states.end();<sp/>it++)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;computeDerivatives(integTimeSeconds,<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubV_N-&gt;getStateDeriv(),<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubOmega_BN_B-&gt;getStateDeriv(),<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubSigma-&gt;getState());</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1a376bd692de1a6cd31df3151082b50879" kindref="member">SpacecraftSystem::findPriorStateInformation</ref>(<ref refid="class_spacecraft_unit" kindref="compound">SpacecraftUnit</ref><sp/>&amp;spacecraft)</highlight></codeline>
<codeline lineno="923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>v_CN_N<sp/>before<sp/>integration<sp/>for<sp/>accumulated<sp/>DV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a1004ccc9001881806d710a02620e4124" kindref="member">oldV_BN_N</ref><sp/>=<sp/>spacecraft.hubV_N-&gt;getState();<sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>V_BN_N<sp/>before<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>oldC_B;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Center<sp/>of<sp/>mass<sp/>offset<sp/>before<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>oldOmega_BN_B;<sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>angular<sp/>rate<sp/>of<sp/>B<sp/>wrt<sp/>N<sp/>in<sp/>the<sp/>Body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>oldSigma_BN;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Sigma_BN<sp/>before<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>the<sp/>angular<sp/>rate,<sp/>oldOmega_BN_B<sp/>from<sp/>the<sp/>dyn<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>oldOmega_BN_B<sp/>=<sp/>spacecraft.hubOmega_BN_B-&gt;getState();</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>center<sp/>of<sp/>mass,<sp/>v_BN_N<sp/>and<sp/>dcm_NB<sp/>from<sp/>the<sp/>dyn<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>oldSigma_BN<sp/>=<sp/>(Eigen::Vector3d)<sp/>spacecraft.hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Finally<sp/>find<sp/>v_CN_N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>oldDcm_NB<sp/>=<sp/>oldSigma_BN.toRotationMatrix();<sp/></highlight><highlight class="comment">//<sp/>-<sp/>dcm_NB<sp/>before<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1aa3731b522d756ccc5870f0cf8514d310" kindref="member">oldV_CN_N</ref><sp/>=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a1004ccc9001881806d710a02620e4124" kindref="member">oldV_BN_N</ref><sp/>+<sp/>oldDcm_NB*(*spacecraft.cDot_B);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.matchGravitytoVelocityState(spacecraft.<ref refid="class_spacecraft_unit_1aa3731b522d756ccc5870f0cf8514d310" kindref="member">oldV_CN_N</ref>);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1a49cad62bf64f993cbc6f03d4e4b024d7" kindref="member">SpacecraftSystem::determineAttachedSCStates</ref>()</highlight></codeline>
<codeline lineno="942"><highlight class="normal">{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pull<sp/>out<sp/>primary<sp/>spacecraft<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigmaPNLoc;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaPNLoc<sp/>=<sp/>(Eigen::Vector3d)<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaPNLoc_P<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubOmega_BN_B-&gt;getState();</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_PNLocal_N<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubR_N-&gt;getState();</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_PNDotLocal_N<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubV_N-&gt;getState();</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_NP;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_NP<sp/>=<sp/>sigmaPNLoc.toRotationMatrix();</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>connected<sp/>spacecraft<sp/>to<sp/>edit<sp/>the<sp/>hub<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>connected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftConnectedIt;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_BN<sp/>=<sp/>(*spacecraftConnectedIt)-&gt;hub.dcm_BP*dcm_NP.transpose();</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_BNArray[9];</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma_BNArray[3];</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenMatrix3d2CArray(dcm_BN,<sp/>dcm_BNArray);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C2MRP(RECAST3X3<sp/>dcm_BNArray,<sp/>sigma_BNArray);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sigmaBNLoc;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmaBNLoc<sp/>=<sp/>cArray2EigenVector3d(sigma_BNArray);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>MRP<sp/>for<sp/>the<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftConnectedIt)-&gt;hubSigma-&gt;setState(sigmaBNLoc);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>omega</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaBNLocal_B<sp/>=<sp/>(*spacecraftConnectedIt)-&gt;hub.dcm_BP*omegaPNLoc_P;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftConnectedIt)-&gt;hubOmega_BN_B-&gt;setState(omegaBNLocal_B);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>the<sp/>translation<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_BNLocal_N<sp/>=<sp/>r_PNLocal_N<sp/>+<sp/>dcm_NP*(*spacecraftConnectedIt)-&gt;hub.r_BP_P;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftConnectedIt)-&gt;hubR_N-&gt;setState(r_BNLocal_N);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_BNDotLocal_N<sp/>=<sp/>r_PNDotLocal_N<sp/>+<sp/>dcm_NP*omegaPNLoc_P.cross((*spacecraftConnectedIt)-&gt;hub.r_BP_P);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftConnectedIt)-&gt;hubV_N-&gt;setState(r_BNDotLocal_N);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1a7bf8e773791e820fb128066be3922182" kindref="member">SpacecraftSystem::calculateDeltaVandAcceleration</ref>(<ref refid="class_spacecraft_unit" kindref="compound">SpacecraftUnit</ref><sp/>&amp;spacecraft,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>localTimeStep)</highlight></codeline>
<codeline lineno="982"><highlight class="normal">{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>v_CN_N<sp/>after<sp/>the<sp/>integration<sp/>for<sp/>accumulated<sp/>DV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>newV_BN_N<sp/>=<sp/>spacecraft.hubV_N-&gt;getState();<sp/></highlight><highlight class="comment">//<sp/>-<sp/>V_BN_N<sp/>after<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>newV_CN_N;<sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>V_CN_N<sp/>after<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>newSigma_BN;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Sigma_BN<sp/>after<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>center<sp/>of<sp/>mass,<sp/>v_BN_N<sp/>and<sp/>dcm_NB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sigmaBNLoc;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaBNLoc<sp/>=<sp/>(Eigen::Vector3d)<sp/>spacecraft.hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>newSigma_BN<sp/>=<sp/>sigmaBNLoc;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>newDcm_NB<sp/>=<sp/>newSigma_BN.toRotationMatrix();<sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>dcm_NB<sp/>after<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>newV_CN_N<sp/>=<sp/>newV_BN_N<sp/>+<sp/>newDcm_NB*(*spacecraft.cDot_B);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>accumulated<sp/>DV<sp/>of<sp/>the<sp/>center<sp/>of<sp/>mass<sp/>in<sp/>the<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1ac73744519357b2ba9adfa7009fb8f1b0" kindref="member">dvAccum_CN_B</ref><sp/>+=<sp/>newDcm_NB.transpose()*(newV_CN_N<sp/>-</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.BcGravVelocity-&gt;getState());</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>the<sp/>accumulated<sp/>DV<sp/>of<sp/>the<sp/>body<sp/>frame<sp/>in<sp/>the<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a0a8274a0e04c0f9b29d6a03b9ae51229" kindref="member">dvAccum_BN_B</ref><sp/>+=<sp/>newDcm_NB.transpose()*(newV_BN_N<sp/>-</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.hubGravVelocity-&gt;getState());</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>non-conservative<sp/>acceleration<sp/>of<sp/>the<sp/>body<sp/>frame<sp/>in<sp/>the<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a3222e7288fe00c331f5ccd09168949cb" kindref="member">nonConservativeAccelpntB_B</ref><sp/>=<sp/>(newDcm_NB.transpose()*(newV_BN_N<sp/>-</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.hubGravVelocity-&gt;getState()))/localTimeStep;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>angular<sp/>acceleration<sp/>in<sp/>the<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>newOmega_BN_B;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>newOmega_BN_B<sp/>=<sp/>spacecraft.hubOmega_BN_B-&gt;getState();</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1ad1df7ae3c22c24c89c600471db35aa80" kindref="member">omegaDot_BN_B</ref><sp/>=<sp/>(newOmega_BN_B<sp/>-<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a283897006ba332364f0db5dabaed46c5" kindref="member">oldOmega_BN_B</ref>)/localTimeStep;<sp/></highlight><highlight class="comment">//angular<sp/>acceleration<sp/>of<sp/>B<sp/>wrt<sp/>N<sp/>in<sp/>the<sp/>Body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1a66c9bbd65ecb353f14c78b6b54303141" kindref="member">SpacecraftSystem::computeEnergyMomentum</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1af24b31ea9674e19334276efbdd282a06" kindref="member">computeEnergyMomentumSystem</ref>(time);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>unconnected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftUnConnectedIt;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a2ef548bdba8049ac75ac54e7b0f1c083" kindref="member">computeEnergyMomentumSC</ref>(time,<sp/>(*(*spacecraftUnConnectedIt)));</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1a2ef548bdba8049ac75ac54e7b0f1c083" kindref="member">SpacecraftSystem::computeEnergyMomentumSC</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time,<sp/><ref refid="class_spacecraft_unit" kindref="compound">SpacecraftUnit</ref><sp/>&amp;spacecraft)</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Grab<sp/>values<sp/>from<sp/>state<sp/>Manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rLocal_BN_N<sp/>=<sp/>spacecraft.hubR_N-&gt;getState();</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDotLocal_BN_N<sp/>=<sp/>spacecraft.hubV_N-&gt;getState();</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigmaLocal_BN;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaLocal_BN<sp/>=<sp/>(Eigen::Vector3d<sp/>)<sp/>spacecraft.hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>DCM&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcmLocal_NB<sp/>=<sp/>sigmaLocal_BN.toRotationMatrix();</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcmLocal_BN<sp/>=<sp/>dcmLocal_NB.transpose();</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Convert<sp/>from<sp/>inertial<sp/>frame<sp/>to<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rBNLocal_B;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDotBNLocal_B;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>rBNLocal_B<sp/>=<sp/>dcmLocal_BN*rLocal_BN_N;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>rDotBNLocal_B<sp/>=<sp/>dcmLocal_BN*rDotLocal_BN_N;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>zero<sp/>necessarry<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>totOrbAngMomPntN_B;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>totRotAngMomPntC_B;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>totOrbAngMomPntN_B.setZero();</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>totRotAngMomPntC_B.setZero();</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a601738e395152e20e2862e5444baf05e" kindref="member">totOrbAngMomPntN_N</ref>.setZero();</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a8285a03edb471308947b67b8ef163619" kindref="member">totRotAngMomPntC_N</ref>.setZero();</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>.setZero();</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a0182b827b48d14767e490a5ba8b45f57" kindref="member">totOrbEnergy</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1aa1b82e0fb52324b7495fa2c3acf5fba1" kindref="member">totRotEnergy</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1aff7692f3906a3645835cbc5bc22fab03" kindref="member">rotEnergyContr</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>the<sp/>hubs<sp/>contribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.updateEnergyMomContributions(time,<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>,<sp/>spacecraft.<ref refid="class_spacecraft_unit_1aff7692f3906a3645835cbc5bc22fab03" kindref="member">rotEnergyContr</ref>,<sp/>spacecraft.hubOmega_BN_B-&gt;getState());</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>totRotAngMomPntC_B<sp/>+=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1aa1b82e0fb52324b7495fa2c3acf5fba1" kindref="member">totRotEnergy</ref><sp/>+=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1aff7692f3906a3645835cbc5bc22fab03" kindref="member">rotEnergyContr</ref>;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>over<sp/>stateEffectors<sp/>to<sp/>get<sp/>their<sp/>contributions<sp/>to<sp/>energy<sp/>and<sp/>momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>the<sp/>matrices<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>.setZero();</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1aff7692f3906a3645835cbc5bc22fab03" kindref="member">rotEnergyContr</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>energy<sp/>and<sp/>momentum<sp/>calulations<sp/>for<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;updateEnergyMomContributions(time,<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>,<sp/>spacecraft.<ref refid="class_spacecraft_unit_1aff7692f3906a3645835cbc5bc22fab03" kindref="member">rotEnergyContr</ref>,<sp/>spacecraft.hubOmega_BN_B-&gt;getState());</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totRotAngMomPntC_B<sp/>+=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1aa1b82e0fb52324b7495fa2c3acf5fba1" kindref="member">totRotEnergy</ref><sp/>+=<sp/>spacecraft.<ref refid="class_spacecraft_unit_1aff7692f3906a3645835cbc5bc22fab03" kindref="member">rotEnergyContr</ref>;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>cDot_B<sp/>from<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cDotLocal_B<sp/>=<sp/>(*spacecraft.cDot_B);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Add<sp/>in<sp/>orbital<sp/>kinetic<sp/>energy<sp/>into<sp/>the<sp/>total<sp/>orbital<sp/>energy<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a0182b827b48d14767e490a5ba8b45f57" kindref="member">totOrbEnergy</ref><sp/>+=<sp/>1.0/2.0*(*spacecraft.m_SC)(0,0)*(rDotBNLocal_B.dot(rDotBNLocal_B)<sp/>+<sp/>2.0*rDotBNLocal_B.dot(cDotLocal_B)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>cDotLocal_B.dot(cDotLocal_B));</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>gravity<sp/>effector<sp/>and<sp/>add<sp/>in<sp/>its<sp/>potential<sp/>contributions<sp/>to<sp/>the<sp/>total<sp/>orbital<sp/>energy<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1ad9bb2405bb5b00b0bc1b10ba8ec110b2" kindref="member">orbPotentialEnergyContr</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rLocal_CN_N<sp/>=<sp/>spacecraft.hubR_N-&gt;getState()<sp/>+<sp/>dcmLocal_NB*(*spacecraft.c_B);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.updateEnergyContributions(rLocal_CN_N,<sp/>spacecraft.<ref refid="class_spacecraft_unit_1ad9bb2405bb5b00b0bc1b10ba8ec110b2" kindref="member">orbPotentialEnergyContr</ref>);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a0182b827b48d14767e490a5ba8b45f57" kindref="member">totOrbEnergy</ref><sp/>+=<sp/>(*spacecraft.m_SC)(0,0)*spacecraft.<ref refid="class_spacecraft_unit_1ad9bb2405bb5b00b0bc1b10ba8ec110b2" kindref="member">orbPotentialEnergyContr</ref>;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>total<sp/>rotational<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1aa1b82e0fb52324b7495fa2c3acf5fba1" kindref="member">totRotEnergy</ref><sp/>+=<sp/>-1.0/2.0*(*spacecraft.m_SC)(0,0)*cDotLocal_B.dot(cDotLocal_B);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>orbital<sp/>angular<sp/>momentum<sp/>for<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rCN_N;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDotCN_N;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>rCN_N<sp/>=<sp/>rLocal_BN_N<sp/>+<sp/>dcmLocal_NB*(*spacecraft.c_B);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>rDotCN_N<sp/>=<sp/>rDotLocal_BN_N<sp/>+<sp/>dcmLocal_NB*cDotLocal_B;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a601738e395152e20e2862e5444baf05e" kindref="member">totOrbAngMomPntN_N</ref><sp/>=<sp/>(*spacecraft.m_SC)(0,0)*(rCN_N.cross(rDotCN_N));</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>rotational<sp/>angular<sp/>momentum<sp/>for<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>totRotAngMomPntC_B<sp/>+=<sp/>-(*spacecraft.m_SC)(0,0)*(Eigen::Vector3d<sp/>(*spacecraft.c_B)).cross(cDotLocal_B);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>spacecraft.<ref refid="class_spacecraft_unit_1a8285a03edb471308947b67b8ef163619" kindref="member">totRotAngMomPntC_N</ref><sp/>=<sp/>dcmLocal_NB*totRotAngMomPntC_B;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1af24b31ea9674e19334276efbdd282a06" kindref="member">SpacecraftSystem::computeEnergyMomentumSystem</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="1111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Grab<sp/>values<sp/>from<sp/>state<sp/>Manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rLocal_BN_N<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubR_N-&gt;getState();</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDotLocal_BN_N<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubV_N-&gt;getState();</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigmaLocal_BN;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaLocal_BN<sp/>=<sp/>(Eigen::Vector3d<sp/>)<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubSigma-&gt;getState();</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>DCM&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcmLocal_NB<sp/>=<sp/>sigmaLocal_BN.toRotationMatrix();</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcmLocal_BN<sp/>=<sp/>dcmLocal_NB.transpose();</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Convert<sp/>from<sp/>inertial<sp/>frame<sp/>to<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rBNLocal_B;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDotBNLocal_B;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>rBNLocal_B<sp/>=<sp/>dcmLocal_BN*rLocal_BN_N;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>rDotBNLocal_B<sp/>=<sp/>dcmLocal_BN*rDotLocal_BN_N;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>zero<sp/>necessarry<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>totOrbAngMomPntN_B;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>totRotAngMomPntC_B;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>totOrbAngMomPntN_B.setZero();</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>totRotAngMomPntC_B.setZero();</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a601738e395152e20e2862e5444baf05e" kindref="member">totOrbAngMomPntN_N</ref>.setZero();</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a8285a03edb471308947b67b8ef163619" kindref="member">totRotAngMomPntC_N</ref>.setZero();</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>.setZero();</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a0182b827b48d14767e490a5ba8b45f57" kindref="member">totOrbEnergy</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1aa1b82e0fb52324b7495fa2c3acf5fba1" kindref="member">totRotEnergy</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1aff7692f3906a3645835cbc5bc22fab03" kindref="member">rotEnergyContr</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>the<sp/>hubs<sp/>contribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.updateEnergyMomContributions(time,<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>,<sp/>this-&gt;primaryCentralSpacecraft.rotEnergyContr,<sp/>this-&gt;primaryCentralSpacecraft.hubOmega_BN_B-&gt;getState());</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>totRotAngMomPntC_B<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1aa1b82e0fb52324b7495fa2c3acf5fba1" kindref="member">totRotEnergy</ref><sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1aff7692f3906a3645835cbc5bc22fab03" kindref="member">rotEnergyContr</ref>;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>over<sp/>stateEffectors<sp/>to<sp/>get<sp/>their<sp/>contributions<sp/>to<sp/>energy<sp/>and<sp/>momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>the<sp/>matrices<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>.setZero();</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1aff7692f3906a3645835cbc5bc22fab03" kindref="member">rotEnergyContr</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>energy<sp/>and<sp/>momentum<sp/>calulations<sp/>for<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;updateEnergyMomContributions(time,<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>,<sp/>this-&gt;primaryCentralSpacecraft.rotEnergyContr,<sp/>this-&gt;primaryCentralSpacecraft.hubOmega_BN_B-&gt;getState());</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totRotAngMomPntC_B<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1aa1b82e0fb52324b7495fa2c3acf5fba1" kindref="member">totRotEnergy</ref><sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1aff7692f3906a3645835cbc5bc22fab03" kindref="member">rotEnergyContr</ref>;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>all<sp/>of<sp/>the<sp/>attached<sp/>hubs<sp/>and<sp/>stateEffectors<sp/>contributions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftConnectedIt;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>the<sp/>hubs<sp/>contribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftConnectedIt)-&gt;hub.updateEnergyMomContributions(time,<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>,<sp/>this-&gt;primaryCentralSpacecraft.rotEnergyContr,<sp/>this-&gt;primaryCentralSpacecraft.hubOmega_BN_B-&gt;getState());</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totRotAngMomPntC_B<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1aa1b82e0fb52324b7495fa2c3acf5fba1" kindref="member">totRotEnergy</ref><sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1aff7692f3906a3645835cbc5bc22fab03" kindref="member">rotEnergyContr</ref>;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>over<sp/>stateEffectors<sp/>to<sp/>get<sp/>their<sp/>contributions<sp/>to<sp/>energy<sp/>and<sp/>momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>(*spacecraftConnectedIt)-&gt;states.begin();<sp/>it<sp/>!=<sp/>(*spacecraftConnectedIt)-&gt;states.end();<sp/>it++)</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>the<sp/>matrices<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>.setZero();</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1aff7692f3906a3645835cbc5bc22fab03" kindref="member">rotEnergyContr</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>energy<sp/>and<sp/>momentum<sp/>calulations<sp/>for<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;updateEnergyMomContributions(time,<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>,<sp/>this-&gt;primaryCentralSpacecraft.rotEnergyContr,<sp/>this-&gt;primaryCentralSpacecraft.hubOmega_BN_B-&gt;getState());</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totRotAngMomPntC_B<sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a20e70e41ecf64c22bec8badd8578e30b" kindref="member">rotAngMomPntCContr_B</ref>;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1aa1b82e0fb52324b7495fa2c3acf5fba1" kindref="member">totRotEnergy</ref><sp/>+=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1aff7692f3906a3645835cbc5bc22fab03" kindref="member">rotEnergyContr</ref>;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>cDot_B<sp/>from<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cDotLocal_B<sp/>=<sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.cDot_B);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Add<sp/>in<sp/>orbital<sp/>kinetic<sp/>energy<sp/>into<sp/>the<sp/>total<sp/>orbital<sp/>energy<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a0182b827b48d14767e490a5ba8b45f57" kindref="member">totOrbEnergy</ref><sp/>+=<sp/>1.0/2.0*(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)*(rDotBNLocal_B.dot(rDotBNLocal_B)<sp/>+<sp/>2.0*rDotBNLocal_B.dot(cDotLocal_B)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>cDotLocal_B.dot(cDotLocal_B));</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>gravity<sp/>effector<sp/>and<sp/>add<sp/>in<sp/>its<sp/>potential<sp/>contributions<sp/>to<sp/>the<sp/>total<sp/>orbital<sp/>energy<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1ad9bb2405bb5b00b0bc1b10ba8ec110b2" kindref="member">orbPotentialEnergyContr</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rLocal_CN_N<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.hubR_N-&gt;getState()<sp/>+<sp/>dcmLocal_NB*(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a166de176e2863df5a6eed5b2a1a84ed7" kindref="member">gravField</ref>.updateEnergyContributions(rLocal_CN_N,<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1ad9bb2405bb5b00b0bc1b10ba8ec110b2" kindref="member">orbPotentialEnergyContr</ref>);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a0182b827b48d14767e490a5ba8b45f57" kindref="member">totOrbEnergy</ref><sp/>+=<sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1ad9bb2405bb5b00b0bc1b10ba8ec110b2" kindref="member">orbPotentialEnergyContr</ref>;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>total<sp/>rotational<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1aa1b82e0fb52324b7495fa2c3acf5fba1" kindref="member">totRotEnergy</ref><sp/>+=<sp/>-1.0/2.0*(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)*cDotLocal_B.dot(cDotLocal_B);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>orbital<sp/>angular<sp/>momentum<sp/>for<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rCN_N;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDotCN_N;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>rCN_N<sp/>=<sp/>rLocal_BN_N<sp/>+<sp/>dcmLocal_NB*(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>rDotCN_N<sp/>=<sp/>rDotLocal_BN_N<sp/>+<sp/>dcmLocal_NB*cDotLocal_B;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a601738e395152e20e2862e5444baf05e" kindref="member">totOrbAngMomPntN_N</ref><sp/>=<sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)*(rCN_N.cross(rDotCN_N));</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>rotational<sp/>angular<sp/>momentum<sp/>for<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>totRotAngMomPntC_B<sp/>+=<sp/>-(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.m_SC)(0,0)*(Eigen::Vector3d<sp/>(*this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.c_B)).cross(cDotLocal_B);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a8285a03edb471308947b67b8ef163619" kindref="member">totRotAngMomPntC_N</ref><sp/>=<sp/>dcmLocal_NB*totRotAngMomPntC_B;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1aa7c05aa90199976057f14e78e09ee4a0" kindref="member">SpacecraftSystem::preIntegration</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integrateToThisTime)<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>the<sp/>time<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;timeStep<sp/>=<sp/>integrateToThisTime<sp/>-<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa3c03f6a8c83e9c36741d59204bb509d" kindref="member">timePrevious</ref>;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a376bd692de1a6cd31df3151082b50879" kindref="member">findPriorStateInformation</ref>(this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>unconnected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftUnConnectedIt;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a376bd692de1a6cd31df3151082b50879" kindref="member">findPriorStateInformation</ref>((*(*spacecraftUnConnectedIt)));</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Integrate<sp/>the<sp/>state<sp/>from<sp/>the<sp/>last<sp/>time<sp/>(timeBefore)<sp/>to<sp/>the<sp/>integrateToThisTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;timeBefore<sp/>=<sp/>integrateToThisTime<sp/>-<sp/>this-&gt;timeStep;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spacecraft_system_1a1445d10d6c94d3583537026686a6e985" kindref="member">SpacecraftSystem::postIntegration</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integrateToThisTime)<sp/>{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftUnConnectedIt;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;timePrevious<sp/>=<sp/>integrateToThisTime;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>copy<sp/>the<sp/>current<sp/>time<sp/>into<sp/>previous<sp/>time<sp/>for<sp/>next<sp/>integrate<sp/>state<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Calculate<sp/>the<sp/>states<sp/>of<sp/>the<sp/>attached<sp/>spacecraft<sp/>from<sp/>the<sp/>primary<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a49cad62bf64f993cbc6f03d4e4b024d7" kindref="member">determineAttachedSCStates</ref>();</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>hubs<sp/>modify<sp/>states<sp/>to<sp/>allow<sp/>for<sp/>switching<sp/>of<sp/>MRPs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1a4bbe5f153f6669bcb2b3a05ac6c0c6b9" kindref="member">hub</ref>.modifyStates(integrateToThisTime);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Just<sp/>in<sp/>case<sp/>the<sp/>MRPs<sp/>of<sp/>the<sp/>attached<sp/>hubs<sp/>need<sp/>to<sp/>be<sp/>switched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpacecraftUnit*&gt;::iterator<sp/>spacecraftConnectedIt;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftConnectedIt)-&gt;hub.modifyStates(integrateToThisTime);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Just<sp/>in<sp/>case<sp/>the<sp/>MRPs<sp/>of<sp/>the<sp/>unattached<sp/>hubs<sp/>need<sp/>to<sp/>be<sp/>switched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*spacecraftUnConnectedIt)-&gt;hub.modifyStates(integrateToThisTime);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Loop<sp/>over<sp/>stateEffectors<sp/>to<sp/>call<sp/>modifyStates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>.<ref refid="class_spacecraft_unit_1afab2a524f0d10739e9c0c96084a18540" kindref="member">states</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>energy<sp/>and<sp/>momentum<sp/>calulations<sp/>for<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;modifyStates(integrateToThisTime);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>connected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.begin();<sp/>spacecraftConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1a7af6cdd5a23810b6f69d71267d8d8ac6" kindref="member">spacecraftDockedToPrimary</ref>.end();<sp/>spacecraftConnectedIt++)</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>(*spacecraftConnectedIt)-&gt;states.begin();<sp/>it<sp/>!=<sp/>(*spacecraftConnectedIt)-&gt;states.end();<sp/>it++)</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>energy<sp/>and<sp/>momentum<sp/>calulations<sp/>for<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;modifyStates(integrateToThisTime);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>this<sp/>for<sp/>all<sp/>of<sp/>the<sp/>unconnected<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>(*spacecraftUnConnectedIt)-&gt;states.begin();<sp/>it<sp/>!=<sp/>(*spacecraftUnConnectedIt)-&gt;states.end();<sp/>it++)</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>energy<sp/>and<sp/>momentum<sp/>calulations<sp/>for<sp/>stateEffectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;modifyStates(integrateToThisTime);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>mass<sp/>properties<sp/>to<sp/>get<sp/>current<sp/>info<sp/>on<sp/>the<sp/>mass<sp/>props<sp/>of<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1abb0a617141d737c550757f2c639ead4a" kindref="member">updateSystemMassProps</ref>(integrateToThisTime);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>mass<sp/>props<sp/>for<sp/>all<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a5270c807cea836719424cfe2083c2188" kindref="member">updateSpacecraftMassProps</ref>(integrateToThisTime,<sp/>(*(*spacecraftUnConnectedIt)));</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a7bf8e773791e820fb128066be3922182" kindref="member">calculateDeltaVandAcceleration</ref>(this-&gt;<ref refid="class_spacecraft_system_1a1ce781575e1d355cdc077bbf50904574" kindref="member">primaryCentralSpacecraft</ref>,<sp/>this-&gt;timeStep);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>for<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(spacecraftUnConnectedIt<sp/>=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.begin();<sp/>spacecraftUnConnectedIt<sp/>!=<sp/>this-&gt;<ref refid="class_spacecraft_system_1aa506868b737deacc747fba407727bd45" kindref="member">unDockedSpacecraft</ref>.end();<sp/>spacecraftUnConnectedIt++)</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a7bf8e773791e820fb128066be3922182" kindref="member">calculateDeltaVandAcceleration</ref>((*(*spacecraftUnConnectedIt)),<sp/>this-&gt;timeStep);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Compute<sp/>Energy<sp/>and<sp/>Momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spacecraft_system_1a66c9bbd65ecb353f14c78b6b54303141" kindref="member">computeEnergyMomentum</ref>(integrateToThisTime);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/spacecraftSystem/spacecraftSystem.cpp"/>
  </compounddef>
</doxygen>
