<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="bore_ang_calc_8cpp" kind="file" language="C++">
    <compoundname>boreAngCalc.cpp</compoundname>
    <includes refid="bore_ang_calc_8h" local="yes">simulation/dynamics/DynOutput/boreAngCalc/boreAngCalc.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/rigidBodyKinematics.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/dynamics/DynOutput/boreAngCalc/boreAngCalc.cpp</label>
        <link refid="bore_ang_calc_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>simulation/dynamics/DynOutput/boreAngCalc/boreAngCalc.h</label>
        <link refid="bore_ang_calc_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Eigen/Dense</label>
      </node>
      <node id="5">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="9">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="8">
        <label>architecture/msgPayloadDefC/BoreAngleMsgPayload.h</label>
      </node>
      <node id="6">
        <label>architecture/msgPayloadDefC/SCStatesMsgPayload.h</label>
      </node>
      <node id="7">
        <label>architecture/msgPayloadDefC/SpicePlanetStateMsgPayload.h</label>
      </node>
      <node id="11">
        <label>architecture/utilities/avsEigenMRP.h</label>
      </node>
      <node id="12">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="10">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="13">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="14">
        <label>architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;simulation/dynamics/DynOutput/boreAngCalc/boreAngCalc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="class_bore_ang_calc_1ab7f8da22458b776024be5b0b2c228e21" kindref="member">BoreAngCalc::BoreAngCalc</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>CallCounts<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>pointing<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_bore_ang_calc_1a545ad98dea48e9c34092f385e3ca2187" kindref="member">boreVec_Po</ref>.setZero();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_bore_ang_calc_1a48139c44f2ea4c51f143eeead9fd9f07" kindref="member">inertialHeadingVec_N</ref>.setZero();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>the<sp/>payloads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;localPlanet<sp/>=<sp/>this-&gt;<ref refid="class_bore_ang_calc_1aa0294e58832c058f6856074192b6c46c" kindref="member">celBodyInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;localState<sp/>=<sp/>this-&gt;<ref refid="class_bore_ang_calc_1ae5d4331d0d6263dd94b02cbb667576f2" kindref="member">scStateInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="class_bore_ang_calc_1aa8b8e352ac33bbae5b3f7fdadd305491" kindref="member">BoreAngCalc::~BoreAngCalc</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bore_ang_calc_1a23ea5a94ea6b3819a065952f313a781f" kindref="member">BoreAngCalc::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>required<sp/>input<sp/>messages<sp/>have<sp/>not<sp/>been<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_bore_ang_calc_1ae5d4331d0d6263dd94b02cbb667576f2" kindref="member">scStateInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bskLogger.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;boreAngCalc.scStateInMsg<sp/>was<sp/>not<sp/>linked.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_bore_ang_calc_1aa0294e58832c058f6856074192b6c46c" kindref="member">celBodyInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;useCelestialHeading<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_bore_ang_calc_1a48139c44f2ea4c51f143eeead9fd9f07" kindref="member">inertialHeadingVec_N</ref>.norm()<sp/>&gt;<sp/>1e-8)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;useInertialHeading<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bskLogger.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Either<sp/>boreAngCalc.celBodyInMsg<sp/>was<sp/>not<sp/>linked<sp/>or<sp/>boreAngCalc.inertialHeadingVec_N<sp/>was<sp/>not<sp/>set.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bore_ang_calc_1a2652f74fe453819ffb0e70137093d217" kindref="member">BoreAngCalc::WriteOutputMessages</ref>(uint64_t<sp/>CurrentClock)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_bore_ang_calc_1af4bd017547921545b6fc279f5701e3df" kindref="member">angOutMsg</ref>.write(&amp;this-&gt;boresightAng,<sp/>this-&gt;moduleID,<sp/>CurrentClock);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bore_ang_calc_1a2e952dab0de207a2e3426a3ac591f5fe" kindref="member">BoreAngCalc::ReadInputs</ref>()</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;localState<sp/>=<sp/>this-&gt;<ref refid="class_bore_ang_calc_1ae5d4331d0d6263dd94b02cbb667576f2" kindref="member">scStateInMsg</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>celBodyMsgGood<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;useCelestialHeading)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;localPlanet<sp/>=<sp/>this-&gt;<ref refid="class_bore_ang_calc_1aa0294e58832c058f6856074192b6c46c" kindref="member">celBodyInMsg</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>celBodyMsgGood<sp/>=<sp/>this-&gt;<ref refid="class_bore_ang_calc_1aa0294e58832c058f6856074192b6c46c" kindref="member">celBodyInMsg</ref>.isWritten();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;inputsGood<sp/>=<sp/>this-&gt;<ref refid="class_bore_ang_calc_1ae5d4331d0d6263dd94b02cbb667576f2" kindref="member">scStateInMsg</ref>.isWritten()<sp/>&amp;&amp;<sp/>(celBodyMsgGood<sp/>||<sp/>this-&gt;useInertialHeading);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bore_ang_calc_1a7b12b36b5adcf8abb1c4c7eeff141788" kindref="member">BoreAngCalc::computeCelestialAxisPoint</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>planet<sp/>and<sp/>body<sp/>data<sp/>to<sp/>Eigen<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_BN_N<sp/>=<sp/>cArray2EigenVector3d(this-&gt;localState.r_BN_N);<sp/></highlight><highlight class="comment">//<sp/>spacecraft&apos;s<sp/>inertial<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>v_BN_N<sp/>=<sp/>cArray2EigenVector3d(this-&gt;localState.v_BN_N);<sp/></highlight><highlight class="comment">//<sp/>spacecraft&apos;&apos;s<sp/>inertial<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_PN_N<sp/>=<sp/>cArray2EigenVector3d(this-&gt;localPlanet.PositionVector);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>planet&apos;s<sp/>inertial<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>v_PN_N<sp/>=<sp/>cArray2EigenVector3d(this-&gt;localPlanet.VelocityVector);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>planet&apos;s<sp/>inertial<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>relative<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_PB_N<sp/>=<sp/>r_PN_N<sp/>-<sp/>r_BN_N;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>relative<sp/>position<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rHat_PB_N<sp/>=<sp/>r_PB_N.normalized();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unit<sp/>vector<sp/>for<sp/>relative<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>v_PB_N<sp/>=<sp/>v_PN_N<sp/>-<sp/>v_BN_N;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>relative<sp/>velocity<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>secHat_N<sp/>=<sp/>r_PB_N.cross(v_PB_N).normalized();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>perpendicular<sp/>unit<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>inertial<sp/>to<sp/>point<sp/>DCM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_PoN;<sp/><sp/></highlight><highlight class="comment">//<sp/>dcm,<sp/>inertial<sp/>to<sp/>point<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_PoN.row(0)<sp/>=<sp/>rHat_PB_N.transpose();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_PoN.row(2)<sp/>=<sp/>rHat_PB_N.cross(secHat_N).normalized();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_PoN.row(1)<sp/>=<sp/>dcm_PoN.row(2).cross(dcm_PoN.row(0));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>point<sp/>to<sp/>body<sp/>frame<sp/>DCM<sp/>and<sp/>convert<sp/>the<sp/>boresight<sp/>vector<sp/>to<sp/>the<sp/>Po<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigma_BN<sp/>=<sp/>cArray2EigenMRPd(this-&gt;localState.sigma_BN);<sp/></highlight><highlight class="comment">//<sp/>mrp,<sp/>inertial<sp/>to<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_BN<sp/>=<sp/>sigma_BN.toRotationMatrix().transpose();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dcm,<sp/>inertial<sp/>to<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_BPo<sp/>=<sp/>dcm_BN<sp/>*<sp/>dcm_PoN.transpose();<sp/></highlight><highlight class="comment">//<sp/>dcm,<sp/>point<sp/>to<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_bore_ang_calc_1a545ad98dea48e9c34092f385e3ca2187" kindref="member">boreVec_Po</ref><sp/>=<sp/>dcm_BPo.transpose()<sp/>*<sp/>this-&gt;<ref refid="class_bore_ang_calc_1a9c49e1d8bf84c370d92b0b8ae034e9f9" kindref="member">boreVec_B</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bore_ang_calc_1a2a6e574ae2dabd01911d4fc66ead4e10" kindref="member">BoreAngCalc::computeCelestialOutputData</ref>()</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>epsilon<sp/>that<sp/>will<sp/>avoid<sp/>atan2<sp/>giving<sp/>a<sp/>NaN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/>1e-10;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>baselinePoint(1.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dotValue<sp/>=<sp/>this-&gt;<ref refid="class_bore_ang_calc_1a545ad98dea48e9c34092f385e3ca2187" kindref="member">boreVec_Po</ref>.dot(baselinePoint);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;boresightAng.missAngle<sp/>=<sp/>fabs(safeAcos(dotValue));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(this-&gt;<ref refid="class_bore_ang_calc_1a545ad98dea48e9c34092f385e3ca2187" kindref="member">boreVec_Po</ref>(1))<sp/>&lt;<sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;boresightAng.azimuth<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;boresightAng.azimuth<sp/>=<sp/>atan2(this-&gt;<ref refid="class_bore_ang_calc_1a545ad98dea48e9c34092f385e3ca2187" kindref="member">boreVec_Po</ref>(2),<sp/>this-&gt;<ref refid="class_bore_ang_calc_1a545ad98dea48e9c34092f385e3ca2187" kindref="member">boreVec_Po</ref>(1));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bore_ang_calc_1a5af9cd003d3610fa1dd1838695da35a8" kindref="member">BoreAngCalc::computeInertialOutputData</ref>()</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>DCM<sp/>from<sp/>inertial<sp/>do<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigma_BN<sp/>=<sp/>cArray2EigenMRPd(this-&gt;localState.sigma_BN);<sp/></highlight><highlight class="comment">//<sp/>mrp,<sp/>inertial<sp/>to<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_BN<sp/>=<sp/>sigma_BN.toRotationMatrix().transpose();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dcm,<sp/>inertial<sp/>to<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>inertial<sp/>heading<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>inertialHeadingVec_B<sp/>=<sp/>dcm_BN<sp/>*<sp/>this-&gt;<ref refid="class_bore_ang_calc_1a48139c44f2ea4c51f143eeead9fd9f07" kindref="member">inertialHeadingVec_N</ref>;<sp/></highlight><highlight class="comment">//<sp/>inertial<sp/>heading<sp/>written<sp/>in<sp/>the<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dotValue<sp/>=<sp/>this-&gt;<ref refid="class_bore_ang_calc_1a9c49e1d8bf84c370d92b0b8ae034e9f9" kindref="member">boreVec_B</ref>.dot(inertialHeadingVec_B);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;boresightAng.missAngle<sp/>=<sp/>fabs(safeAcos(dotValue));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Azimuth<sp/>is<sp/>undefined,<sp/>so<sp/>we<sp/>set<sp/>it<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;boresightAng.azimuth<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bore_ang_calc_1a9aae5c61f3673b798e2ac441d353a16b" kindref="member">BoreAngCalc::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bore_ang_calc_1a2e952dab0de207a2e3426a3ac591f5fe" kindref="member">ReadInputs</ref>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;inputsGood)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;useCelestialHeading)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_bore_ang_calc_1a7b12b36b5adcf8abb1c4c7eeff141788" kindref="member">computeCelestialAxisPoint</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_bore_ang_calc_1a2a6e574ae2dabd01911d4fc66ead4e10" kindref="member">computeCelestialOutputData</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_bore_ang_calc_1a5af9cd003d3610fa1dd1838695da35a8" kindref="member">computeInertialOutputData</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bore_ang_calc_1a2652f74fe453819ffb0e70137093d217" kindref="member">WriteOutputMessages</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/DynOutput/boreAngCalc/boreAngCalc.cpp"/>
  </compounddef>
</doxygen>
