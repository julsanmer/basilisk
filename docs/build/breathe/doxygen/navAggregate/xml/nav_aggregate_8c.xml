<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="nav_aggregate_8c" kind="file" language="C++">
    <compoundname>navAggregate.c</compoundname>
    <includes refid="nav_aggregate_8h" local="yes">navAggregate.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/transDetermination/navAggregate/navAggregate.c</label>
        <link refid="nav_aggregate_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>navAggregate.h</label>
        <link refid="nav_aggregate_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="7">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="6">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="3">
        <label>cMsgCInterface/NavAttMsg_C.h</label>
      </node>
      <node id="4">
        <label>cMsgCInterface/NavTransMsg_C.h</label>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="nav_aggregate_8c_1a5bbc89f6ceed2ca83d114ddcb5b0d4d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_aggregateNav</definition>
        <argsstring>(NavAggregateData *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_aggregateNav</name>
        <param>
          <type><ref refid="struct_nav_aggregate_data" kindref="compound">NavAggregateData</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initializes the configData for the nav aggregation algorithm. It initializes the output messages in the messaging system. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the Nav aggregation interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The Basilisk module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/transDetermination/navAggregate/navAggregate.c" line="32" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/transDetermination/navAggregate/navAggregate.c" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="nav_aggregate_8c_1a432b8feb1a6b1e97e2a622ba4a7353e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_aggregateNav</definition>
        <argsstring>(NavAggregateData *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_aggregateNav</name>
        <param>
          <type><ref refid="struct_nav_aggregate_data" kindref="compound">NavAggregateData</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This resets the module to original states. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with this module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>ensure incoming message counters are not larger than MAX_AGG_NAV_MSG</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>loop over the number of attitude input messages and make sure they are linked</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>loop over the number of translational input messages and make sure they are linked</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>ensure the attitude message index locations are less than MAX_AGG_NAV_MSG</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>ensure the translational message index locations are less than MAX_AGG_NAV_MSG</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>zero the arrays of input messages</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/transDetermination/navAggregate/navAggregate.c" line="45" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/transDetermination/navAggregate/navAggregate.c" bodystart="45" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="nav_aggregate_8c_1a7787828d097d74946cdc9c577279b9af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_aggregateNav</definition>
        <argsstring>(NavAggregateData *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_aggregateNav</name>
        <param>
          <type><ref refid="struct_nav_aggregate_data" kindref="compound">NavAggregateData</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method takes the navigation message snippets created by the various navigation components in the FSW and aggregates them into a single complete navigation message. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the aggregate nav module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The Basilisk module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>zero the output message buffers</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>check that attitude navigation messages are present</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Iterate through all of the attitude input messages, clear local Msg buffer and archive the new nav data</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Copy out each part of the attitude source message into the target output message</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>check that translation navigation messages are present</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Iterate through all of the translation input messages, clear local Msg buffer and archive the new nav data</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Copy out each part of the translation source message into the target output message</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Write the total message out for everyone else to pick up</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/transDetermination/navAggregate/navAggregate.c" line="166" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/transDetermination/navAggregate/navAggregate.c" bodystart="166" bodyend="212"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;navAggregate.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_aggregateNav(<ref refid="struct_nav_aggregate_data" kindref="compound">NavAggregateData</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>NavAttMsg_C_init(&amp;configData-&gt;<ref refid="struct_nav_aggregate_data_1ab4bbffeec0d1fd6c16f1bb7e21ddb431" kindref="member">navAttOutMsg</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>NavTransMsg_C_init(&amp;configData-&gt;<ref refid="struct_nav_aggregate_data_1aafaf70c3d9d4d02ddff09764f4589749" kindref="member">navTransOutMsg</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_aggregateNav(<ref refid="struct_nav_aggregate_data" kindref="compound">NavAggregateData</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8a89e68f7f097e59b158a5726d93f0dd" kindref="member">attMsgCount</ref><sp/>&gt;<sp/>MAX_AGG_NAV_MSG)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info[MAX_LOGGING_LENGTH];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(info,<sp/>MAX_LOGGING_LENGTH,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>attitude<sp/>message<sp/>count<sp/>%d<sp/>is<sp/>larger<sp/>than<sp/>allowed<sp/>(%d).<sp/>Setting<sp/>count<sp/>to<sp/>max<sp/>value.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a8a89e68f7f097e59b158a5726d93f0dd" kindref="member">attMsgCount</ref>,<sp/>MAX_AGG_NAV_MSG);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8f1efab12303597e5eb6daaa6447030d" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/>info);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a8a89e68f7f097e59b158a5726d93f0dd" kindref="member">attMsgCount</ref><sp/>=<sp/>MAX_AGG_NAV_MSG;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_nav_aggregate_data_1a996e4919dcadd41c0843821ae21532d2" kindref="member">transMsgCount</ref><sp/>&gt;<sp/>MAX_AGG_NAV_MSG)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info[MAX_LOGGING_LENGTH];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(info,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>translation<sp/>message<sp/>count<sp/>%d<sp/>is<sp/>larger<sp/>than<sp/>allowed<sp/>(%d).<sp/>Setting<sp/>count<sp/>to<sp/>max<sp/>value.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a996e4919dcadd41c0843821ae21532d2" kindref="member">transMsgCount</ref>,<sp/>MAX_AGG_NAV_MSG);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8f1efab12303597e5eb6daaa6447030d" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/>info);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a996e4919dcadd41c0843821ae21532d2" kindref="member">transMsgCount</ref><sp/>=<sp/>MAX_AGG_NAV_MSG;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint32_t<sp/>i=0;<sp/>i&lt;configData-&gt;<ref refid="struct_nav_aggregate_data_1a8a89e68f7f097e59b158a5726d93f0dd" kindref="member">attMsgCount</ref>;<sp/>i=i+1)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!NavAttMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_nav_aggregate_data_1ac3aa1520b675c9a2a02888c0cbb884f0" kindref="member">attMsgs</ref>[i].<ref refid="struct_aggregate_att_input_1a451b2ec03374e4f1af51c24a1d5982b6" kindref="member">navAttInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8f1efab12303597e5eb6daaa6447030d" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>attitude<sp/>input<sp/>message<sp/>name<sp/>was<sp/>not<sp/>linked.<sp/><sp/>Be<sp/>sure<sp/>that<sp/>attMsgCount<sp/>is<sp/>set<sp/>properly.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint32_t<sp/>i=0;<sp/>i&lt;configData-&gt;<ref refid="struct_nav_aggregate_data_1a996e4919dcadd41c0843821ae21532d2" kindref="member">transMsgCount</ref>;<sp/>i=i+1)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!NavTransMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_nav_aggregate_data_1a2bff827034214fd847d48297673b4664" kindref="member">transMsgs</ref>[i].<ref refid="struct_aggregate_trans_input_1a6999a5cc8181e19e88be66b9a61e080c" kindref="member">navTransInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8f1efab12303597e5eb6daaa6447030d" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>translation<sp/>input<sp/>message<sp/>name<sp/>was<sp/>not<sp/>specified.<sp/><sp/>Be<sp/>sure<sp/>that<sp/>transMsgCount<sp/>is<sp/>set<sp/>properly.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_nav_aggregate_data_1a61809bfe08bd0d73181690d66928c10e" kindref="member">attTimeIdx</ref><sp/>&gt;=<sp/>MAX_AGG_NAV_MSG)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info[MAX_LOGGING_LENGTH];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(info,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>attTimeIdx<sp/>variable<sp/>%d<sp/>is<sp/>too<sp/>large.<sp/>Must<sp/>be<sp/>less<sp/>than<sp/>%d.<sp/>Setting<sp/>index<sp/>to<sp/>max<sp/>value.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a61809bfe08bd0d73181690d66928c10e" kindref="member">attTimeIdx</ref>,<sp/>MAX_AGG_NAV_MSG);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8f1efab12303597e5eb6daaa6447030d" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/>info);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a61809bfe08bd0d73181690d66928c10e" kindref="member">attTimeIdx</ref><sp/>=<sp/>MAX_AGG_NAV_MSG<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_nav_aggregate_data_1a717efd9c2854fdd7279cf5edb2fb7d8b" kindref="member">attIdx</ref><sp/>&gt;=<sp/>MAX_AGG_NAV_MSG)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info[MAX_LOGGING_LENGTH];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(info,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>attIdx<sp/>variable<sp/>%d<sp/>is<sp/>too<sp/>large.<sp/>Must<sp/>be<sp/>less<sp/>than<sp/>%d.<sp/>Setting<sp/>index<sp/>to<sp/>max<sp/>value.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a717efd9c2854fdd7279cf5edb2fb7d8b" kindref="member">attIdx</ref>,<sp/>MAX_AGG_NAV_MSG);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8f1efab12303597e5eb6daaa6447030d" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/>info);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a717efd9c2854fdd7279cf5edb2fb7d8b" kindref="member">attIdx</ref><sp/>=<sp/>MAX_AGG_NAV_MSG<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_nav_aggregate_data_1a7fc28fd606690bb104599171b530a787" kindref="member">rateIdx</ref><sp/>&gt;=<sp/>MAX_AGG_NAV_MSG)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info[MAX_LOGGING_LENGTH];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(info,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>rateIdx<sp/>variable<sp/>%d<sp/>is<sp/>too<sp/>large.<sp/>Must<sp/>be<sp/>less<sp/>than<sp/>%d.<sp/>Setting<sp/>index<sp/>to<sp/>max<sp/>value.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a7fc28fd606690bb104599171b530a787" kindref="member">rateIdx</ref>,<sp/>MAX_AGG_NAV_MSG);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8f1efab12303597e5eb6daaa6447030d" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/>info);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a7fc28fd606690bb104599171b530a787" kindref="member">rateIdx</ref><sp/>=<sp/>MAX_AGG_NAV_MSG<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_nav_aggregate_data_1a21cb7c887b622a71235f670b918e6df1" kindref="member">sunIdx</ref><sp/>&gt;=<sp/>MAX_AGG_NAV_MSG)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info[MAX_LOGGING_LENGTH];</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(info,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>sunIdx<sp/>variable<sp/>%d<sp/>is<sp/>too<sp/>large.<sp/>Must<sp/>be<sp/>less<sp/>than<sp/>%d.<sp/>Setting<sp/>index<sp/>to<sp/>max<sp/>value.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a21cb7c887b622a71235f670b918e6df1" kindref="member">sunIdx</ref>,<sp/>MAX_AGG_NAV_MSG);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8f1efab12303597e5eb6daaa6447030d" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/>info);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a21cb7c887b622a71235f670b918e6df1" kindref="member">sunIdx</ref><sp/>=<sp/>MAX_AGG_NAV_MSG<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_nav_aggregate_data_1a733c3553d7bf5b31c09544e52ae626ed" kindref="member">transTimeIdx</ref><sp/>&gt;=<sp/>MAX_AGG_NAV_MSG)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info[MAX_LOGGING_LENGTH];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(info,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>transTimeIdx<sp/>variable<sp/>%d<sp/>is<sp/>too<sp/>large.<sp/>Must<sp/>be<sp/>less<sp/>than<sp/>%d.<sp/>Setting<sp/>index<sp/>to<sp/>max<sp/>value.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a733c3553d7bf5b31c09544e52ae626ed" kindref="member">transTimeIdx</ref>,<sp/>MAX_AGG_NAV_MSG);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8f1efab12303597e5eb6daaa6447030d" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/>info);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a733c3553d7bf5b31c09544e52ae626ed" kindref="member">transTimeIdx</ref><sp/>=<sp/>MAX_AGG_NAV_MSG<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_nav_aggregate_data_1a9de3c8d693c1a75505dc76330593b16b" kindref="member">posIdx</ref><sp/>&gt;=<sp/>MAX_AGG_NAV_MSG)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info[MAX_LOGGING_LENGTH];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(info,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>posIdx<sp/>variable<sp/>%d<sp/>is<sp/>too<sp/>large.<sp/>Must<sp/>be<sp/>less<sp/>than<sp/>%d.<sp/>Setting<sp/>index<sp/>to<sp/>max<sp/>value.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a9de3c8d693c1a75505dc76330593b16b" kindref="member">posIdx</ref>,<sp/>MAX_AGG_NAV_MSG);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8f1efab12303597e5eb6daaa6447030d" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/>info);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a9de3c8d693c1a75505dc76330593b16b" kindref="member">posIdx</ref><sp/>=<sp/>MAX_AGG_NAV_MSG<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_nav_aggregate_data_1a11f206f45aca86b4c2888cd3aeda087d" kindref="member">velIdx</ref><sp/>&gt;=<sp/>MAX_AGG_NAV_MSG)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info[MAX_LOGGING_LENGTH];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(info,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>velIdx<sp/>variable<sp/>%d<sp/>is<sp/>too<sp/>large.<sp/>Must<sp/>be<sp/>less<sp/>than<sp/>%d.<sp/>Setting<sp/>index<sp/>to<sp/>max<sp/>value.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a11f206f45aca86b4c2888cd3aeda087d" kindref="member">velIdx</ref>,<sp/>MAX_AGG_NAV_MSG);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8f1efab12303597e5eb6daaa6447030d" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/>info);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a11f206f45aca86b4c2888cd3aeda087d" kindref="member">velIdx</ref><sp/>=<sp/>MAX_AGG_NAV_MSG<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_nav_aggregate_data_1a9a92e543a94d8c6d6532792e76f2a4cc" kindref="member">dvIdx</ref><sp/>&gt;=<sp/>MAX_AGG_NAV_MSG)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info[MAX_LOGGING_LENGTH];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(info,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>dvIdx<sp/>variable<sp/>%d<sp/>is<sp/>too<sp/>large.<sp/>Must<sp/>be<sp/>less<sp/>than<sp/>%d.<sp/>Setting<sp/>index<sp/>to<sp/>max<sp/>value.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a9a92e543a94d8c6d6532792e76f2a4cc" kindref="member">dvIdx</ref>,<sp/>MAX_AGG_NAV_MSG);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8f1efab12303597e5eb6daaa6447030d" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/>info);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a9a92e543a94d8c6d6532792e76f2a4cc" kindref="member">dvIdx</ref><sp/>=<sp/>MAX_AGG_NAV_MSG<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i=0;<sp/>i&lt;<sp/>MAX_AGG_NAV_MSG;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1ac3aa1520b675c9a2a02888c0cbb884f0" kindref="member">attMsgs</ref>[i].<ref refid="struct_aggregate_att_input_1a3352475f446cff5a48f79319d873fb4a" kindref="member">msgStorage</ref><sp/>=<sp/>NavAttMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a2bff827034214fd847d48297673b4664" kindref="member">transMsgs</ref>[i].<ref refid="struct_aggregate_trans_input_1ac8e4d0efc25c8953fa44c26c346ce406" kindref="member">msgStorage</ref><sp/>=<sp/>NavTransMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_aggregateNav(<ref refid="struct_nav_aggregate_data" kindref="compound">NavAggregateData</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>NavAttMsgPayload<sp/>navAttOutMsgBuffer;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[-]<sp/>The<sp/>local<sp/>storage<sp/>of<sp/>the<sp/>outgoing<sp/>attitude<sp/>navibation<sp/>message<sp/>data*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>NavTransMsgPayload<sp/>navTransOutMsgBuffer;<sp/></highlight><highlight class="comment">/*<sp/>[-]<sp/>The<sp/>local<sp/>storage<sp/>of<sp/>the<sp/>outgoing<sp/>message<sp/>data*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>navAttOutMsgBuffer<sp/>=<sp/>NavAttMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>navTransOutMsgBuffer<sp/>=<sp/>NavTransMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_nav_aggregate_data_1a8a89e68f7f097e59b158a5726d93f0dd" kindref="member">attMsgCount</ref>)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;configData-&gt;<ref refid="struct_nav_aggregate_data_1a8a89e68f7f097e59b158a5726d93f0dd" kindref="member">attMsgCount</ref>;<sp/>i=i+1)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1ac3aa1520b675c9a2a02888c0cbb884f0" kindref="member">attMsgs</ref>[i].<ref refid="struct_aggregate_att_input_1a3352475f446cff5a48f79319d873fb4a" kindref="member">msgStorage</ref><sp/>=<sp/>NavAttMsg_C_read(&amp;configData-&gt;<ref refid="struct_nav_aggregate_data_1ac3aa1520b675c9a2a02888c0cbb884f0" kindref="member">attMsgs</ref>[i].<ref refid="struct_aggregate_att_input_1a451b2ec03374e4f1af51c24a1d5982b6" kindref="member">navAttInMsg</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navAttOutMsgBuffer.timeTag<sp/>=<sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1ac3aa1520b675c9a2a02888c0cbb884f0" kindref="member">attMsgs</ref>[configData-&gt;<ref refid="struct_nav_aggregate_data_1a61809bfe08bd0d73181690d66928c10e" kindref="member">attTimeIdx</ref>].<ref refid="struct_aggregate_att_input_1a3352475f446cff5a48f79319d873fb4a" kindref="member">msgStorage</ref>.timeTag;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_nav_aggregate_data_1ac3aa1520b675c9a2a02888c0cbb884f0" kindref="member">attMsgs</ref>[configData-&gt;<ref refid="struct_nav_aggregate_data_1a717efd9c2854fdd7279cf5edb2fb7d8b" kindref="member">attIdx</ref>].<ref refid="struct_aggregate_att_input_1a3352475f446cff5a48f79319d873fb4a" kindref="member">msgStorage</ref>.sigma_BN,<sp/>navAttOutMsgBuffer.sigma_BN);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_nav_aggregate_data_1ac3aa1520b675c9a2a02888c0cbb884f0" kindref="member">attMsgs</ref>[configData-&gt;<ref refid="struct_nav_aggregate_data_1a7fc28fd606690bb104599171b530a787" kindref="member">rateIdx</ref>].<ref refid="struct_aggregate_att_input_1a3352475f446cff5a48f79319d873fb4a" kindref="member">msgStorage</ref>.omega_BN_B,<sp/>navAttOutMsgBuffer.omega_BN_B);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_nav_aggregate_data_1ac3aa1520b675c9a2a02888c0cbb884f0" kindref="member">attMsgs</ref>[configData-&gt;<ref refid="struct_nav_aggregate_data_1a21cb7c887b622a71235f670b918e6df1" kindref="member">sunIdx</ref>].<ref refid="struct_aggregate_att_input_1a3352475f446cff5a48f79319d873fb4a" kindref="member">msgStorage</ref>.vehSunPntBdy,<sp/>navAttOutMsgBuffer.vehSunPntBdy);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_nav_aggregate_data_1a996e4919dcadd41c0843821ae21532d2" kindref="member">transMsgCount</ref>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;configData-&gt;<ref refid="struct_nav_aggregate_data_1a996e4919dcadd41c0843821ae21532d2" kindref="member">transMsgCount</ref>;<sp/>i=i+1)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a2bff827034214fd847d48297673b4664" kindref="member">transMsgs</ref>[i].<ref refid="struct_aggregate_trans_input_1ac8e4d0efc25c8953fa44c26c346ce406" kindref="member">msgStorage</ref><sp/>=<sp/>NavTransMsg_C_read(&amp;configData-&gt;<ref refid="struct_nav_aggregate_data_1a2bff827034214fd847d48297673b4664" kindref="member">transMsgs</ref>[i].<ref refid="struct_aggregate_trans_input_1a6999a5cc8181e19e88be66b9a61e080c" kindref="member">navTransInMsg</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navTransOutMsgBuffer.timeTag<sp/>=<sp/>configData-&gt;<ref refid="struct_nav_aggregate_data_1a2bff827034214fd847d48297673b4664" kindref="member">transMsgs</ref>[configData-&gt;<ref refid="struct_nav_aggregate_data_1a733c3553d7bf5b31c09544e52ae626ed" kindref="member">transTimeIdx</ref>].<ref refid="struct_aggregate_trans_input_1ac8e4d0efc25c8953fa44c26c346ce406" kindref="member">msgStorage</ref>.timeTag;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_nav_aggregate_data_1a2bff827034214fd847d48297673b4664" kindref="member">transMsgs</ref>[configData-&gt;<ref refid="struct_nav_aggregate_data_1a9de3c8d693c1a75505dc76330593b16b" kindref="member">posIdx</ref>].<ref refid="struct_aggregate_trans_input_1ac8e4d0efc25c8953fa44c26c346ce406" kindref="member">msgStorage</ref>.r_BN_N,<sp/>navTransOutMsgBuffer.r_BN_N);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_nav_aggregate_data_1a2bff827034214fd847d48297673b4664" kindref="member">transMsgs</ref>[configData-&gt;<ref refid="struct_nav_aggregate_data_1a11f206f45aca86b4c2888cd3aeda087d" kindref="member">velIdx</ref>].<ref refid="struct_aggregate_trans_input_1ac8e4d0efc25c8953fa44c26c346ce406" kindref="member">msgStorage</ref>.v_BN_N,<sp/>navTransOutMsgBuffer.v_BN_N);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_nav_aggregate_data_1a2bff827034214fd847d48297673b4664" kindref="member">transMsgs</ref>[configData-&gt;<ref refid="struct_nav_aggregate_data_1a9a92e543a94d8c6d6532792e76f2a4cc" kindref="member">dvIdx</ref>].<ref refid="struct_aggregate_trans_input_1ac8e4d0efc25c8953fa44c26c346ce406" kindref="member">msgStorage</ref>.vehAccumDV,<sp/>navTransOutMsgBuffer.vehAccumDV);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>NavAttMsg_C_write(&amp;navAttOutMsgBuffer,<sp/>&amp;configData-&gt;<ref refid="struct_nav_aggregate_data_1ab4bbffeec0d1fd6c16f1bb7e21ddb431" kindref="member">navAttOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>NavTransMsg_C_write(&amp;navTransOutMsgBuffer,<sp/>&amp;configData-&gt;<ref refid="struct_nav_aggregate_data_1aafaf70c3d9d4d02ddff09764f4589749" kindref="member">navTransOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/transDetermination/navAggregate/navAggregate.c"/>
  </compounddef>
</doxygen>
