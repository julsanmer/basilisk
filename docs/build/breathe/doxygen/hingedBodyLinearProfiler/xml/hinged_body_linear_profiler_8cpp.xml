<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="hinged_body_linear_profiler_8cpp" kind="file" language="C++">
    <compoundname>hingedBodyLinearProfiler.cpp</compoundname>
    <includes refid="hinged_body_linear_profiler_8h" local="yes">simulation/deviceInterface/hingedBodyLinearProfiler/hingedBodyLinearProfiler.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cstring</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/deviceInterface/hingedBodyLinearProfiler/hingedBodyLinearProfiler.cpp</label>
        <link refid="hinged_body_linear_profiler_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>simulation/deviceInterface/hingedBodyLinearProfiler/hingedBodyLinearProfiler.h</label>
        <link refid="hinged_body_linear_profiler_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="6">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="4">
        <label>architecture/msgPayloadDefC/HingedRigidBodyMsgPayload.h</label>
      </node>
      <node id="5">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="7">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="9">
        <label>cstring</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2022,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;simulation/deviceInterface/hingedBodyLinearProfiler/hingedBodyLinearProfiler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="class_hinged_body_linear_profiler_1a8f141669d0501adce3041cb2b4bc1765" kindref="member">HingedBodyLinearProfiler::HingedBodyLinearProfiler</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_hinged_body_linear_profiler_1ab655c21aaab11f051acf6f0b9cdb12f8" kindref="member">startTheta</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_hinged_body_linear_profiler_1a8ff934602085d62ec101a34db40d69c9" kindref="member">endTheta</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_hinged_body_linear_profiler_1a1a1b21de253a8f2dc38aaf3b16ec766f" kindref="member">startTime</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_hinged_body_linear_profiler_1ad2fad77b2fbd19b4b94aed8b4d07ba9f" kindref="member">endTime</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="class_hinged_body_linear_profiler_1a895145308459df0d1e286d193d081acb" kindref="member">HingedBodyLinearProfiler::~HingedBodyLinearProfiler</ref>()</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_hinged_body_linear_profiler_1a1ddd7544e357df59d1a9da0251304740" kindref="member">HingedBodyLinearProfiler::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>required<sp/>input<sp/>messages<sp/>are<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_hinged_body_linear_profiler_1ad2fad77b2fbd19b4b94aed8b4d07ba9f" kindref="member">endTime</ref>-this-&gt;<ref refid="class_hinged_body_linear_profiler_1a1a1b21de253a8f2dc38aaf3b16ec766f" kindref="member">startTime</ref><sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;deploymentSlope<sp/>=<sp/>(this-&gt;<ref refid="class_hinged_body_linear_profiler_1a8ff934602085d62ec101a34db40d69c9" kindref="member">endTheta</ref>-this-&gt;<ref refid="class_hinged_body_linear_profiler_1ab655c21aaab11f051acf6f0b9cdb12f8" kindref="member">startTheta</ref>)<sp/>/<sp/>((this-&gt;<ref refid="class_hinged_body_linear_profiler_1ad2fad77b2fbd19b4b94aed8b4d07ba9f" kindref="member">endTime</ref>-this-&gt;<ref refid="class_hinged_body_linear_profiler_1a1a1b21de253a8f2dc38aaf3b16ec766f" kindref="member">startTime</ref>)<sp/>*<sp/>NANO2SEC);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_hinged_body_linear_profiler_1aecfc2c21a39daf759538ff1531a78549" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Delta<sp/>between<sp/>end<sp/>time<sp/>and<sp/>start<sp/>time<sp/>of<sp/>deployment<sp/>must<sp/>exist<sp/>and<sp/>be<sp/>positive.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_hinged_body_linear_profiler_1a147671f25629b1bbcf7cc84b2aa3feb3" kindref="member">HingedBodyLinearProfiler::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>refTheta;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>refThetaDot;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>HingedRigidBodyMsgPayload<sp/>hingedRigidBodyReferenceOutMsgBuffer;<sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>hingedRigidBodyReferenceOutMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_hinged_body_linear_profiler_1af24b36463e2a4a3b188034f58d48f7f3" kindref="member">hingedRigidBodyReferenceOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CurrentSimNanos<sp/>&lt;<sp/>this-&gt;<ref refid="class_hinged_body_linear_profiler_1a1a1b21de253a8f2dc38aaf3b16ec766f" kindref="member">startTime</ref>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refTheta<sp/>=<sp/>this-&gt;<ref refid="class_hinged_body_linear_profiler_1ab655c21aaab11f051acf6f0b9cdb12f8" kindref="member">startTheta</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refThetaDot<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CurrentSimNanos<sp/>&lt;=<sp/>this-&gt;<ref refid="class_hinged_body_linear_profiler_1ad2fad77b2fbd19b4b94aed8b4d07ba9f" kindref="member">endTime</ref>){<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refThetaDot<sp/>=<sp/>this-&gt;deploymentSlope;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refTheta<sp/>=<sp/>this-&gt;<ref refid="class_hinged_body_linear_profiler_1ab655c21aaab11f051acf6f0b9cdb12f8" kindref="member">startTheta</ref><sp/>+<sp/>((CurrentSimNanos-this-&gt;<ref refid="class_hinged_body_linear_profiler_1a1a1b21de253a8f2dc38aaf3b16ec766f" kindref="member">startTime</ref>)<sp/>*<sp/>NANO2SEC)<sp/>*<sp/>refThetaDot;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refTheta<sp/>=<sp/>this-&gt;<ref refid="class_hinged_body_linear_profiler_1a8ff934602085d62ec101a34db40d69c9" kindref="member">endTheta</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refThetaDot<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>hingedRigidBodyReferenceOutMsgBuffer.theta<sp/>=<sp/>refTheta;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>hingedRigidBodyReferenceOutMsgBuffer.thetaDot<sp/>=<sp/>refThetaDot;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_hinged_body_linear_profiler_1af24b36463e2a4a3b188034f58d48f7f3" kindref="member">hingedRigidBodyReferenceOutMsg</ref>.write(&amp;hingedRigidBodyReferenceOutMsgBuffer,<sp/>this-&gt;moduleID,<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/deviceInterface/hingedBodyLinearProfiler/hingedBodyLinearProfiler.cpp"/>
  </compounddef>
</doxygen>
