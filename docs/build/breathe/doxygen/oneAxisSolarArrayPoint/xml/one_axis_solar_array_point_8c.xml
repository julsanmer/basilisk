<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="one_axis_solar_array_point_8c" kind="file" language="C++">
    <compoundname>oneAxisSolarArrayPoint.c</compoundname>
    <includes refid="one_axis_solar_array_point_8h" local="yes">oneAxisSolarArrayPoint.h</includes>
    <includes local="yes">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/rigidBodyKinematics.h</includes>
    <includes local="yes">architecture/utilities/astroConstants.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c</label>
        <link refid="one_axis_solar_array_point_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>oneAxisSolarArrayPoint.h</label>
        <link refid="one_axis_solar_array_point_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>architecture/utilities/astroConstants.h</label>
      </node>
      <node id="4">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="13">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="16">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="14">
        <label>architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="5">
        <label>cMsgCInterface/AttRefMsg_C.h</label>
      </node>
      <node id="6">
        <label>cMsgCInterface/BodyHeadingMsg_C.h</label>
      </node>
      <node id="9">
        <label>cMsgCInterface/EphemerisMsg_C.h</label>
      </node>
      <node id="7">
        <label>cMsgCInterface/InertialHeadingMsg_C.h</label>
      </node>
      <node id="10">
        <label>cMsgCInterface/NavAttMsg_C.h</label>
      </node>
      <node id="8">
        <label>cMsgCInterface/NavTransMsg_C.h</label>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="one_axis_solar_array_point_8c_1ac29df3dcbefa1ce189e5990bde994025" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double epsilon</definition>
        <argsstring></argsstring>
        <name>epsilon</name>
        <initializer>= 1e-12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" line="30" column="14" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" bodystart="30" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="one_axis_solar_array_point_8c_1a93897b80897fabe7946da66da95eea67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_oneAxisSolarArrayPoint</definition>
        <argsstring>(OneAxisSolarArrayPointConfig *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_oneAxisSolarArrayPoint</name>
        <param>
          <type><ref refid="struct_one_axis_solar_array_point_config" kindref="compound">OneAxisSolarArrayPointConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initializes the output messages for this module. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with this module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" line="37" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="one_axis_solar_array_point_8c_1ac9ef13151f3646b7c29aa01924dc51bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_oneAxisSolarArrayPoint</definition>
        <argsstring>(OneAxisSolarArrayPointConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_oneAxisSolarArrayPoint</name>
        <param>
          <type><ref refid="struct_one_axis_solar_array_point_config" kindref="compound">OneAxisSolarArrayPointConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs a complete reset of the module. Local module variables that retain time varying states between function calls are reset to their default values. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>[ns] time the method is called </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" line="50" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" bodystart="50" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="one_axis_solar_array_point_8c_1a86398a778d54d929d6470fd8a3f023a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_oneAxisSolarArrayPoint</definition>
        <argsstring>(OneAxisSolarArrayPointConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_oneAxisSolarArrayPoint</name>
        <param>
          <type><ref refid="struct_one_axis_solar_array_point_config" kindref="compound">OneAxisSolarArrayPointConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The Update() function computes the reference MRP attitude, reference angular rate and acceleration <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>create and zero the output message</para>
<para>read and allocate the attitude navigation message</para>
<para>get requested heading in inertial frame</para>
<para>get body frame heading</para>
<para>define the body frame orientation DCM BN</para>
<para>get the solar array drive direction in body frame coordinates</para>
<para>get the second body frame direction</para>
<para>read Sun direction in B frame from the attNav message</para>
<para>map requested heading into B frame</para>
<para>compute the total rotation DCM</para>
<para>compute the relative rotation DCM and Sun direction in relative frame</para>
<para>compute reference MRP</para>
<para>compute reference MRP derivatives via finite differences</para>
<para>compute angular rates and accelerations in R frame</para>
<para>compute angular rates and accelerations in N frame and store in buffer msg</para>
<para>write output message</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" line="101" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" bodystart="101" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="one_axis_solar_array_point_8c_1aa8141849f8158cac83d2eaec2d47e10c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void oasapComputeFirstRotation</definition>
        <argsstring>(double hRefHat_B[3], double hReqHat_B[3], double R1B[3][3])</argsstring>
        <name>oasapComputeFirstRotation</name>
        <param>
          <type>double</type>
          <declname>hRefHat_B</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>hReqHat_B</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>R1B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This helper function computes the first rotation that aligns the body heading with the inertial heading </para>
        </detaileddescription>
        <inbodydescription>
<para>compute principal rotation angle (phi) and vector (e_phi) for the first rotation</para>
<para>define first rotation R1B</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" line="263" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" bodystart="263" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="one_axis_solar_array_point_8c_1ac4edfc4880b301cb5f42b7db8a4dddda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void oasapComputeSecondRotation</definition>
        <argsstring>(double hRefHat_B[3], double rHat_SB_R1[3], double a1Hat_B[3], double a2Hat_B[3], double R2R1[3][3])</argsstring>
        <name>oasapComputeSecondRotation</name>
        <param>
          <type>double</type>
          <declname>hRefHat_B</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rHat_SB_R1</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>a1Hat_B</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>a2Hat_B</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>R2R1</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This helper function computes the second rotation that achieves the best incidence on the solar arrays maintaining the heading alignment </para>
        </detaileddescription>
        <inbodydescription>
<para>define second rotation vector to coincide with the thrust direction in B coordinates</para>
<para>define the coefficients of the quadratic equation A, B and C</para>
<para>get the body direction that must be kept close to Sun and compute the coefficients of the quadratic equation E, F and G</para>
<para>compute exact solution or best solution depending on Delta</para>
<para>compute second rotation R2R1</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" line="287" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" bodystart="287" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="one_axis_solar_array_point_8c_1a87aa61b5470f45fcabc5580f4e8a07ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void oasapComputeThirdRotation</definition>
        <argsstring>(int alignmentPriority, double hRefHat_B[3], double rHat_SB_R2[3], double a1Hat_B[3], double R3R2[3][3])</argsstring>
        <name>oasapComputeThirdRotation</name>
        <param>
          <type>int</type>
          <declname>alignmentPriority</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hRefHat_B</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rHat_SB_R2</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>a1Hat_B</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>R3R2</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This helper function computes the third rotation that breaks the heading alignment if needed, to achieve maximum incidence on solar arrays </para>
        </detaileddescription>
        <inbodydescription>
<para>compute third rotation R3R2</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" line="372" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" bodystart="372" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="one_axis_solar_array_point_8c_1a1e6666e1640563ffb327c833c7914500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void oasapComputeFinalRotation</definition>
        <argsstring>(int alignmentPriority, double BN[3][3], double rHat_SB_B[3], double hRefHat_B[3], double hReqHat_B[3], double a1Hat_B[3], double a2Hat_B[3], double RN[3][3])</argsstring>
        <name>oasapComputeFinalRotation</name>
        <param>
          <type>int</type>
          <declname>alignmentPriority</declname>
        </param>
        <param>
          <type>double</type>
          <declname>BN</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rHat_SB_B</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>hRefHat_B</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>hReqHat_B</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>a1Hat_B</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>a2Hat_B</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>RN</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This helper function computes the final rotation as a product of the first three DCMs </para>
        </detaileddescription>
        <inbodydescription>
<para>compute the first rotation DCM</para>
<para>compute Sun direction vector in R1 frame coordinates</para>
<para>compute the second rotation DCM</para>
<para>compute the third rotation DCM</para>
<para>compute reference frames w.r.t inertial frame</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" line="417" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c" bodystart="417" bodyend="444"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2023,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;oneAxisSolarArrayPoint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/astroConstants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>1e-12;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>module<sp/>tolerance<sp/>for<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_oneAxisSolarArrayPoint(<ref refid="struct_one_axis_solar_array_point_config" kindref="compound">OneAxisSolarArrayPointConfig</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsg_C_init(&amp;configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a247e15f09f7d7bac998e6c9f6e3782dc" kindref="member">attRefOutMsg</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_oneAxisSolarArrayPoint(<ref refid="struct_one_axis_solar_array_point_config" kindref="compound">OneAxisSolarArrayPointConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!NavAttMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aa6a58d63c681d0b6b901ebb75da75ed4" kindref="member">attNavInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a5f522bf110ab3b348840a24f55750bf9" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>oneAxisSolarArrayPoint.attNavInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>how<sp/>the<sp/>input<sp/>body<sp/>heading<sp/>is<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BodyHeadingMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a7424f2f2e27b4c2e7cfe731e44ca2688" kindref="member">bodyHeadingInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a38dff90fd11ccc01686c446868af8165" kindref="member">bodyAxisInput</ref><sp/>=<sp/>inputBodyHeadingMsg;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v3Norm(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1ae90c77eaf9d77009ce4db9b4a06f28bc" kindref="member">h1Hat_B</ref>)<sp/>&gt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a38dff90fd11ccc01686c446868af8165" kindref="member">bodyAxisInput</ref><sp/>=<sp/>inputBodyHeadingParameter;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a5f522bf110ab3b348840a24f55750bf9" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>oneAxisSolarArrayPoint.bodyHeadingInMsg<sp/>wasn&apos;t<sp/>connected<sp/>and<sp/>no<sp/>body<sp/>heading<sp/>h1Hat_B<sp/>was<sp/>specified.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>how<sp/>the<sp/>input<sp/>inertial<sp/>heading<sp/>is<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InertialHeadingMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aad76d552b5372b0945329aa1fd0baba4" kindref="member">inertialHeadingInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abe8701b175027192db9ddd08e6601a49" kindref="member">inertialAxisInput</ref><sp/>=<sp/>inputInertialHeadingMsg;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(EphemerisMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abac359f5a8610de093627061dbefbe0f" kindref="member">ephemerisInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a5f522bf110ab3b348840a24f55750bf9" kindref="member">bskLogger</ref>,<sp/>BSK_WARNING,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>both<sp/>oneAxisSolarArrayPoint.inertialHeadingInMsg<sp/>and<sp/>oneAxisSolarArrayPoint.ephemerisInMsg<sp/>were<sp/>linked.<sp/>Inertial<sp/>heading<sp/>is<sp/>computed<sp/>from<sp/>oneAxisSolarArrayPoint.inertialHeadingInMsg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(EphemerisMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abac359f5a8610de093627061dbefbe0f" kindref="member">ephemerisInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!NavTransMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a676c9c0f14e30b5c5db5ad358138424f" kindref="member">transNavInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a5f522bf110ab3b348840a24f55750bf9" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>oneAxisSolarArrayPoint.ephemerisInMsg<sp/>was<sp/>specified<sp/>but<sp/>oneAxisSolarArrayPoint.transNavInMsg<sp/>was<sp/>not.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abe8701b175027192db9ddd08e6601a49" kindref="member">inertialAxisInput</ref><sp/>=<sp/>inputEphemerisMsg;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v3Norm(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a1bc4105d0973201a640b6d70450842b8" kindref="member">hHat_N</ref>)<sp/>&gt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abe8701b175027192db9ddd08e6601a49" kindref="member">inertialAxisInput</ref><sp/>=<sp/>inputInertialHeadingParameter;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a5f522bf110ab3b348840a24f55750bf9" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>neither<sp/>oneAxisSolarArrayPoint.inertialHeadingInMsg<sp/>nor<sp/>oneAxisSolarArrayPoint.ephemerisInMsg<sp/>were<sp/>connected<sp/>and<sp/>no<sp/>inertial<sp/>heading<sp/>h_N<sp/>was<sp/>specified.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>updateCallCount<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1afb01f5618e23567939efb4c83871f3d9" kindref="member">updateCallCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_oneAxisSolarArrayPoint(<ref refid="struct_one_axis_solar_array_point_config" kindref="compound">OneAxisSolarArrayPointConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsgPayload<sp/>attRefOut<sp/>=<sp/>AttRefMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>NavAttMsgPayload<sp/>attNavIn<sp/>=<sp/>NavAttMsg_C_read(&amp;configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aa6a58d63c681d0b6b901ebb75da75ed4" kindref="member">attNavInMsg</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hReqHat_N[3];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abe8701b175027192db9ddd08e6601a49" kindref="member">inertialAxisInput</ref><sp/>==<sp/>inputInertialHeadingParameter)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Normalize(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a1bc4105d0973201a640b6d70450842b8" kindref="member">hHat_N</ref>,<sp/>hReqHat_N);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abe8701b175027192db9ddd08e6601a49" kindref="member">inertialAxisInput</ref><sp/>==<sp/>inputInertialHeadingMsg)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InertialHeadingMsgPayload<sp/>inertialHeadingIn<sp/>=<sp/>InertialHeadingMsg_C_read(&amp;configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aad76d552b5372b0945329aa1fd0baba4" kindref="member">inertialHeadingInMsg</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Normalize(inertialHeadingIn.rHat_XN_N,<sp/>hReqHat_N);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abe8701b175027192db9ddd08e6601a49" kindref="member">inertialAxisInput</ref><sp/>==<sp/>inputEphemerisMsg)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EphemerisMsgPayload<sp/>ephemerisIn<sp/>=<sp/>EphemerisMsg_C_read(&amp;configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abac359f5a8610de093627061dbefbe0f" kindref="member">ephemerisInMsg</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavTransMsgPayload<sp/>transNavIn<sp/>=<sp/>NavTransMsg_C_read(&amp;configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a676c9c0f14e30b5c5db5ad358138424f" kindref="member">transNavInMsg</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Subtract(ephemerisIn.r_BdyZero_N,<sp/>transNavIn.r_BN_N,<sp/>hReqHat_N);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Normalize(hReqHat_N,<sp/>hReqHat_N);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hRefHat_B[3];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a38dff90fd11ccc01686c446868af8165" kindref="member">bodyAxisInput</ref><sp/>==<sp/>inputBodyHeadingParameter)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Normalize(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1ae90c77eaf9d77009ce4db9b4a06f28bc" kindref="member">h1Hat_B</ref>,<sp/>hRefHat_B);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a38dff90fd11ccc01686c446868af8165" kindref="member">bodyAxisInput</ref><sp/>==<sp/>inputBodyHeadingMsg)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BodyHeadingMsgPayload<sp/>bodyHeadingIn<sp/>=<sp/>BodyHeadingMsg_C_read(&amp;configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a7424f2f2e27b4c2e7cfe731e44ca2688" kindref="member">bodyHeadingInMsg</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Normalize(bodyHeadingIn.rHat_XB_B,<sp/>hRefHat_B);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>BN[3][3];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2C(attNavIn.sigma_BN,<sp/>BN);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1Hat_B[3];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Normalize(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aba08b27d0d7f4ceca159706cafa3ca85" kindref="member">a1Hat_B</ref>,<sp/>a1Hat_B);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2Hat_B[3];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v3Norm(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aa40ceb053b7ca73bb813d2100a721c8f" kindref="member">a2Hat_B</ref>)<sp/>&gt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Normalize(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aa40ceb053b7ca73bb813d2100a721c8f" kindref="member">a2Hat_B</ref>,<sp/>a2Hat_B);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3SetZero(a2Hat_B);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rHat_SB_B[3];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(attNavIn.vehSunPntBdy,<sp/>rHat_SB_B);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hReqHat_B[3];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(BN,<sp/>hReqHat_N,<sp/>hReqHat_B);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>RN[3][3];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>oasapComputeFinalRotation(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abdab4cb06fde5d613d011e7a955c243b" kindref="member">alignmentPriority</ref>,<sp/>BN,<sp/>rHat_SB_B,<sp/>hRefHat_B,<sp/>hReqHat_B,<sp/>a1Hat_B,<sp/>a2Hat_B,<sp/>RN);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>RB[3][3];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33t(RN,<sp/>BN,<sp/>RB);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rHat_SB_R1[3];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(RB,<sp/>rHat_SB_B,<sp/>rHat_SB_R1);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma_RN[3];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>C2MRP(RN,<sp/>sigma_RN);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v3Norm(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a15036556830953606c431aa6d485004f" kindref="member">h2Hat_B</ref>)<sp/>&gt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>second<sp/>reference<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oasapComputeFinalRotation(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abdab4cb06fde5d613d011e7a955c243b" kindref="member">alignmentPriority</ref>,<sp/>BN,<sp/>rHat_SB_B,<sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a15036556830953606c431aa6d485004f" kindref="member">h2Hat_B</ref>,<sp/>hReqHat_B,<sp/>a1Hat_B,<sp/>a2Hat_B,<sp/>RN);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>relative<sp/>rotation<sp/>DCM<sp/>and<sp/>Sun<sp/>direction<sp/>in<sp/>relative<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m33MultM33t(RN,<sp/>BN,<sp/>RB);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rHat_SB_R2[3];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m33MultV3(RB,<sp/>rHat_SB_B,<sp/>rHat_SB_R2);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dotP_1<sp/>=<sp/>v3Dot(rHat_SB_R1,<sp/>a2Hat_B);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dotP_2<sp/>=<sp/>v3Dot(rHat_SB_R2,<sp/>a2Hat_B);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dotP_2<sp/>&gt;<sp/>dotP_1<sp/>&amp;&amp;<sp/>fabs(dotP_2<sp/>-<sp/>dotP_1)<sp/>&gt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>second<sp/>reference<sp/>frame<sp/>gives<sp/>a<sp/>better<sp/>result,<sp/>save<sp/>this<sp/>as<sp/>reference<sp/>MRP<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C2MRP(RN,<sp/>sigma_RN);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(sigma_RN,<sp/>attRefOut.sigma_RN);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>sigma<sp/>at<sp/>t-1<sp/>and<sp/>switch<sp/>it<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma_RN_1[3];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1acfe1e9cd1e097fc7d70728adf3a8a527" kindref="member">sigma_RN_1</ref>,<sp/>sigma_RN_1);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delSigma[3];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Subtract(sigma_RN,<sp/>sigma_RN_1,<sp/>delSigma);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v3Norm(delSigma)<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MRPshadow(sigma_RN_1,<sp/>sigma_RN_1);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>sigma<sp/>at<sp/>t-2<sp/>and<sp/>switch<sp/>it<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma_RN_2[3];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abeee50e15a85ed830d5489612365643c" kindref="member">sigma_RN_2</ref>,<sp/>sigma_RN_2);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Subtract(sigma_RN_1,<sp/>sigma_RN_2,<sp/>delSigma);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v3Norm(delSigma)<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MRPshadow(sigma_RN_2,<sp/>sigma_RN_2);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>first<sp/>update<sp/>call,<sp/>derivatives<sp/>are<sp/>set<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T1Seconds;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T2Seconds;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaDot_RN[3];</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaDDot_RN[3];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1afb01f5618e23567939efb4c83871f3d9" kindref="member">updateCallCount</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3SetZero(sigmaDot_RN);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3SetZero(sigmaDDot_RN);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>information<sp/>for<sp/>next<sp/>time<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aade18a3303ea99a10820863fe03a7a5f" kindref="member">T1NanoSeconds</ref><sp/>=<sp/>callTime;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(sigma_RN,<sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1acfe1e9cd1e097fc7d70728adf3a8a527" kindref="member">sigma_RN_1</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>second<sp/>update<sp/>call,<sp/>derivatives<sp/>are<sp/>computed<sp/>with<sp/>first<sp/>order<sp/>finite<sp/>differences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1afb01f5618e23567939efb4c83871f3d9" kindref="member">updateCallCount</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T1Seconds<sp/>=<sp/>(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aade18a3303ea99a10820863fe03a7a5f" kindref="member">T1NanoSeconds</ref><sp/>-<sp/>callTime)<sp/>*<sp/>NANO2SEC;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmaDot_RN[j]<sp/>=<sp/>(sigma_RN_1[j]<sp/>-<sp/>sigma_RN[j])<sp/>/<sp/>T1Seconds;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3SetZero(sigmaDDot_RN);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>information<sp/>for<sp/>next<sp/>time<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a79cafce0e18cf4bac167d80595909d3b" kindref="member">T2NanoSeconds</ref><sp/>=<sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aade18a3303ea99a10820863fe03a7a5f" kindref="member">T1NanoSeconds</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aade18a3303ea99a10820863fe03a7a5f" kindref="member">T1NanoSeconds</ref><sp/>=<sp/>callTime;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1acfe1e9cd1e097fc7d70728adf3a8a527" kindref="member">sigma_RN_1</ref>,<sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abeee50e15a85ed830d5489612365643c" kindref="member">sigma_RN_2</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(sigma_RN,<sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1acfe1e9cd1e097fc7d70728adf3a8a527" kindref="member">sigma_RN_1</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>third<sp/>update<sp/>call<sp/>or<sp/>higher,<sp/>derivatives<sp/>are<sp/>computed<sp/>with<sp/>second<sp/>order<sp/>finite<sp/>differences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T1Seconds<sp/>=<sp/>(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aade18a3303ea99a10820863fe03a7a5f" kindref="member">T1NanoSeconds</ref><sp/>-<sp/>callTime)<sp/>*<sp/>NANO2SEC;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T2Seconds<sp/>=<sp/>(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a79cafce0e18cf4bac167d80595909d3b" kindref="member">T2NanoSeconds</ref><sp/>-<sp/>callTime)<sp/>*<sp/>NANO2SEC;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmaDot_RN[j]<sp/>=<sp/>((sigma_RN_1[j]*T2Seconds*T2Seconds<sp/>-<sp/>sigma_RN_2[j]*T1Seconds*T1Seconds)<sp/>/<sp/>(T2Seconds<sp/>-<sp/>T1Seconds)<sp/>-<sp/>sigma_RN[j]<sp/>*<sp/>(T2Seconds<sp/>+<sp/>T1Seconds))<sp/>/<sp/>T1Seconds<sp/>/<sp/>T2Seconds;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmaDDot_RN[j]<sp/>=<sp/>2<sp/>*<sp/>((sigma_RN_1[j]*T2Seconds<sp/>-<sp/>sigma_RN_2[j]*T1Seconds)<sp/>/<sp/>(T1Seconds<sp/>-<sp/>T2Seconds)<sp/>+<sp/>sigma_RN[j])<sp/>/<sp/>T1Seconds<sp/>/<sp/>T2Seconds;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>information<sp/>for<sp/>next<sp/>time<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a79cafce0e18cf4bac167d80595909d3b" kindref="member">T2NanoSeconds</ref><sp/>=<sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aade18a3303ea99a10820863fe03a7a5f" kindref="member">T1NanoSeconds</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1aade18a3303ea99a10820863fe03a7a5f" kindref="member">T1NanoSeconds</ref><sp/>=<sp/>callTime;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1acfe1e9cd1e097fc7d70728adf3a8a527" kindref="member">sigma_RN_1</ref>,<sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1abeee50e15a85ed830d5489612365643c" kindref="member">sigma_RN_2</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(sigma_RN,<sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1acfe1e9cd1e097fc7d70728adf3a8a527" kindref="member">sigma_RN_1</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1afb01f5618e23567939efb4c83871f3d9" kindref="member">updateCallCount</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_RN_R[3],<sp/>omegaDot_RN_R[3];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>dMRP2Omega(sigma_RN,<sp/>sigmaDot_RN,<sp/>omega_RN_R);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>ddMRP2dOmega(sigma_RN,<sp/>sigmaDot_RN,<sp/>sigmaDDot_RN,<sp/>omegaDot_RN_R);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>m33tMultV3(RN,<sp/>omega_RN_R,<sp/>attRefOut.omega_RN_N);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>m33tMultV3(RN,<sp/>omegaDot_RN_R,<sp/>attRefOut.domega_RN_N);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsg_C_write(&amp;attRefOut,<sp/>&amp;configData-&gt;<ref refid="struct_one_axis_solar_array_point_config_1a247e15f09f7d7bac998e6c9f6e3782dc" kindref="member">attRefOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>oasapComputeFirstRotation(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hRefHat_B[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hReqHat_B[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R1B[3][3])</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi<sp/>=<sp/>acos(<sp/>fmin(<sp/>fmax(<sp/>v3Dot(hRefHat_B,<sp/>hReqHat_B),<sp/>-1<sp/>),<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e_phi[3];</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(hRefHat_B,<sp/>hReqHat_B,<sp/>e_phi);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>phi<sp/>=<sp/>PI,<sp/>e_phi<sp/>can<sp/>be<sp/>any<sp/>vector<sp/>perpendicular<sp/>to<sp/>hRefHat_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(phi-MPI)<sp/>&lt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>MPI;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Perpendicular(hRefHat_B,<sp/>e_phi);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(phi)<sp/>&lt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normalize<sp/>e_phi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Normalize(e_phi,<sp/>e_phi);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>PRV_phi[3];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(phi,<sp/>e_phi,<sp/>PRV_phi);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2C(PRV_phi,<sp/>R1B);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>oasapComputeSecondRotation(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hRefHat_B[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rHat_SB_R1[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1Hat_B[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2Hat_B[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R2R1[3][3])</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e_psi[3];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(hRefHat_B,<sp/>e_psi);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b3[3];</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(rHat_SB_R1,<sp/>e_psi,<sp/>b3);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>2<sp/>*<sp/>v3Dot(rHat_SB_R1,<sp/>e_psi)<sp/>*<sp/>v3Dot(e_psi,<sp/>a1Hat_B)<sp/>-<sp/>v3Dot(a1Hat_B,<sp/>rHat_SB_R1);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B<sp/>=<sp/>2<sp/>*<sp/>v3Dot(a1Hat_B,<sp/>b3);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C<sp/>=<sp/>v3Dot(a1Hat_B,<sp/>rHat_SB_R1);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Delta<sp/>=<sp/>B<sp/>*<sp/>B<sp/>-<sp/>4<sp/>*<sp/>A<sp/>*<sp/>C;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E<sp/>=<sp/>2<sp/>*<sp/>v3Dot(rHat_SB_R1,<sp/>e_psi)<sp/>*<sp/>v3Dot(e_psi,<sp/>a2Hat_B)<sp/>-<sp/>v3Dot(a2Hat_B,<sp/>rHat_SB_R1);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>F<sp/>=<sp/>2<sp/>*<sp/>v3Dot(a2Hat_B,<sp/>b3);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>G<sp/>=<sp/>v3Dot(a2Hat_B,<sp/>rHat_SB_R1);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/>t1,<sp/>t2,<sp/>y,<sp/>y1,<sp/>y2,<sp/>psi;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(A)<sp/>&lt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(B)<sp/>&lt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero-th<sp/>order<sp/>equation<sp/>has<sp/>no<sp/>solution<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>solution<sp/>of<sp/>the<sp/>minimum<sp/>problem<sp/>is<sp/>psi<sp/>=<sp/>MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psi<sp/>=<sp/>MPI;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>order<sp/>equation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>-<sp/>C<sp/>/<sp/>B;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psi<sp/>=<sp/>2*atan(t);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Delta<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>order<sp/>equation<sp/>has<sp/>no<sp/>solution<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>solution<sp/>of<sp/>the<sp/>minimum<sp/>problem<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(B)<sp/>&lt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q<sp/>=<sp/>(A-C)<sp/>/<sp/>B;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>(q<sp/>+<sp/>sqrt(q*q<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>(q<sp/>-<sp/>sqrt(q*q<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>(A*t1*t1<sp/>+<sp/>B*t1<sp/>+<sp/>C)<sp/>/<sp/>(1<sp/>+<sp/>t1*t1);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>(A*t2*t2<sp/>+<sp/>B*t2<sp/>+<sp/>C)<sp/>/<sp/>(1<sp/>+<sp/>t2*t2);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>choose<sp/>which<sp/>returns<sp/>a<sp/>smaller<sp/>fcn<sp/>value<sp/>between<sp/>t1<sp/>and<sp/>t2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(y2)<sp/>&lt;<sp/>fabs(y1))<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psi<sp/>=<sp/>2*atan(t);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(A*t*t<sp/>+<sp/>B*t<sp/>+<sp/>C)<sp/>/<sp/>(1<sp/>+<sp/>t*t);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>absolute<sp/>fcn<sp/>minimum<sp/>is<sp/>for<sp/>psi<sp/>=<sp/>MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(A)<sp/>&lt;<sp/>fabs(y))<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psi<sp/>=<sp/>MPI;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solution<sp/>of<sp/>the<sp/>quadratic<sp/>equation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>(-B<sp/>+<sp/>sqrt(Delta))<sp/>/<sp/>(2*A);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>(-B<sp/>-<sp/>sqrt(Delta))<sp/>/<sp/>(2*A);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>choose<sp/>between<sp/>t1<sp/>and<sp/>t2<sp/>according<sp/>to<sp/>a2Hat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>t1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(v3Dot(hRefHat_B,<sp/>a2Hat_B)-1)<sp/>&gt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>(E*t1*t1<sp/>+<sp/>F*t1<sp/>+<sp/>G)<sp/>/<sp/>(1<sp/>+<sp/>t1*t1);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>(E*t2*t2<sp/>+<sp/>F*t2<sp/>+<sp/>G)<sp/>/<sp/>(1<sp/>+<sp/>t2*t2);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y2<sp/>-<sp/>y1<sp/>&gt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psi<sp/>=<sp/>2*atan(t);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>PRV_psi[3];</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(psi,<sp/>e_psi,<sp/>PRV_psi);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2C(PRV_psi,<sp/>R2R1);</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>oasapComputeThirdRotation(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alignmentPriority,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hRefHat_B[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rHat_SB_R2[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1Hat_B[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R3R2[3][3])</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>PRV_theta[3];</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alignmentPriority<sp/>==<sp/>prioritizeAxisAlignment)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRV_theta[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sTheta<sp/>=<sp/>v3Dot(rHat_SB_R2,<sp/>a1Hat_B);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>asin(<sp/>fmin(<sp/>fmax(<sp/>fabs(sTheta),<sp/>-1<sp/>),<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(theta)<sp/>&lt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>Sun<sp/>direction<sp/>and<sp/>solar<sp/>array<sp/>drive<sp/>are<sp/>already<sp/>perpendicular,<sp/>third<sp/>rotation<sp/>is<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRV_theta[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>Sun<sp/>direction<sp/>and<sp/>solar<sp/>array<sp/>drive<sp/>are<sp/>not<sp/>perpendicular,<sp/>project<sp/>solar<sp/>array<sp/>drive<sp/>a1Hat_B<sp/>onto<sp/>perpendicular<sp/>plane<sp/>(aPHat_B)<sp/>and<sp/>compute<sp/>third<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e_theta[3],<sp/>aPHat_B[3];</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(fabs(theta)-MPI/2)<sp/>&gt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aPHat_B[i]<sp/>=<sp/>(a1Hat_B[i]<sp/>-<sp/>sTheta<sp/>*<sp/>rHat_SB_R2[i])<sp/>/<sp/>(1<sp/>-<sp/>sTheta<sp/>*<sp/>sTheta);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Cross(a1Hat_B,<sp/>aPHat_B,<sp/>e_theta);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rotate<sp/>about<sp/>the<sp/>axis<sp/>that<sp/>minimizes<sp/>variation<sp/>in<sp/>hRefHat_B<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Cross(rHat_SB_R2,<sp/>hRefHat_B,<sp/>aPHat_B);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v3Norm(aPHat_B)<sp/>&lt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Perpendicular(rHat_SB_R2,<sp/>aPHat_B);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Cross(a1Hat_B,<sp/>aPHat_B,<sp/>e_theta);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Normalize(e_theta,<sp/>e_theta);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Scale(theta,<sp/>e_theta,<sp/>PRV_theta);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2C(PRV_theta,<sp/>R3R2);</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>oasapComputeFinalRotation(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alignmentPriority,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>BN[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rHat_SB_B[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hRefHat_B[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hReqHat_B[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1Hat_B[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2Hat_B[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>RN[3][3])</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R1B[3][3];</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>oasapComputeFirstRotation(hRefHat_B,<sp/>hReqHat_B,<sp/>R1B);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rHat_SB_R1[3];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(R1B,<sp/>rHat_SB_B,<sp/>rHat_SB_R1);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R2R1[3][3];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>oasapComputeSecondRotation(hRefHat_B,<sp/>rHat_SB_R1,<sp/>a1Hat_B,<sp/>a2Hat_B,<sp/>R2R1);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>Sun<sp/>direction<sp/>in<sp/>R2<sp/>frame<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rHat_SB_R2[3];</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(R2R1,<sp/>rHat_SB_R1,<sp/>rHat_SB_R2);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R3R2[3][3];</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>oasapComputeThirdRotation(alignmentPriority,<sp/>hRefHat_B,<sp/>rHat_SB_R2,<sp/>a1Hat_B,<sp/>R3R2);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R1N[3][3],<sp/>R2N[3][3];</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33(R1B,<sp/>BN,<sp/>R1N);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33(R2R1,<sp/>R1N,<sp/>R2N);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33(R3R2,<sp/>R2N,<sp/>RN);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/oneAxisSolarArrayPoint/oneAxisSolarArrayPoint.c"/>
  </compounddef>
</doxygen>
