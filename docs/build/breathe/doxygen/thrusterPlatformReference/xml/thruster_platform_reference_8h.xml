<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="thruster_platform_reference_8h" kind="file" language="C++">
    <compoundname>thrusterPlatformReference.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="yes">architecture/utilities/bskLogging.h</includes>
    <includes local="yes">cMsgCInterface/VehicleConfigMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/RWArrayConfigMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/RWSpeedMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/CmdTorqueBodyMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/HingedRigidBodyMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/BodyHeadingMsg_C.h</includes>
    <includedby refid="thruster_platform_reference_8c" local="yes">/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h</label>
        <link refid="thruster_platform_reference_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="9">
        <label>cMsgCInterface/BodyHeadingMsg_C.h</label>
      </node>
      <node id="7">
        <label>cMsgCInterface/CmdTorqueBodyMsg_C.h</label>
      </node>
      <node id="8">
        <label>cMsgCInterface/HingedRigidBodyMsg_C.h</label>
      </node>
      <node id="5">
        <label>cMsgCInterface/RWArrayConfigMsg_C.h</label>
      </node>
      <node id="6">
        <label>cMsgCInterface/RWSpeedMsg_C.h</label>
      </node>
      <node id="4">
        <label>cMsgCInterface/VehicleConfigMsg_C.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_thruster_platform_reference_config" prot="public">ThrusterPlatformReferenceConfig</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="thruster_platform_reference_8h_1ae5f08efe2941c78761aeb4556c395494" prot="public" static="no" strong="no">
        <type></type>
        <name>momentumDumping</name>
        <enumvalue id="thruster_platform_reference_8h_1ae5f08efe2941c78761aeb4556c395494a695ed835e2b72585493b31c1043fdf25" prot="public">
          <name>Yes</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="thruster_platform_reference_8h_1ae5f08efe2941c78761aeb4556c395494a996e257033c09daf66076efc1ebd3b1c" prot="public">
          <name>No</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" line="33" column="1" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" bodystart="33" bodyend="36"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="thruster_platform_reference_8h_1a8244c6e4cb265f6dedffaab9aafad85c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_thrusterPlatformReference</definition>
        <argsstring>(ThrusterPlatformReferenceConfig *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_thrusterPlatformReference</name>
        <param>
          <type><ref refid="struct_thruster_platform_reference_config" kindref="compound">ThrusterPlatformReferenceConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initializes the output messages for this module. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with this module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" line="71" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.c" bodystart="35" bodyend="41" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" declline="71" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="thruster_platform_reference_8h_1a19bcbe9fa9c177a830ce70f08186ed47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_thrusterPlatformReference</definition>
        <argsstring>(ThrusterPlatformReferenceConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_thrusterPlatformReference</name>
        <param>
          <type><ref refid="struct_thruster_platform_reference_config" kindref="compound">ThrusterPlatformReferenceConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs a complete reset of the module. Local module variables that retain time varying states between function calls are reset to their default values. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>[ns] time the method is called </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>read in the RW configuration message</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" line="72" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.c" bodystart="51" bodyend="65" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" declline="72" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="thruster_platform_reference_8h_1aeddd426bd47a89d5046d433f3433f646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_thrusterPlatformReference</definition>
        <argsstring>(ThrusterPlatformReferenceConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_thrusterPlatformReference</name>
        <param>
          <type><ref refid="struct_thruster_platform_reference_config" kindref="compound">ThrusterPlatformReferenceConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method updates the platformAngles message based on the updated information about the system center of mass <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Create and assign message buffers</para>
</listitem></itemizedlist>
</para>
<para>compute CM position w.r.t. M frame origin, in M coordinates</para>
<para>compute net RW momentum</para>
<para>compute offset vector</para>
<para>recompute thrust direction and FM matrix based on offset</para>
<para>extract theta1 and theta2 angles</para>
<para>write output spinning body messages</para>
<para>define mapping between final platform frame and body frame FB</para>
<para>compute thruster direction in body frame coordinates</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" line="73" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.c" bodystart="74" bodyend="152" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" declline="73" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="thruster_platform_reference_8h_1a986b40f1757bcd918a83fecd6615476a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tprComputeFirstRotation</definition>
        <argsstring>(double THat_F[3], double rHat_CM_F[3], double F1M[3][3])</argsstring>
        <name>tprComputeFirstRotation</name>
        <param>
          <type>double</type>
          <declname>THat_F</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rHat_CM_F</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>F1M</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" line="75" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.c" bodystart="154" bodyend="191" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" declline="75" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="thruster_platform_reference_8h_1a4dee6a3f8a01b8996db39c5670f764f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tprComputeSecondRotation</definition>
        <argsstring>(double r_CM_F[3], double r_TM_F[3], double r_CT_F[3], double T_F_hat[3], double FF1[3][3])</argsstring>
        <name>tprComputeSecondRotation</name>
        <param>
          <type>double</type>
          <declname>r_CM_F</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>r_TM_F</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>r_CT_F</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>T_F_hat</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>FF1</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" line="76" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.c" bodystart="193" bodyend="232" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" declline="76" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="thruster_platform_reference_8h_1ab20cf41e7f89d7ba5efcefad3ebc542e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tprComputeThirdRotation</definition>
        <argsstring>(double e_theta[3], double F2M[3][3], double F3F2[3][3])</argsstring>
        <name>tprComputeThirdRotation</name>
        <param>
          <type>double</type>
          <declname>e_theta</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>F2M</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>F3F2</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" line="77" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.c" bodystart="234" bodyend="302" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" declline="77" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="thruster_platform_reference_8h_1a2b1160220ce1285da1434b8841b67cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tprComputeFinalRotation</definition>
        <argsstring>(double r_CM_M[3], double r_TM_F[3], double T_F[3], double FM[3][3])</argsstring>
        <name>tprComputeFinalRotation</name>
        <param>
          <type>double</type>
          <declname>r_CM_M</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>r_TM_F</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>T_F</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>FM</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>define unit vectors of CM direction in M coordinates and thrust direction in F coordinates</para>
<para>compute first rotation to make T_F parallel to r_CM</para>
<para>rotate r_CM_F</para>
<para>compute position of CM w.r.t. thrust application point T</para>
<para>compute second rotation to zero the offset between T_F and r_CT_F</para>
<para>define intermediate platform rotation F2M</para>
<para>compute third rotation to make the frame compliant with the platform constraint</para>
<para>define final platform rotation FM</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" line="78" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.c" bodystart="304" bodyend="343" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h" declline="78" declcolumn="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2023,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_THRUSTER_PLATFORM_REFERENCE_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_THRUSTER_PLATFORM_REFERENCE_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/bskLogging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/VehicleConfigMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/RWArrayConfigMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/RWSpeedMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/CmdTorqueBodyMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/HingedRigidBodyMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/BodyHeadingMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>momentumDumping{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>Yes<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>No<sp/><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="struct_thruster_platform_reference_config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>declare<sp/>these<sp/>user-defined<sp/>quantities<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="struct_thruster_platform_reference_config_1a081eca033a3839a2670e8eae2e5b5115" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma_MB[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="struct_thruster_platform_reference_config_1a57637d3208e799dd9f4194c900a2f6d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r_BM_M[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="struct_thruster_platform_reference_config_1ab9d730a3537953da4d81b0bf86dacf0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r_FM_F[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="struct_thruster_platform_reference_config_1af88d9ad51a3bc32c9ef1210fd294be79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r_TF_F[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="struct_thruster_platform_reference_config_1a5f392e2d1f1bfff2f88181f4a5de9513" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T_F[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="struct_thruster_platform_reference_config_1a721db37bd6c73db68b095ed6397c5f32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_thruster_platform_reference_config_1a721db37bd6c73db68b095ed6397c5f32" kindref="member">K</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>declare<sp/>variables<sp/>for<sp/>internal<sp/>module<sp/>calculations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="struct_thruster_platform_reference_config_1aa9649017daeb81c78212cfc75d96716c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RWArrayConfigMsgPayload<sp/><sp/><sp/><ref refid="struct_thruster_platform_reference_config_1aa9649017daeb81c78212cfc75d96716c" kindref="member">rwConfigParams</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="struct_thruster_platform_reference_config_1a13f4cad83b120f2b2688f09177a3805a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_thruster_platform_reference_config_1a13f4cad83b120f2b2688f09177a3805a" kindref="member">momentumDumping</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>declare<sp/>module<sp/>IO<sp/>interfaces<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="struct_thruster_platform_reference_config_1ae5be8785ad14f033bd65765e4cb7631b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VehicleConfigMsg_C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_thruster_platform_reference_config_1ae5be8785ad14f033bd65765e4cb7631b" kindref="member">vehConfigInMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="struct_thruster_platform_reference_config_1a8474a6ea0dd759932ffb45565f91bf8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RWSpeedMsg_C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_thruster_platform_reference_config_1a8474a6ea0dd759932ffb45565f91bf8a" kindref="member">rwSpeedsInMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="struct_thruster_platform_reference_config_1a85fd73541fec32e859c137522306bce0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RWArrayConfigMsg_C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_thruster_platform_reference_config_1a85fd73541fec32e859c137522306bce0" kindref="member">rwConfigDataInMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="struct_thruster_platform_reference_config_1a422b1dea58318409aba1012cefd682ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>HingedRigidBodyMsg_C<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_thruster_platform_reference_config_1a422b1dea58318409aba1012cefd682ab" kindref="member">hingedRigidBodyRef1OutMsg</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="struct_thruster_platform_reference_config_1aa8b4980e9dd1fdfbb2fd65c82783dec0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>HingedRigidBodyMsg_C<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_thruster_platform_reference_config_1aa8b4980e9dd1fdfbb2fd65c82783dec0" kindref="member">hingedRigidBodyRef2OutMsg</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="60" refid="struct_thruster_platform_reference_config_1a7b81453e5701157636c1efe558cd02b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BodyHeadingMsg_C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_thruster_platform_reference_config_1a7b81453e5701157636c1efe558cd02b6" kindref="member">bodyHeadingOutMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="struct_thruster_platform_reference_config_1a84d82a1c521ee0cae4fec82c0f287852" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CmdTorqueBodyMsg_C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_thruster_platform_reference_config_1a84d82a1c521ee0cae4fec82c0f287852" kindref="member">thrusterTorqueOutMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="struct_thruster_platform_reference_config_1a056303f9ce004076d0058fd4a56f6fc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BSKLogger<sp/>*<ref refid="struct_thruster_platform_reference_config_1a056303f9ce004076d0058fd4a56f6fc8" kindref="member">bskLogger</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}<ref refid="struct_thruster_platform_reference_config" kindref="compound">ThrusterPlatformReferenceConfig</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_thrusterPlatformReference(<ref refid="struct_thruster_platform_reference_config" kindref="compound">ThrusterPlatformReferenceConfig</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_thrusterPlatformReference(<ref refid="struct_thruster_platform_reference_config" kindref="compound">ThrusterPlatformReferenceConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_thrusterPlatformReference(<ref refid="struct_thruster_platform_reference_config" kindref="compound">ThrusterPlatformReferenceConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tprComputeFirstRotation(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>THat_F[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rHat_CM_F[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>F1M[3][3]);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tprComputeSecondRotation(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r_CM_F[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r_TM_F[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r_CT_F[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T_F_hat[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>FF1[3][3]);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tprComputeThirdRotation(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e_theta[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>F2M[3][3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>F3F2[3][3]);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tprComputeFinalRotation(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r_CM_M[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r_TM_F[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T_F[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>FM[3][3]);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/thrusterPlatformReference/thrusterPlatformReference.h"/>
  </compounddef>
</doxygen>
