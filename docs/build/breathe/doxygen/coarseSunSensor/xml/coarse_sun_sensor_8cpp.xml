<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="coarse_sun_sensor_8cpp" kind="file" language="C++">
    <compoundname>coarseSunSensor.cpp</compoundname>
    <includes refid="coarse_sun_sensor_8h" local="yes">simulation/sensors/coarseSunSensor/coarseSunSensor.h</includes>
    <includes local="yes">architecture/utilities/rigidBodyKinematics.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/astroConstants.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cstring</includes>
    <includes local="no">algorithm</includes>
    <includes local="yes">architecture/utilities/avsEigenSupport.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="yes">architecture/utilities/avsEigenMRP.h</includes>
    <includes local="no">inttypes.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/sensors/coarseSunSensor/coarseSunSensor.cpp</label>
        <link refid="coarse_sun_sensor_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>simulation/sensors/coarseSunSensor/coarseSunSensor.h</label>
        <link refid="coarse_sun_sensor_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Eigen/Dense</label>
      </node>
      <node id="23">
        <label>algorithm</label>
      </node>
      <node id="4">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="12">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="10">
        <label>architecture/msgPayloadDefC/AlbedoMsgPayload.h</label>
      </node>
      <node id="11">
        <label>architecture/msgPayloadDefC/CSSArraySensorMsgPayload.h</label>
      </node>
      <node id="8">
        <label>architecture/msgPayloadDefC/CSSRawDataMsgPayload.h</label>
      </node>
      <node id="9">
        <label>architecture/msgPayloadDefC/EclipseMsgPayload.h</label>
      </node>
      <node id="5">
        <label>architecture/msgPayloadDefC/SCStatesMsgPayload.h</label>
      </node>
      <node id="6">
        <label>architecture/msgPayloadDefC/SpicePlanetStateMsgPayload.h</label>
      </node>
      <node id="7">
        <label>architecture/msgPayloadDefCpp/CSSConfigLogMsgPayload.h</label>
      </node>
      <node id="19">
        <label>architecture/utilities/astroConstants.h</label>
      </node>
      <node id="26">
        <label>architecture/utilities/avsEigenMRP.h</label>
      </node>
      <node id="24">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="15">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="13">
        <label>architecture/utilities/gauss_markov.h</label>
      </node>
      <node id="18">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="25">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="17">
        <label>architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="14">
        <label>architecture/utilities/saturate.h</label>
      </node>
      <node id="22">
        <label>cstring</label>
      </node>
      <node id="27">
        <label>inttypes.h</label>
      </node>
      <node id="21">
        <label>iostream</label>
      </node>
      <node id="20">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;simulation/sensors/coarseSunSensor/coarseSunSensor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/astroConstants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenSupport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenMRP.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="class_coarse_sun_sensor_1a7dc705fba12df6779f516b8b479a1b82" kindref="member">CoarseSunSensor::CoarseSunSensor</ref>()</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>this-&gt;CallCounts<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1aa8dddda497987c59e9936aefbe416c31" kindref="member">senBias</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a221717b105ed55bfb659f6e66b602434" kindref="member">senNoiseStd</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ad63ec2b199d3b64cc8597e8e5cf37702" kindref="member">faultNoiseStd</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a978439c01431b1ed15ef3d3b36546421" kindref="member">walkBounds</ref><sp/>=<sp/>1E-15;<sp/></highlight><highlight class="comment">//don&apos;t<sp/>allow<sp/>random<sp/>walk<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;noiseModel<sp/>=<sp/>GaussMarkov(1,<sp/>this-&gt;RNGSeed);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;faultNoiseModel<sp/>=<sp/>GaussMarkov(1,<sp/>this-&gt;RNGSeed+1);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a6eff8c27eb02cbc84ce754ce73b81a9f" kindref="member">faultState</ref><sp/>=<sp/>NOMINAL;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1aa0df451aab5d300f0c321949a92db2e9" kindref="member">nHat_B</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ab721bac6bd970a9ce0172e91670e65df" kindref="member">albedoValue</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a88527c76121a0e11766034f4cdb71ec5" kindref="member">scaleFactor</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ae7d57ed070a531079b58655ae0170b78" kindref="member">kellyFactor</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a28bcae607cbea787e41a9187a65b2e00" kindref="member">kPower</ref><sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a5b9c27f69cc412dd69b115cf9f855b47" kindref="member">pastValue</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a44067041c1c61871a4a35cb8f3bdc446" kindref="member">maxOutput</ref><sp/>=<sp/>1e6;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ad6e16e4e4b5bc88b3157cd44958392bd" kindref="member">minOutput</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;saturateUtility<sp/>=<sp/>Saturate(1);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a1ef6c1b9a5c098119d20526c5a9f7599" kindref="member">fov</ref><sp/>=<sp/>1.0471975512;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a422ea3cbbdc4e34b3c932d9c5d617e7c" kindref="member">phi</ref><sp/>=<sp/>0.785398163397;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1aacfc25545eb3d0b1a1817e5b2565234e" kindref="member">theta</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>v3SetZero(this-&gt;<ref refid="class_coarse_sun_sensor_1aeff9b8bf3e670e67e17a0034d102f4d5" kindref="member">B2P321Angles</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a05b290428cb69fac73976ffc059ac5af" kindref="member">r_B</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1abd50be1d3a634b0a7065f867059bc4e1" kindref="member">r_PB_B</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a799a2260a737ca51abbd97703e39e71a" kindref="member">setBodyToPlatformDCM</ref>(<ref refid="class_coarse_sun_sensor_1aeff9b8bf3e670e67e17a0034d102f4d5" kindref="member">B2P321Angles</ref>[0],<sp/><ref refid="class_coarse_sun_sensor_1aeff9b8bf3e670e67e17a0034d102f4d5" kindref="member">B2P321Angles</ref>[1],<sp/><ref refid="class_coarse_sun_sensor_1aeff9b8bf3e670e67e17a0034d102f4d5" kindref="member">B2P321Angles</ref>[2]);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ad8cc7b63f8bdf3a55d1252b937dcfecc" kindref="member">setUnitDirectionVectorWithPerturbation</ref>(0,<sp/>0);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sunVisibilityFactor<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a65c711542f2515b64ccb7f341d43e132" kindref="member">sunEclipseInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sunVisibilityFactor.shadowFactor<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sunDistanceFactor<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a2365352ebf21d7a8734200f5f187059c" kindref="member">dcm_PB</ref>.setIdentity(3,3);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="class_coarse_sun_sensor_1a824562926b91d1b31a0be89994f978c8" kindref="member">CoarseSunSensor::~CoarseSunSensor</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_coarse_sun_sensor_1ad8cc7b63f8bdf3a55d1252b937dcfecc" kindref="member">CoarseSunSensor::setUnitDirectionVectorWithPerturbation</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cssThetaPerturb,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cssPhiPerturb)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tempPhi<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a422ea3cbbdc4e34b3c932d9c5d617e7c" kindref="member">phi</ref><sp/>+<sp/>cssPhiPerturb;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tempTheta<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1aacfc25545eb3d0b1a1817e5b2565234e" kindref="member">theta</ref><sp/>+<sp/>cssThetaPerturb;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sensorV3_P;<sp/></highlight><highlight class="comment">//<sp/>sensor<sp/>diode<sp/>normal<sp/>in<sp/>platform<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>sensorV3_P.fill(0.0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>sensorV3_P[0]<sp/>=<sp/>cos(tempPhi)<sp/>*<sp/>cos(tempTheta);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>sensorV3_P[1]<sp/>=<sp/>cos(tempPhi)<sp/>*<sp/>sin(tempTheta);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>sensorV3_P[2]<sp/>=<sp/>sin(tempPhi);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1aa0df451aab5d300f0c321949a92db2e9" kindref="member">nHat_B</ref><sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a2365352ebf21d7a8734200f5f187059c" kindref="member">dcm_PB</ref>.transpose()<sp/>*<sp/>sensorV3_P;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_coarse_sun_sensor_1a799a2260a737ca51abbd97703e39e71a" kindref="member">CoarseSunSensor::setBodyToPlatformDCM</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yaw,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pitch,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>roll)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q[3]<sp/>=<sp/>{yaw,<sp/>pitch,<sp/>roll};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_PBcArray[9];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>Euler3212C(q,<sp/>RECAST3X3<sp/>dcm_PBcArray);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a2365352ebf21d7a8734200f5f187059c" kindref="member">dcm_PB</ref><sp/>=<sp/>cArray2EigenMatrix3d(dcm_PBcArray);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_coarse_sun_sensor_1ae6e92b31d2a8a46261612a42fe95ab19" kindref="member">CoarseSunSensor::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!this-&gt;<ref refid="class_coarse_sun_sensor_1aefb4afc56bffa2e7bec30b1e3a748620" kindref="member">sunInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_coarse_sun_sensor_1a3389464ee1112d984ee061092bab7233" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;CoarseSunSensor:<sp/>Failed<sp/>to<sp/>link<sp/>a<sp/>sun<sp/>sensor<sp/>input<sp/>message&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!this-&gt;<ref refid="class_coarse_sun_sensor_1ae247ac0a318b7fab5907b158c59700f5" kindref="member">stateInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_coarse_sun_sensor_1a3389464ee1112d984ee061092bab7233" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;CoarseSunSensor:<sp/>Failed<sp/>to<sp/>link<sp/>a<sp/>spacecraft<sp/>state<sp/>input<sp/>message&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>nMatrix;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>pMatrix;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>bounds;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>nMatrix.resize(1,1);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>pMatrix.resize(1,1);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds.resize(1,1);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;noiseModel.setRNGSeed(this-&gt;RNGSeed);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>nMatrix(0,0)<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a221717b105ed55bfb659f6e66b602434" kindref="member">senNoiseStd</ref>*1.5;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;noiseModel.setNoiseMatrix(nMatrix);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds(0,0)<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a978439c01431b1ed15ef3d3b36546421" kindref="member">walkBounds</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;noiseModel.setUpperBounds(bounds);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>pMatrix(0,0)<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;noiseModel.setPropMatrix(pMatrix);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fault<sp/>Noise<sp/>Model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>nMatrixFault;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>pMatrixFault;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>boundsFault;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>nMatrixFault.resize(1,1);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>pMatrixFault.resize(1,1);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>boundsFault.resize(1,1);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;faultNoiseModel.setRNGSeed(this-&gt;RNGSeed+1);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>nMatrixFault(0,0)<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ad63ec2b199d3b64cc8597e8e5cf37702" kindref="member">faultNoiseStd</ref>*1.5;<sp/></highlight><highlight class="comment">//<sp/>sensor<sp/>noise<sp/>standard<sp/>dev</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;faultNoiseModel.setNoiseMatrix(nMatrixFault);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>boundsFault(0,0)<sp/>=<sp/>2.0;<sp/></highlight><highlight class="comment">//<sp/>walk<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;faultNoiseModel.setUpperBounds(boundsFault);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>pMatrixFault(0,0)<sp/>=<sp/>1.0;<sp/></highlight><highlight class="comment">//<sp/>propagation<sp/>matrix<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;faultNoiseModel.setPropMatrix(pMatrixFault);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>satBounds;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>satBounds.resize(1,<sp/>2);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>satBounds(0,0)<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ad6e16e4e4b5bc88b3157cd44958392bd" kindref="member">minOutput</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>satBounds(0,1)<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a44067041c1c61871a4a35cb8f3bdc446" kindref="member">maxOutput</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;saturateUtility.setBounds(satBounds);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_coarse_sun_sensor_1a503709528249356cca7bb7347e81be91" kindref="member">CoarseSunSensor::readInputMessages</ref>()</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sunData<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1aefb4afc56bffa2e7bec30b1e3a748620" kindref="member">sunInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;stateCurrent<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ae247ac0a318b7fab5907b158c59700f5" kindref="member">stateInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_coarse_sun_sensor_1aefb4afc56bffa2e7bec30b1e3a748620" kindref="member">sunInMsg</ref>.isLinked())</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sunData<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1aefb4afc56bffa2e7bec30b1e3a748620" kindref="member">sunInMsg</ref>();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_coarse_sun_sensor_1ae247ac0a318b7fab5907b158c59700f5" kindref="member">stateInMsg</ref>.isLinked())</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;stateCurrent<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ae247ac0a318b7fab5907b158c59700f5" kindref="member">stateInMsg</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_coarse_sun_sensor_1a65c711542f2515b64ccb7f341d43e132" kindref="member">sunEclipseInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sunVisibilityFactor<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a65c711542f2515b64ccb7f341d43e132" kindref="member">sunEclipseInMsg</ref>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_coarse_sun_sensor_1a0fcbe37fcfdc0fab3fcbaaa6995092ec" kindref="member">albedoInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AlbedoMsgPayload<sp/>albMsgData;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>albMsgData<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a0fcbe37fcfdc0fab3fcbaaa6995092ec" kindref="member">albedoInMsg</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ab721bac6bd970a9ce0172e91670e65df" kindref="member">albedoValue</ref><sp/>=<sp/>albMsgData.albedoAtInstrument;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_coarse_sun_sensor_1a8f5b31f57a6140a784534446e6747fb7" kindref="member">CoarseSunSensor::computeSunData</ref>()</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>Sc2Sun_Inrtl;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sHat_N;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_BN;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_BN_N_eigen;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sunPos;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigma_BN_eigen;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>r_BN_N_eigen<sp/>=<sp/>cArray2EigenVector3d(this-&gt;stateCurrent.r_BN_N);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>sunPos<sp/>=<sp/>cArray2EigenVector3d(this-&gt;sunData.PositionVector);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>sigma_BN_eigen<sp/>=<sp/>cArray2EigenMRPd(this-&gt;stateCurrent.sigma_BN);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>Sc2Sun_Inrtl<sp/>=<sp/>sunPos<sp/>-<sp/><sp/>r_BN_N_eigen;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>sHat_N<sp/>=<sp/>Sc2Sun_Inrtl<sp/>/<sp/>Sc2Sun_Inrtl.norm();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_BN<sp/>=<sp/>sigma_BN_eigen.toRotationMatrix().transpose();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a6dc7f64ca1e8b76e4a724403d0cbab95" kindref="member">sHat_B</ref><sp/>=<sp/>dcm_BN<sp/>*<sp/>sHat_N;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r_Sun_Sc<sp/>=<sp/>Sc2Sun_Inrtl.norm();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sunDistanceFactor<sp/>=<sp/>pow(AU*1000.,<sp/>2.)/pow(r_Sun_Sc,<sp/>2.);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_coarse_sun_sensor_1a79b5c8f155631c129123a6e53419e414" kindref="member">CoarseSunSensor::computeTrueOutput</ref>()</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>sun<sp/>heading<sp/>is<sp/>within<sp/>sensor<sp/>field<sp/>of<sp/>view,<sp/>compute<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>signal<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1aa0df451aab5d300f0c321949a92db2e9" kindref="member">nHat_B</ref>.dot(this-&gt;<ref refid="class_coarse_sun_sensor_1a6dc7f64ca1e8b76e4a724403d0cbab95" kindref="member">sHat_B</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a6a64d8194fefd08fe092c176757633ab" kindref="member">trueValue</ref><sp/>=<sp/>signal<sp/>&gt;=<sp/>cos(this-&gt;<ref refid="class_coarse_sun_sensor_1a1ef6c1b9a5c098119d20526c5a9f7599" kindref="member">fov</ref>)<sp/>?<sp/>signal<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>epsilon<sp/>that<sp/>will<sp/>avoid<sp/>dividing<sp/>by<sp/>a<sp/>very<sp/>small<sp/>kelly<sp/>factor,<sp/>i.e<sp/>0.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/>1e-10;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kellyFit;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_coarse_sun_sensor_1ae7d57ed070a531079b58655ae0170b78" kindref="member">kellyFactor</ref><sp/>&gt;<sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(1<sp/>-<sp/>e^{-x^kPower/kFactor}})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kellyFit<sp/>=<sp/>1.0<sp/>-<sp/>exp(-pow(this-&gt;<ref refid="class_coarse_sun_sensor_1a6a64d8194fefd08fe092c176757633ab" kindref="member">trueValue</ref>,<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a28bcae607cbea787e41a9187a65b2e00" kindref="member">kPower</ref>)<sp/>/<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ae7d57ed070a531079b58655ae0170b78" kindref="member">kellyFactor</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kellyFit<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a6a64d8194fefd08fe092c176757633ab" kindref="member">trueValue</ref><sp/>*=<sp/>kellyFit;<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>sun<sp/>distance<sp/>factor<sp/>(adjust<sp/>based<sp/>on<sp/>flux<sp/>at<sp/>current<sp/>distance<sp/>from<sp/>sun)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a6a64d8194fefd08fe092c176757633ab" kindref="member">trueValue</ref><sp/>*=<sp/>this-&gt;sunDistanceFactor;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>apply<sp/>shadow<sp/>factor.<sp/>Basically,<sp/>correct<sp/>the<sp/>intensity<sp/>of<sp/>the<sp/>light.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a6a64d8194fefd08fe092c176757633ab" kindref="member">trueValue</ref><sp/>*=<sp/>this-&gt;sunVisibilityFactor.shadowFactor;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adding<sp/>albedo<sp/>value<sp/>(if<sp/>defined<sp/>by<sp/>the<sp/>user)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_coarse_sun_sensor_1ab721bac6bd970a9ce0172e91670e65df" kindref="member">albedoValue</ref><sp/>&gt;<sp/>0.0){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a6a64d8194fefd08fe092c176757633ab" kindref="member">trueValue</ref><sp/>+=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ab721bac6bd970a9ce0172e91670e65df" kindref="member">albedoValue</ref>;}</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_coarse_sun_sensor_1a9294bf8f21a9e198a359cc0d445d4559" kindref="member">CoarseSunSensor::applySensorErrors</ref>()</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sensorError;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_coarse_sun_sensor_1a221717b105ed55bfb659f6e66b602434" kindref="member">senNoiseStd</ref><sp/>&lt;=<sp/>0.0){<sp/></highlight><highlight class="comment">//<sp/>only<sp/>include<sp/>sensor<sp/>bias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensorError<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1aa8dddda497987c59e9936aefbe416c31" kindref="member">senBias</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>include<sp/>bias<sp/>and<sp/>noise</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;noiseModel.computeNextState();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>currentErrorEigen<sp/>=<sp/>this-&gt;noiseModel.getCurrentState();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sensorNoise<sp/>=<sp/>currentErrorEigen.coeff(0,0);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensorError<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1aa8dddda497987c59e9936aefbe416c31" kindref="member">senBias</ref><sp/>+<sp/>sensorNoise;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref><sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a6a64d8194fefd08fe092c176757633ab" kindref="member">trueValue</ref><sp/>+<sp/>sensorError;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Apply<sp/>faults<sp/>values<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;faultNoiseModel.computeNextState();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_coarse_sun_sensor_1a6eff8c27eb02cbc84ce754ce73b81a9f" kindref="member">faultState</ref><sp/>==<sp/>CSSFAULT_OFF){</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_coarse_sun_sensor_1a6eff8c27eb02cbc84ce754ce73b81a9f" kindref="member">faultState</ref><sp/>==<sp/>CSSFAULT_STUCK_MAX){</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_coarse_sun_sensor_1a6eff8c27eb02cbc84ce754ce73b81a9f" kindref="member">faultState</ref><sp/>==<sp/>CSSFAULT_STUCK_CURRENT){</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref><sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a5b9c27f69cc412dd69b115cf9f855b47" kindref="member">pastValue</ref>;<sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_coarse_sun_sensor_1a6eff8c27eb02cbc84ce754ce73b81a9f" kindref="member">faultState</ref><sp/>==<sp/>CSSFAULT_STUCK_RAND){</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref><sp/>=<sp/>this-&gt;faultNoiseModel.getCurrentState().coeff(0,0);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a6eff8c27eb02cbc84ce754ce73b81a9f" kindref="member">faultState</ref><sp/>=<sp/>CSSFAULT_STUCK_CURRENT;<sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_coarse_sun_sensor_1a6eff8c27eb02cbc84ce754ce73b81a9f" kindref="member">faultState</ref><sp/>==<sp/>CSSFAULT_RAND){</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref><sp/>=<sp/>this-&gt;faultNoiseModel.getCurrentState().coeff(0,0);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Nominal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a5b9c27f69cc412dd69b115cf9f855b47" kindref="member">pastValue</ref><sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref>;<sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_coarse_sun_sensor_1a3fe135887de3a550c7ce344786b53562" kindref="member">CoarseSunSensor::scaleSensorValues</ref>()</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref><sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref><sp/>*<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a88527c76121a0e11766034f4cdb71ec5" kindref="member">scaleFactor</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a6a64d8194fefd08fe092c176757633ab" kindref="member">trueValue</ref><sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a6a64d8194fefd08fe092c176757633ab" kindref="member">trueValue</ref><sp/>*<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a88527c76121a0e11766034f4cdb71ec5" kindref="member">scaleFactor</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_coarse_sun_sensor_1a34d036f3041e944e6e1980a57db4a8f4" kindref="member">CoarseSunSensor::applySaturation</ref>()</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>sensedEigen;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>sensedEigen<sp/>=<sp/>cArray2EigenMatrixXd(&amp;this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref>,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>sensedEigen<sp/>=<sp/>this-&gt;saturateUtility.saturate(sensedEigen);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(sensedEigen,<sp/>&amp;this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_coarse_sun_sensor_1ae1483d24c0a2d8f946486363ee14a3b4" kindref="member">CoarseSunSensor::writeOutputMessages</ref>(uint64_t<sp/>Clock)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_coarse_sun_sensor_1aa010a66df8a7be7256c6ce7734c5a4f9" kindref="member">cssDataOutMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CSSRawDataMsgPayload<sp/>localMessage;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localMessage<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1aa010a66df8a7be7256c6ce7734c5a4f9" kindref="member">cssDataOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localMessage.OutputData<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1aa010a66df8a7be7256c6ce7734c5a4f9" kindref="member">cssDataOutMsg</ref>.write(&amp;localMessage,<sp/>this-&gt;moduleID,<sp/>Clock);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>CSS<sp/>configuration<sp/>log<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_coarse_sun_sensor_1a8f3ad7c32560e4328e02bafdc8632d4d" kindref="member">cssConfigLogOutMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CSSConfigLogMsgPayload<sp/>configMsg;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configMsg<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a8f3ad7c32560e4328e02bafdc8632d4d" kindref="member">cssConfigLogOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configMsg.fov<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a1ef6c1b9a5c098119d20526c5a9f7599" kindref="member">fov</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configMsg.signal<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configMsg.minSignal<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ad6e16e4e4b5bc88b3157cd44958392bd" kindref="member">minOutput</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configMsg.maxSignal<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a44067041c1c61871a4a35cb8f3bdc446" kindref="member">maxOutput</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_coarse_sun_sensor_1a00df64394822d0c0ea1eee2ad92e6b3e" kindref="member">CSSGroupID</ref><sp/>&gt;=0)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configMsg.CSSGroupID<sp/>=<sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a00df64394822d0c0ea1eee2ad92e6b3e" kindref="member">CSSGroupID</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;<ref refid="class_coarse_sun_sensor_1a05b290428cb69fac73976ffc059ac5af" kindref="member">r_B</ref>,<sp/>configMsg.r_B);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenVector3d2CArray(this-&gt;<ref refid="class_coarse_sun_sensor_1aa0df451aab5d300f0c321949a92db2e9" kindref="member">nHat_B</ref>,<sp/>configMsg.nHat_B);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a8f3ad7c32560e4328e02bafdc8632d4d" kindref="member">cssConfigLogOutMsg</ref>.write(&amp;configMsg,<sp/>this-&gt;moduleID,<sp/>Clock);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_coarse_sun_sensor_1acef21662adfc60bbfea890bfca437f7b" kindref="member">CoarseSunSensor::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a503709528249356cca7bb7347e81be91" kindref="member">readInputMessages</ref>();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a8f5b31f57a6140a784534446e6747fb7" kindref="member">computeSunData</ref>();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a79b5c8f155631c129123a6e53419e414" kindref="member">computeTrueOutput</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a9294bf8f21a9e198a359cc0d445d4559" kindref="member">applySensorErrors</ref>();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a3fe135887de3a550c7ce344786b53562" kindref="member">scaleSensorValues</ref>();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1a34d036f3041e944e6e1980a57db4a8f4" kindref="member">applySaturation</ref>();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_coarse_sun_sensor_1ae1483d24c0a2d8f946486363ee14a3b4" kindref="member">writeOutputMessages</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><ref refid="class_c_s_s_constellation_1abb94ba1741443e4708b0558b5a4006d7" kindref="member">CSSConstellation::CSSConstellation</ref>()</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_c_s_s_constellation_1a531ee92cdbff8fb5f8d6fb172f645259" kindref="member">sensorList</ref>.clear();</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><ref refid="class_c_s_s_constellation_1a40f8d6895159d7b8f8b3483204ede212" kindref="member">CSSConstellation::~CSSConstellation</ref>()</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_c_s_s_constellation_1a531ee92cdbff8fb5f8d6fb172f645259" kindref="member">sensorList</ref>.clear();</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_s_s_constellation_1a66009ef436c735ba50c4f30eff76398c" kindref="member">CSSConstellation::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CoarseSunSensor*&gt;::iterator<sp/>itp;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_coarse_sun_sensor" kindref="compound">CoarseSunSensor</ref><sp/>*it;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(itp=this-&gt;<ref refid="class_c_s_s_constellation_1a531ee92cdbff8fb5f8d6fb172f645259" kindref="member">sensorList</ref>.begin();<sp/>itp!=<sp/>this-&gt;<ref refid="class_c_s_s_constellation_1a531ee92cdbff8fb5f8d6fb172f645259" kindref="member">sensorList</ref>.end();<sp/>itp++)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>*itp;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="class_coarse_sun_sensor_1ae6e92b31d2a8a46261612a42fe95ab19" kindref="member">Reset</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;outputBuffer<sp/>=<sp/>this-&gt;<ref refid="class_c_s_s_constellation_1a0feea6dede7d5142d1810c3ceebd4a50" kindref="member">constellationOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_s_s_constellation_1a7127b144d668aadafdfda1b0298380d1" kindref="member">CSSConstellation::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CoarseSunSensor*&gt;::iterator<sp/>itp;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_coarse_sun_sensor" kindref="compound">CoarseSunSensor</ref>*<sp/>it;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(itp=this-&gt;<ref refid="class_c_s_s_constellation_1a531ee92cdbff8fb5f8d6fb172f645259" kindref="member">sensorList</ref>.begin();<sp/>itp!=<sp/>this-&gt;<ref refid="class_c_s_s_constellation_1a531ee92cdbff8fb5f8d6fb172f645259" kindref="member">sensorList</ref>.end();<sp/>itp++)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>*itp;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="class_coarse_sun_sensor_1a503709528249356cca7bb7347e81be91" kindref="member">readInputMessages</ref>();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="class_coarse_sun_sensor_1a8f5b31f57a6140a784534446e6747fb7" kindref="member">computeSunData</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="class_coarse_sun_sensor_1a79b5c8f155631c129123a6e53419e414" kindref="member">computeTrueOutput</ref>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="class_coarse_sun_sensor_1a9294bf8f21a9e198a359cc0d445d4559" kindref="member">applySensorErrors</ref>();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="class_coarse_sun_sensor_1a3fe135887de3a550c7ce344786b53562" kindref="member">scaleSensorValues</ref>();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="class_coarse_sun_sensor_1a34d036f3041e944e6e1980a57db4a8f4" kindref="member">applySaturation</ref>();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;<ref refid="class_coarse_sun_sensor_1ae1483d24c0a2d8f946486363ee14a3b4" kindref="member">writeOutputMessages</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;outputBuffer.CosValue[itp<sp/>-<sp/>this-&gt;<ref refid="class_c_s_s_constellation_1a531ee92cdbff8fb5f8d6fb172f645259" kindref="member">sensorList</ref>.begin()]<sp/>=<sp/>it-&gt;<ref refid="class_coarse_sun_sensor_1acc3791ab4a6bc4ab1c69a599ac6f3561" kindref="member">sensedValue</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_c_s_s_constellation_1a0feea6dede7d5142d1810c3ceebd4a50" kindref="member">constellationOutMsg</ref>.write(&amp;this-&gt;outputBuffer,<sp/>this-&gt;moduleID,<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_s_s_constellation_1a9742907b9eae1b104c3ed77c3bdcb83b" kindref="member">CSSConstellation::appendCSS</ref>(<ref refid="class_coarse_sun_sensor" kindref="compound">CoarseSunSensor</ref>*<sp/>newSensor)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_s_s_constellation_1a531ee92cdbff8fb5f8d6fb172f645259" kindref="member">sensorList</ref>.push_back(newSensor);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/sensors/coarseSunSensor/coarseSunSensor.cpp"/>
  </compounddef>
</doxygen>
