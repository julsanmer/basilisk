<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="sunline_s_e_k_f_8c" kind="file" language="C++">
    <compoundname>sunlineSEKF.c</compoundname>
    <includes refid="sunline_s_e_k_f_8h" local="yes">fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/rigidBodyKinematics.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c</label>
        <link refid="sunline_s_e_k_f_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.h</label>
        <link refid="sunline_s_e_k_f_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="10">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="12">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="11">
        <label>architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="5">
        <label>cMsgCInterface/CSSArraySensorMsg_C.h</label>
      </node>
      <node id="7">
        <label>cMsgCInterface/CSSConfigMsg_C.h</label>
      </node>
      <node id="4">
        <label>cMsgCInterface/NavAttMsg_C.h</label>
      </node>
      <node id="6">
        <label>cMsgCInterface/SunlineFilterMsg_C.h</label>
      </node>
      <node id="13">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="sunline_s_e_k_f_8c_1ad39ba6fef73afe61922bda2bbf325d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_sunlineSEKF</definition>
        <argsstring>(sunlineSEKFConfig *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_sunlineSEKF</name>
        <param>
          <type><ref refid="structsunline_s_e_k_f_config" kindref="compound">sunlineSEKFConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initializes the configData for theCSS WLS estimator. It checks to ensure that the inputs are sane and then creates the output message <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the CSS WLS estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" line="34" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="sunline_s_e_k_f_8c_1af520a853157c94dc15df4901bb1be371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_sunlineSEKF</definition>
        <argsstring>(sunlineSEKFConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_sunlineSEKF</name>
        <param>
          <type><ref refid="structsunline_s_e_k_f_config" kindref="compound">sunlineSEKFConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method resets the sunline attitude filter to an initial state and initializes the internal estimation matrices. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the CSS estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Zero the local configuration data structures and outputs</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Read coarse sun sensor configuration information.</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>For each coarse sun sensor, convert the configuration data over from structure to body</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Save the count of sun sensors for later use</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Initialize filter parameters to max values</para>
</listitem></itemizedlist>
</para>
<para>Initalize the filter to use b_1 of the body frame to make frame</para>
<para><itemizedlist>
<listitem><para>Ensure that all internal filter matrices are zeroed</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" line="48" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" bodystart="48" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="sunline_s_e_k_f_8c_1a21e37022aadbf18778a033a7aba674f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_sunlineSEKF</definition>
        <argsstring>(sunlineSEKFConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_sunlineSEKF</name>
        <param>
          <type><ref refid="structsunline_s_e_k_f_config" kindref="compound">sunlineSEKFConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method takes the parsed CSS sensor data and outputs an estimate of the sun vector in the ADCS body frame <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the CSS estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Read the input parsed CSS sensor data message</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Check for switching frames</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>If the time tag from the measured data is new compared to previous step, propagate and update the filter</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>If current clock time is further ahead than the measured time, then propagate to this current time-step</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Write the sunline estimate into the copy of the navigation message structure</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Populate the filter states output buffer and write the output message</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" line="113" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" bodystart="113" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="sunline_s_e_k_f_8c_1a9efef775173b5ef3afad3ea04492787e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sunlineTimeUpdate</definition>
        <argsstring>(sunlineSEKFConfig *configData, double updateTime)</argsstring>
        <name>sunlineTimeUpdate</name>
        <param>
          <type><ref refid="structsunline_s_e_k_f_config" kindref="compound">sunlineSEKFConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>double</type>
          <declname>updateTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs the time update for the sunline kalman filter. It calls for the updated Dynamics Matrix, as well as the new states and STM. It then updates the covariance, with process noise. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the CSS estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>updateTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The time that we need to fix the filter to (seconds) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>compute timne step</para>
<para><itemizedlist>
<listitem><para>Propagate the previous reference states and STM to the current time</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Update the covariance</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" line="192" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" bodystart="192" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="sunline_s_e_k_f_8c_1adad010f9bd18faee100989ec90139b38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sunlineStateSTMProp</definition>
        <argsstring>(double dynMat[EKF_N_STATES_SWITCH *EKF_N_STATES_SWITCH], double bVec[SKF_N_STATES], double dt, double *stateInOut, double *stateTransition)</argsstring>
        <name>sunlineStateSTMProp</name>
        <param>
          <type>double</type>
          <declname>dynMat</declname>
          <array>[EKF_N_STATES_SWITCH *EKF_N_STATES_SWITCH]</array>
        </param>
        <param>
          <type>double</type>
          <declname>bVec</declname>
          <array>[SKF_N_STATES]</array>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>stateInOut</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>stateTransition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method propagates a sunline state vector forward in time. Note that the calling parameter is updated in place to save on data copies. This also updates the STM using the dynamics matrix. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stateInOut</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dynMat</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bVec</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>time step </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stateTransition</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Begin state update steps</para>
<para>Take omega cross d</para>
<para><itemizedlist>
<listitem><para>Multiply omega cross d by dt and add to state to propagate</para>
</listitem></itemizedlist>
</para>
<para>Begin STM propagation step</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" line="248" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" bodystart="248" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="sunline_s_e_k_f_8c_1abe335c34ff98f610b073225d1af0748e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sunlineDynMatrix</definition>
        <argsstring>(double states[EKF_N_STATES_SWITCH], double bVec[SKF_N_STATES], double dt, double *dynMat)</argsstring>
        <name>sunlineDynMatrix</name>
        <param>
          <type>double</type>
          <declname>states</declname>
          <array>[EKF_N_STATES_SWITCH]</array>
        </param>
        <param>
          <type>double</type>
          <declname>bVec</declname>
          <array>[SKF_N_STATES]</array>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dynMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method computes the dynamics matrix, which is the derivative of the dynamics F by the state X, evaluated at the reference state. It takes in the configure data and updates this A matrix pointer called dynMat <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>states</parametername>
</parameternamelist>
<parameterdescription>
<para>Updated states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bVec</parametername>
</parameternamelist>
<parameterdescription>
<para>b vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>Time step </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dynMat</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Dynamic Matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" line="291" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" bodystart="291" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="sunline_s_e_k_f_8c_1a196e5f0fff72bea7ae93bdf2af076288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sunlineMeasUpdate</definition>
        <argsstring>(sunlineSEKFConfig *configData, double updateTime)</argsstring>
        <name>sunlineMeasUpdate</name>
        <param>
          <type><ref refid="structsunline_s_e_k_f_config" kindref="compound">sunlineSEKFConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>double</type>
          <declname>updateTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs the measurement update for the sunline kalman filter. It applies the observations in the obs vectors to the current state estimate and updates the state/covariance with that information. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the CSS estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>updateTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The time that we need to fix the filter to (seconds) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Compute the valid observations and the measurement model for all observations</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute the Kalman Gain.</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute the update with a CKF</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" line="330" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" bodystart="330" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="sunline_s_e_k_f_8c_1a7726d14447909292a9c29335b9e44e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sunlineCKFUpdate</definition>
        <argsstring>(double xBar[EKF_N_STATES_SWITCH], double kalmanGain[EKF_N_STATES_SWITCH *MAX_N_CSS_MEAS], double covarBar[EKF_N_STATES_SWITCH *EKF_N_STATES_SWITCH], double qObsVal, size_t numObs, double yObs[MAX_N_CSS_MEAS], double hObs[MAX_N_CSS_MEAS *EKF_N_STATES_SWITCH], double *x, double *covar)</argsstring>
        <name>sunlineCKFUpdate</name>
        <param>
          <type>double</type>
          <declname>xBar</declname>
          <array>[EKF_N_STATES_SWITCH]</array>
        </param>
        <param>
          <type>double</type>
          <declname>kalmanGain</declname>
          <array>[EKF_N_STATES_SWITCH *MAX_N_CSS_MEAS]</array>
        </param>
        <param>
          <type>double</type>
          <declname>covarBar</declname>
          <array>[EKF_N_STATES_SWITCH *EKF_N_STATES_SWITCH]</array>
        </param>
        <param>
          <type>double</type>
          <declname>qObsVal</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numObs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yObs</declname>
          <array>[MAX_N_CSS_MEAS]</array>
        </param>
        <param>
          <type>double</type>
          <declname>hObs</declname>
          <array>[MAX_N_CSS_MEAS *EKF_N_STATES_SWITCH]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>covar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method computes the updated with a Classical Kalman Filter <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xBar</parametername>
</parameternamelist>
<parameterdescription>
<para>The state after a time update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kalmanGain</parametername>
</parameternamelist>
<parameterdescription>
<para>The computed Kalman Gain </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>covarBar</parametername>
</parameternamelist>
<parameterdescription>
<para>The time updated covariance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qObsVal</parametername>
</parameternamelist>
<parameterdescription>
<para>The observation noise </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numObs</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of CSSs that get measurements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yObs</parametername>
</parameternamelist>
<parameterdescription>
<para>The y vector after receiving the measurements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hObs</parametername>
</parameternamelist>
<parameterdescription>
<para>The H matrix filled with the observations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the state error for modification </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>covar</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the covariance after update </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Compute innovation, multiply it my Kalman Gain, and add it to xBar</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute new covariance with Joseph&apos;s method</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" line="365" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" bodystart="365" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="sunline_s_e_k_f_8c_1a4db42456566eae29a4f72a567c045bf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sunlineSEKFUpdate</definition>
        <argsstring>(double kalmanGain[EKF_N_STATES_SWITCH *MAX_N_CSS_MEAS], double covarBar[EKF_N_STATES_SWITCH *EKF_N_STATES_SWITCH], double qObsVal, size_t numObs, double yObs[MAX_N_CSS_MEAS], double hObs[MAX_N_CSS_MEAS *EKF_N_STATES_SWITCH], double *states, double *x, double *covar)</argsstring>
        <name>sunlineSEKFUpdate</name>
        <param>
          <type>double</type>
          <declname>kalmanGain</declname>
          <array>[EKF_N_STATES_SWITCH *MAX_N_CSS_MEAS]</array>
        </param>
        <param>
          <type>double</type>
          <declname>covarBar</declname>
          <array>[EKF_N_STATES_SWITCH *EKF_N_STATES_SWITCH]</array>
        </param>
        <param>
          <type>double</type>
          <declname>qObsVal</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numObs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yObs</declname>
          <array>[MAX_N_CSS_MEAS]</array>
        </param>
        <param>
          <type>double</type>
          <declname>hObs</declname>
          <array>[MAX_N_CSS_MEAS *EKF_N_STATES_SWITCH]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>states</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>covar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method computes the updated with a Extended Kalman Filter <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kalmanGain</parametername>
</parameternamelist>
<parameterdescription>
<para>The computed Kalman Gain </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>covarBar</parametername>
</parameternamelist>
<parameterdescription>
<para>The time updated covariance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qObsVal</parametername>
</parameternamelist>
<parameterdescription>
<para>The observation noise </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numObs</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of CSSs that get measurements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yObs</parametername>
</parameternamelist>
<parameterdescription>
<para>The y vector after receiving the measurements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hObs</parametername>
</parameternamelist>
<parameterdescription>
<para>The H matrix filled with the observations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>states</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the state error for modification </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>covar</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the covariance after update </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Update the state error</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Change the reference state</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute new covariance with Joseph&apos;s method</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" line="424" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" bodystart="424" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="sunline_s_e_k_f_8c_1a1773a3f264874c7906eb000fd1745a4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sunlineHMatrixYMeas</definition>
        <argsstring>(double states[EKF_N_STATES_SWITCH], size_t numCSS, double cssSensorCos[MAX_N_CSS_MEAS], double sensorUseThresh, double cssNHat_B[MAX_NUM_CSS_SENSORS *3], double *obs, double *yMeas, int *numObs, double *measMat)</argsstring>
        <name>sunlineHMatrixYMeas</name>
        <param>
          <type>double</type>
          <declname>states</declname>
          <array>[EKF_N_STATES_SWITCH]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>numCSS</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cssSensorCos</declname>
          <array>[MAX_N_CSS_MEAS]</array>
        </param>
        <param>
          <type>double</type>
          <declname>sensorUseThresh</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cssNHat_B</declname>
          <array>[MAX_NUM_CSS_SENSORS *3]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>obs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>yMeas</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>numObs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>measMat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method computes the H matrix, defined by dGdX. As well as computing the innovation, difference between the measurements and the expected measurements. This methods modifies the numObs, measMat, and yMeas. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>states</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numCSS</parametername>
</parameternamelist>
<parameterdescription>
<para>The total number of CSS </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cssSensorCos</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of the measurements from the CSSs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sensorUseThresh</parametername>
</parameternamelist>
<parameterdescription>
<para>Thresh The Threshold below which the measuremnts are not read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cssNHat_B</parametername>
</parameternamelist>
<parameterdescription>
<para>The normals vector for each of the CSSs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obs</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the observations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yMeas</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the innovation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numObs</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the number of observations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>measMat</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to the H measurement matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Loop over all available coarse sun sensors and only use ones that meet validity threshold</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>For each valid measurement, copy observation value and compute expected obs value and fill out H matrix.</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" line="485" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" bodystart="485" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="sunline_s_e_k_f_8c_1a6bf6f04396471cd5042d8c8b45e6d353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sunlineKalmanGain</definition>
        <argsstring>(double covarBar[EKF_N_STATES_SWITCH *EKF_N_STATES_SWITCH], double hObs[MAX_N_CSS_MEAS *EKF_N_STATES_SWITCH], double qObsVal, size_t numObs, double *kalmanGain)</argsstring>
        <name>sunlineKalmanGain</name>
        <param>
          <type>double</type>
          <declname>covarBar</declname>
          <array>[EKF_N_STATES_SWITCH *EKF_N_STATES_SWITCH]</array>
        </param>
        <param>
          <type>double</type>
          <declname>hObs</declname>
          <array>[MAX_N_CSS_MEAS *EKF_N_STATES_SWITCH]</array>
        </param>
        <param>
          <type>double</type>
          <declname>qObsVal</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numObs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kalmanGain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method computes the Kalman gain given the measurements. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>covarBar</parametername>
</parameternamelist>
<parameterdescription>
<para>The time updated covariance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hObs</parametername>
</parameternamelist>
<parameterdescription>
<para>The H matrix filled with the observations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qObsVal</parametername>
</parameternamelist>
<parameterdescription>
<para>The observation noise </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numObs</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of observations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kalmanGain</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Kalman Gain </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Add measurement noise</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Invert the previous matrix</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute the Kalman Gain</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" line="521" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" bodystart="521" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="sunline_s_e_k_f_8c_1a08749a52c87d5a073310f23d8c88649c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sunlineSEKFSwitch</definition>
        <argsstring>(double *bVec_B, double *states, double *covar)</argsstring>
        <name>sunlineSEKFSwitch</name>
        <param>
          <type>double *</type>
          <declname>bVec_B</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>states</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>covar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method computes the dcms necessary for the switch between the two frames. It the switches the states and the covariance, and sets s2 to be the new, different vector of the body frame. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bVec_B</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to b vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>states</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>covar</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the covariance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Set the body frame vectors</para>
<para>Populate the dcm_BS with the &quot;old&quot; S-frame</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" line="564" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" bodystart="564" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="sunline_s_e_k_f_8c_1a4c2793156dd8e4aa95b9414dfe6786b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sunlineSEKFComputeDCM_BS</definition>
        <argsstring>(double sunheading[SKF_N_STATES_HALF], double bVec[SKF_N_STATES_HALF], double *dcm)</argsstring>
        <name>sunlineSEKFComputeDCM_BS</name>
        <param>
          <type>double</type>
          <declname>sunheading</declname>
          <array>[SKF_N_STATES_HALF]</array>
        </param>
        <param>
          <type>double</type>
          <declname>bVec</declname>
          <array>[SKF_N_STATES_HALF]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>dcm</declname>
        </param>
        <briefdescription>
<para>compute the DCM </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sunheading</parametername>
</parameternamelist>
<parameterdescription>
<para>array of sun heading measurement states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bVec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of bVec values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dcm</parametername>
</parameternamelist>
<parameterdescription>
<para>DCM pointer to be returned </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Populate the dcm_BS with the &quot;new&quot; S-frame</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" line="615" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c" bodystart="615" bodyend="640"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016-2017,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_sunlineSEKF(<ref refid="structsunline_s_e_k_f_config" kindref="compound">sunlineSEKFConfig</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>NavAttMsg_C_init(&amp;configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a38fb5f3f6c60ef12caa153c82d87d0e6" kindref="member">navStateOutMsg</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>SunlineFilterMsg_C_init(&amp;configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa188d70b8be879875eec64261547d5d6" kindref="member">filtDataOutMsg</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_sunlineSEKF(<ref refid="structsunline_s_e_k_f_config" kindref="compound">sunlineSEKFConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>CSSConfigMsgPayload<sp/>cssConfigInBuffer;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa05d76a381432d5978efa17f952c6d93" kindref="member">outputSunline</ref><sp/>=<sp/>NavAttMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1ae25c497a6a0ad06310e309e22ca707e9" kindref="member">cssNHat_B</ref>,<sp/>MAX_NUM_CSS_SENSORS,<sp/>3);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>input<sp/>messages<sp/>are<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CSSConfigMsg_C_isLinked(&amp;configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acb9a5f5c9bc0b5e57b7465c48bbd3821" kindref="member">cssConfigInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a93d5069429c6e51a75c041403384da54" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>sunlineSEKF.cssConfigInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CSSArraySensorMsg_C_isLinked(&amp;configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a835ffc74352223c43f4a3691072f2cd8" kindref="member">cssDataInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a93d5069429c6e51a75c041403384da54" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>sunlineSEKF.cssDataInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>cssConfigInBuffer<sp/>=<sp/>CSSConfigMsg_C_read(&amp;configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acb9a5f5c9bc0b5e57b7465c48bbd3821" kindref="member">cssConfigInMsg</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint32_t<sp/>i=0;<sp/>i&lt;cssConfigInBuffer.nCSS;<sp/>i++)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(cssConfigInBuffer.cssVals[i].nHat_B,<sp/>&amp;(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1ae25c497a6a0ad06310e309e22ca707e9" kindref="member">cssNHat_B</ref>[i*3]));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a39ef455db2d7ddd681acea3e2a48055a" kindref="member">numCSSTotal</ref><sp/>=<sp/>cssConfigInBuffer.nCSS;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0c7065cbed5835b003347f43b39902f9" kindref="member">timeTag</ref><sp/>=<sp/>callTime*NANO2SEC;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a35e3e12c67a323e80975265f7018cd1d" kindref="member">dt</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref><sp/>=<sp/>EKF_N_STATES_SWITCH;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref><sp/>=<sp/>MAX_N_CSS_MEAS;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Set(1,<sp/>0,<sp/>0,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aee985313221d15264e761a9bb7f9b4d7" kindref="member">bVec_B</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a8f294cc2604b47b9cbbae4d1b0e215be" kindref="member">switchTresh</ref><sp/>=<sp/>0.866;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>vSetZero(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a37c884a6bbfe0796b44be63066880234" kindref="member">obs</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>vSetZero(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1ab915b35b7d707bb90504dd24a277c381" kindref="member">yMeas</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>vSetZero(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1af5ea8234ad63b7e0c6897f824c3d9fad" kindref="member">xBar</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa871caa9e69bbd81644c58b0df6524d3" kindref="member">covarBar</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetIdentity(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0aa35456544eeba8eef97a9073647601" kindref="member">stateTransition</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetIdentity(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a4f8c299ed5f6fb09201236efef8235a3" kindref="member">W_BS</ref>,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1add13eed1898ddbdb154ec2a4c4834275" kindref="member">dynMat</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0b5a8070e80f6001ca53abea99de4d0d" kindref="member">measMat</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aaa9096539cc92c9019084c7f7b68ba7f" kindref="member">kalmanGain</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a8ac46728980bc5fdff85735f57bcc7a0" kindref="member">measNoise</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetIdentity(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1ac8bc036bd4718eedee097df78112a432" kindref="member">procNoise</ref>,<sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref>-3,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref>-3);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>mScale(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a6e132c5575affd0f98922d3feef139a6" kindref="member">qProcVal</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1ac8bc036bd4718eedee097df78112a432" kindref="member">procNoise</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref>-3,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a40eb0261fcff4af5811c04011d8231f2" kindref="member">numStates</ref>-3,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1ac8bc036bd4718eedee097df78112a432" kindref="member">procNoise</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_sunlineSEKF(<ref refid="structsunline_s_e_k_f_config" kindref="compound">sunlineSEKFConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newTimeTag;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Hx[MAX_N_CSS_MEAS];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>states_BN[EKF_N_STATES_SWITCH];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sunheading_hat[SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>timeOfMsgWritten;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isWritten;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>SunlineFilterMsgPayload<sp/>sunlineDataOutBuffer;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1af32e9b8c81941d47c3f22f7d5aaaa1c8" kindref="member">cssSensorInBuffer</ref><sp/>=<sp/>CSSArraySensorMsg_C_read(&amp;configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a835ffc74352223c43f4a3691072f2cd8" kindref="member">cssDataInMsg</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>timeOfMsgWritten<sp/>=<sp/>CSSArraySensorMsg_C_timeWritten(&amp;configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a835ffc74352223c43f4a3691072f2cd8" kindref="member">cssDataInMsg</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>isWritten<sp/>=<sp/>CSSArraySensorMsg_C_isWritten(&amp;configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a835ffc74352223c43f4a3691072f2cd8" kindref="member">cssDataInMsg</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Normalize(&amp;configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a202118957c4866868dd6ba61d28ce0dc" kindref="member">state</ref>[0],<sp/>sunheading_hat);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(v3Dot(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aee985313221d15264e761a9bb7f9b4d7" kindref="member">bVec_B</ref>,<sp/>sunheading_hat))<sp/>&gt;<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a8f294cc2604b47b9cbbae4d1b0e215be" kindref="member">switchTresh</ref>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunlineSEKFSwitch(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aee985313221d15264e761a9bb7f9b4d7" kindref="member">bVec_B</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a202118957c4866868dd6ba61d28ce0dc" kindref="member">state</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a67be2695f9f1e5ef5b8f29b253ca6038" kindref="member">covar</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>newTimeTag<sp/>=<sp/>timeOfMsgWritten<sp/>*<sp/>NANO2SEC;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newTimeTag<sp/>&gt;=<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0c7065cbed5835b003347f43b39902f9" kindref="member">timeTag</ref><sp/>&amp;&amp;<sp/>isWritten)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunlineTimeUpdate(configData,<sp/>newTimeTag);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunlineMeasUpdate(configData,<sp/>newTimeTag);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>newTimeTag<sp/>=<sp/>callTime*NANO2SEC;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newTimeTag<sp/>&gt;<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0c7065cbed5835b003347f43b39902f9" kindref="member">timeTag</ref>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunlineTimeUpdate(configData,<sp/>newTimeTag);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vCopy(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1af5ea8234ad63b7e0c6897f824c3d9fad" kindref="member">xBar</ref>,<sp/>EKF_N_STATES_SWITCH,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1af52ba5d01bde2a14939589fea35db466" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCopy(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa871caa9e69bbd81644c58b0df6524d3" kindref="member">covarBar</ref>,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a67be2695f9f1e5ef5b8f29b253ca6038" kindref="member">covar</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>post<sp/>fit<sp/>residuals<sp/>once<sp/>that<sp/>data<sp/>has<sp/>been<sp/>processed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0b5a8070e80f6001ca53abea99de4d0d" kindref="member">measMat</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref>,<sp/>SKF_N_STATES,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1af52ba5d01bde2a14939589fea35db466" kindref="member">x</ref>,<sp/>SKF_N_STATES,<sp/>1,<sp/>Hx);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>mSubtract(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1ab915b35b7d707bb90504dd24a277c381" kindref="member">yMeas</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref>,<sp/>1,<sp/>Hx,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a3977f56752e38ef1d585ae0adb74679e" kindref="member">postFits</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Switch<sp/>the<sp/>rates<sp/>back<sp/>to<sp/>omega_BN<sp/>instead<sp/>of<sp/>oemga_SB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>vCopy(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a202118957c4866868dd6ba61d28ce0dc" kindref="member">state</ref>,<sp/>EKF_N_STATES_SWITCH,<sp/>states_BN);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>vScale(-1,<sp/>&amp;(states_BN[3]),<sp/>2,<sp/>&amp;(states_BN[3]));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a202118957c4866868dd6ba61d28ce0dc" kindref="member">state</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa05d76a381432d5978efa17f952c6d93" kindref="member">outputSunline</ref>.vehSunPntBdy);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Normalize(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa05d76a381432d5978efa17f952c6d93" kindref="member">outputSunline</ref>.vehSunPntBdy,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa05d76a381432d5978efa17f952c6d93" kindref="member">outputSunline</ref>.vehSunPntBdy);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa05d76a381432d5978efa17f952c6d93" kindref="member">outputSunline</ref>.timeTag<sp/>=<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0c7065cbed5835b003347f43b39902f9" kindref="member">timeTag</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>NavAttMsg_C_write(&amp;configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa05d76a381432d5978efa17f952c6d93" kindref="member">outputSunline</ref>,<sp/>&amp;configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a38fb5f3f6c60ef12caa153c82d87d0e6" kindref="member">navStateOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>sunlineDataOutBuffer.timeTag<sp/>=<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0c7065cbed5835b003347f43b39902f9" kindref="member">timeTag</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>sunlineDataOutBuffer.numObs<sp/>=<sp/>(int)<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(sunlineDataOutBuffer.covar,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a67be2695f9f1e5ef5b8f29b253ca6038" kindref="member">covar</ref>,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(sunlineDataOutBuffer.state,<sp/>states_BN,<sp/>EKF_N_STATES_SWITCH*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(sunlineDataOutBuffer.stateError,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1af52ba5d01bde2a14939589fea35db466" kindref="member">x</ref>,<sp/>SKF_N_STATES*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(sunlineDataOutBuffer.postFitRes,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a3977f56752e38ef1d585ae0adb74679e" kindref="member">postFits</ref>,<sp/>MAX_N_CSS_MEAS*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>SunlineFilterMsg_C_write(&amp;sunlineDataOutBuffer,<sp/>&amp;configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa188d70b8be879875eec64261547d5d6" kindref="member">filtDataOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sunlineTimeUpdate(<ref refid="structsunline_s_e_k_f_config" kindref="compound">sunlineSEKFConfig</ref><sp/>*configData,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>updateTime)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stmT[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH],<sp/>covPhiT[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Gamma[EKF_N_STATES_SWITCH][EKF_N_STATES_SWITCH<sp/>-<sp/>3];</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qGammaT[(EKF_N_STATES_SWITCH-3)*EKF_N_STATES_SWITCH],<sp/>gammaQGammaT[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_tilde[SKF_N_STATES_HALF][SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_BS[SKF_N_STATES_HALF][SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(dcm_BS,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a35e3e12c67a323e80975265f7018cd1d" kindref="member">dt</ref><sp/>=<sp/>updateTime<sp/>-<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0c7065cbed5835b003347f43b39902f9" kindref="member">timeTag</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>sunlineDynMatrix(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a202118957c4866868dd6ba61d28ce0dc" kindref="member">state</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aee985313221d15264e761a9bb7f9b4d7" kindref="member">bVec_B</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a35e3e12c67a323e80975265f7018cd1d" kindref="member">dt</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1add13eed1898ddbdb154ec2a4c4834275" kindref="member">dynMat</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>sunlineStateSTMProp(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1add13eed1898ddbdb154ec2a4c4834275" kindref="member">dynMat</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aee985313221d15264e761a9bb7f9b4d7" kindref="member">bVec_B</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a35e3e12c67a323e80975265f7018cd1d" kindref="member">dt</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a202118957c4866868dd6ba61d28ce0dc" kindref="member">state</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0aa35456544eeba8eef97a9073647601" kindref="member">stateTransition</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>the<sp/>time<sp/>update<sp/>on<sp/>the<sp/>state<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultV(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0aa35456544eeba8eef97a9073647601" kindref="member">stateTransition</ref>,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1af52ba5d01bde2a14939589fea35db466" kindref="member">x</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1af5ea8234ad63b7e0c6897f824c3d9fad" kindref="member">xBar</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Pbar<sp/>=<sp/>Phi*P*Phi^T<sp/>+<sp/>Gamma*Q*Gamma^T*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>mTranspose(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0aa35456544eeba8eef97a9073647601" kindref="member">stateTransition</ref>,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>stmT);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a67be2695f9f1e5ef5b8f29b253ca6038" kindref="member">covar</ref>,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>stmT,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>covPhiT);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0aa35456544eeba8eef97a9073647601" kindref="member">stateTransition</ref>,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>covPhiT,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa871caa9e69bbd81644c58b0df6524d3" kindref="member">covarBar</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>sunlineSEKFComputeDCM_BS(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a202118957c4866868dd6ba61d28ce0dc" kindref="member">state</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aee985313221d15264e761a9bb7f9b4d7" kindref="member">bVec_B</ref>,<sp/>&amp;dcm_BS[0][0]);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Compute<sp/>Gamma<sp/>and<sp/>add<sp/>gammaQGamma^T<sp/>to<sp/>Pbar.<sp/>This<sp/>is<sp/>the<sp/>process<sp/>noise<sp/>addition*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetIdentity(d_tilde,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>mScale(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a35e3e12c67a323e80975265f7018cd1d" kindref="member">dt</ref>,<sp/>d_tilde,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>d_tilde);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetSubMatrix(&amp;(d_tilde[0][0]),<sp/>1,<sp/>2,<sp/>Gamma,<sp/>5,<sp/>2,<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetSubMatrix(&amp;(d_tilde[1][0]),<sp/>1,<sp/>2,<sp/>Gamma,<sp/>5,<sp/>2,<sp/>4,<sp/>0);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Tilde(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a202118957c4866868dd6ba61d28ce0dc" kindref="member">state</ref>,<sp/>d_tilde);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(d_tilde,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>dcm_BS,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>d_tilde);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>mScale(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a35e3e12c67a323e80975265f7018cd1d" kindref="member">dt</ref>*configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a35e3e12c67a323e80975265f7018cd1d" kindref="member">dt</ref>/2,<sp/>d_tilde,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>d_tilde);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetSubMatrix(&amp;(d_tilde[0][1]),<sp/>1,<sp/>2,<sp/>Gamma,<sp/>5,<sp/>2,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetSubMatrix(&amp;(d_tilde[1][1]),<sp/>1,<sp/>2,<sp/>Gamma,<sp/>5,<sp/>2,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetSubMatrix(&amp;(d_tilde[2][1]),<sp/>1,<sp/>2,<sp/>Gamma,<sp/>5,<sp/>2,<sp/>2,<sp/>0);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultMt(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1ac8bc036bd4718eedee097df78112a432" kindref="member">procNoise</ref>,<sp/>(EKF_N_STATES_SWITCH-3),(EKF_N_STATES_SWITCH-3),<sp/>Gamma,<sp/>EKF_N_STATES_SWITCH,<sp/>(EKF_N_STATES_SWITCH-3),<sp/>qGammaT);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(Gamma,<sp/>EKF_N_STATES_SWITCH,(EKF_N_STATES_SWITCH-3),<sp/>qGammaT,<sp/>(EKF_N_STATES_SWITCH-3),<sp/>EKF_N_STATES_SWITCH,<sp/>gammaQGammaT);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>mAdd(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa871caa9e69bbd81644c58b0df6524d3" kindref="member">covarBar</ref>,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>gammaQGammaT,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa871caa9e69bbd81644c58b0df6524d3" kindref="member">covarBar</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0c7065cbed5835b003347f43b39902f9" kindref="member">timeTag</ref><sp/>=<sp/>updateTime;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sunlineStateSTMProp(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dynMat[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bVec[SKF_N_STATES],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*stateInOut,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*stateTransition)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltatASTM[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH];</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>propagatedVel[SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omegaCrossd[SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_BN_S[SKF_N_STATES_HALF]<sp/>=<sp/>{0,<sp/>-stateInOut[3],<sp/>-stateInOut[4]};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_BN_B[SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_BS[SKF_N_STATES_HALF][SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(dcm_BS,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>sunlineSEKFComputeDCM_BS(stateInOut,<sp/>bVec,<sp/>&amp;dcm_BS[0][0]);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultV(dcm_BS,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>omega_BN_S,<sp/>omega_BN_B);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>local<sp/>variables<sp/>to<sp/>zero*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>vSetZero(propagatedVel,<sp/>SKF_N_STATES_HALF);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(omega_BN_B,<sp/>stateInOut,<sp/>omegaCrossd);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(-dt,<sp/>omegaCrossd,<sp/>propagatedVel);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(stateInOut,<sp/>propagatedVel,<sp/>stateInOut);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetIdentity(stateTransition,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>mScale(dt,<sp/>dynMat,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>deltatASTM);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>mAdd(stateTransition,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>deltatASTM,<sp/>stateTransition);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sunlineDynMatrix(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>states[EKF_N_STATES_SWITCH],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bVec[SKF_N_STATES],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dynMat)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>skewOmega[SKF_N_STATES_HALF][SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>skewStates[SKF_N_STATES_HALF][SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_BN_S[SKF_N_STATES_HALF]<sp/>=<sp/>{0,<sp/>-states[3],<sp/>-states[4]};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_BN_B[SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_BS[SKF_N_STATES_HALF][SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>sunlineSEKFComputeDCM_BS(states,<sp/>bVec,<sp/>&amp;dcm_BS[0][0]);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultV(dcm_BS,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>omega_BN_S,<sp/>omega_BN_B);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(skewOmega,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Tilde(omega_BN_B,<sp/>skewOmega);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(-1,<sp/>&amp;skewOmega[0],<sp/>&amp;skewOmega[0]);<sp/></highlight><highlight class="comment">//<sp/>bring<sp/>to<sp/>omega_SB<sp/>with<sp/>negative<sp/>sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Tilde(states,<sp/>skewStates);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>m33Scale(-1,<sp/>&amp;skewStates[0],<sp/>&amp;skewStates[0]);<sp/></highlight><highlight class="comment">//<sp/>bring<sp/>to<sp/>omega_SB<sp/>with<sp/>negative<sp/>sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(skewStates,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>dcm_BS,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>skewStates);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-<sp/>omega_tilde<sp/>in<sp/>dynamics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetSubMatrix(skewOmega,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>dynMat,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Populate<sp/>the<sp/>first<sp/>3x3<sp/>matrix<sp/>of<sp/>the<sp/>dynamics<sp/>matrix*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>mTranspose(dynMat,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>dynMat);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>mTranspose(skewStates,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>skewStates);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetSubMatrix(&amp;(skewStates[1][0]),<sp/>2,<sp/>3,<sp/>dynMat,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>mTranspose(dynMat,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>dynMat);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sunlineMeasUpdate(<ref refid="structsunline_s_e_k_f_config" kindref="compound">sunlineSEKFConfig</ref><sp/>*configData,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>updateTime)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numObsInt<sp/>=<sp/>(int)<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>sunlineHMatrixYMeas(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a202118957c4866868dd6ba61d28ce0dc" kindref="member">state</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a39ef455db2d7ddd681acea3e2a48055a" kindref="member">numCSSTotal</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1af32e9b8c81941d47c3f22f7d5aaaa1c8" kindref="member">cssSensorInBuffer</ref>.CosValue,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a9505a9a90f313cbeb0f471178b98e8bb" kindref="member">sensorUseThresh</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1ae25c497a6a0ad06310e309e22ca707e9" kindref="member">cssNHat_B</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a37c884a6bbfe0796b44be63066880234" kindref="member">obs</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1ab915b35b7d707bb90504dd24a277c381" kindref="member">yMeas</ref>,<sp/>&amp;(numObsInt),<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0b5a8070e80f6001ca53abea99de4d0d" kindref="member">measMat</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref><sp/>=<sp/>(size_t)<sp/>numObsInt;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>sunlineKalmanGain(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa871caa9e69bbd81644c58b0df6524d3" kindref="member">covarBar</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0b5a8070e80f6001ca53abea99de4d0d" kindref="member">measMat</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a200f8a5f2df2bdbe7b56369384d43b81" kindref="member">qObsVal</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aaa9096539cc92c9019084c7f7b68ba7f" kindref="member">kalmanGain</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Logic<sp/>to<sp/>switch<sp/>from<sp/>EKF<sp/>to<sp/>CKF.<sp/>If<sp/>the<sp/>covariance<sp/>is<sp/>too<sp/>large,<sp/>switching<sp/>references<sp/>through<sp/>an<sp/>EKF<sp/>could<sp/>lead<sp/>to<sp/>filter<sp/>divergence<sp/>in<sp/>extreme<sp/>cases.<sp/>In<sp/>order<sp/>to<sp/>remedy<sp/>this,<sp/>past<sp/>a<sp/>certain<sp/>infinite<sp/>norm<sp/>of<sp/>the<sp/>covariance,<sp/>we<sp/>update<sp/>with<sp/>a<sp/>CKF<sp/>in<sp/>order<sp/>to<sp/>bring<sp/>down<sp/>the<sp/>covariance.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vMaxAbs(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a67be2695f9f1e5ef5b8f29b253ca6038" kindref="member">covar</ref>,<sp/>EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH)<sp/>&gt;<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1abe88fb6e4655ca28d045814fcef978a3" kindref="member">eKFSwitch</ref>){</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>sunlineCKFUpdate(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1af5ea8234ad63b7e0c6897f824c3d9fad" kindref="member">xBar</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aaa9096539cc92c9019084c7f7b68ba7f" kindref="member">kalmanGain</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa871caa9e69bbd81644c58b0df6524d3" kindref="member">covarBar</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a200f8a5f2df2bdbe7b56369384d43b81" kindref="member">qObsVal</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1ab915b35b7d707bb90504dd24a277c381" kindref="member">yMeas</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0b5a8070e80f6001ca53abea99de4d0d" kindref="member">measMat</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1af52ba5d01bde2a14939589fea35db466" kindref="member">x</ref>,configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a67be2695f9f1e5ef5b8f29b253ca6038" kindref="member">covar</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-<sp/>Compute<sp/>the<sp/>update<sp/>with<sp/>a<sp/>EKF,<sp/>notice<sp/>the<sp/>reference<sp/>state<sp/>is<sp/>added<sp/>as<sp/>an<sp/>argument<sp/>because<sp/>it<sp/>is<sp/>changed<sp/>by<sp/>the<sp/>filter<sp/>update<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>sunlineSEKFUpdate(configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aaa9096539cc92c9019084c7f7b68ba7f" kindref="member">kalmanGain</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1aa871caa9e69bbd81644c58b0df6524d3" kindref="member">covarBar</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a200f8a5f2df2bdbe7b56369384d43b81" kindref="member">qObsVal</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1acd5cf2551272893a88aeb6889a154375" kindref="member">numObs</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1ab915b35b7d707bb90504dd24a277c381" kindref="member">yMeas</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a0b5a8070e80f6001ca53abea99de4d0d" kindref="member">measMat</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a202118957c4866868dd6ba61d28ce0dc" kindref="member">state</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1af52ba5d01bde2a14939589fea35db466" kindref="member">x</ref>,<sp/>configData-&gt;<ref refid="structsunline_s_e_k_f_config_1a67be2695f9f1e5ef5b8f29b253ca6038" kindref="member">covar</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sunlineCKFUpdate(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xBar[EKF_N_STATES_SWITCH],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kalmanGain[EKF_N_STATES_SWITCH*MAX_N_CSS_MEAS],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>covarBar[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qObsVal,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numObs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yObs[MAX_N_CSS_MEAS],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hObs[MAX_N_CSS_MEAS*EKF_N_STATES_SWITCH],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*covar)</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>measMatx[MAX_N_CSS_MEAS],<sp/>innov[MAX_N_CSS_MEAS],<sp/>kInnov[EKF_N_STATES_SWITCH];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eye[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH],<sp/>kH[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH];</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eyeKalH[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH],<sp/>eyeKalHT[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH];</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eyeKalHCovarBar[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH],<sp/>kalR[EKF_N_STATES_SWITCH*MAX_N_CSS_MEAS];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kalT[MAX_N_CSS_MEAS*EKF_N_STATES_SWITCH],<sp/>kalRKalT[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>noiseMat[MAX_N_CSS_MEAS*MAX_N_CSS_MEAS];</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>variables<sp/>to<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(kH,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(eyeKalH,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(eyeKalHT,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(noiseMat,<sp/>MAX_N_CSS_MEAS,<sp/>MAX_N_CSS_MEAS);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(eye,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(kalRKalT,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(kalT,<sp/>MAX_N_CSS_MEAS,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(kalR,<sp/>EKF_N_STATES_SWITCH,<sp/>MAX_N_CSS_MEAS);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(eyeKalHCovarBar,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>noise<sp/>matrix<sp/>given<sp/>number<sp/>of<sp/>observations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetIdentity(noiseMat,<sp/>numObs,<sp/>numObs);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>mScale(qObsVal,<sp/>noiseMat,<sp/>numObs,<sp/>numObs,<sp/>noiseMat);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(hObs,<sp/>numObs,<sp/>EKF_N_STATES_SWITCH,<sp/>xBar,<sp/>EKF_N_STATES_SWITCH,<sp/>1,<sp/>measMatx);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>vSubtract(yObs,<sp/>numObs,<sp/>measMatx,<sp/>innov);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(kalmanGain,<sp/>EKF_N_STATES_SWITCH,<sp/>numObs,<sp/>innov,<sp/>numObs,<sp/>1,<sp/>kInnov);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>vAdd(xBar,<sp/>EKF_N_STATES_SWITCH,<sp/>kInnov,<sp/>x);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(kalmanGain,<sp/>EKF_N_STATES_SWITCH,<sp/>numObs,<sp/>hObs,<sp/>numObs,<sp/>EKF_N_STATES_SWITCH,<sp/>kH);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetIdentity(eye,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>mSubtract(eye,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>kH,<sp/>eyeKalH);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>mTranspose(eyeKalH,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>eyeKalHT);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(eyeKalH,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>covarBar,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>eyeKalHCovarBar);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(eyeKalHCovarBar,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>eyeKalHT,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>covar);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>noise<sp/>to<sp/>the<sp/>covariance*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(kalmanGain,<sp/>EKF_N_STATES_SWITCH,<sp/>numObs,<sp/>noiseMat,<sp/>numObs,<sp/>numObs,<sp/>kalR);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>mTranspose(kalmanGain,<sp/>EKF_N_STATES_SWITCH,<sp/>numObs,<sp/>kalT);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(kalR,<sp/>EKF_N_STATES_SWITCH,<sp/>numObs,<sp/>kalT,<sp/>numObs,<sp/>EKF_N_STATES_SWITCH,<sp/>kalRKalT);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>mAdd(covar,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>kalRKalT,<sp/>covar);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sunlineSEKFUpdate(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kalmanGain[EKF_N_STATES_SWITCH*MAX_N_CSS_MEAS],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>covarBar[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qObsVal,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numObs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yObs[MAX_N_CSS_MEAS],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hObs[MAX_N_CSS_MEAS*EKF_N_STATES_SWITCH],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*states,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*covar)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eye[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH],<sp/>kH[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH];</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eyeKalH[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH],<sp/>eyeKalHT[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eyeKalHCovarBar[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH],<sp/>kalR[EKF_N_STATES_SWITCH*MAX_N_CSS_MEAS];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kalT[MAX_N_CSS_MEAS*EKF_N_STATES_SWITCH],<sp/>kalRKalT[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>noiseMat[MAX_N_CSS_MEAS*MAX_N_CSS_MEAS];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>variables<sp/>to<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(kH,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(eyeKalH,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(eyeKalHT,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(noiseMat,<sp/>MAX_N_CSS_MEAS,<sp/>MAX_N_CSS_MEAS);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(eye,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(kalRKalT,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(kalT,<sp/>MAX_N_CSS_MEAS,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(kalR,<sp/>EKF_N_STATES_SWITCH,<sp/>MAX_N_CSS_MEAS);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(eyeKalHCovarBar,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>noise<sp/>matrix<sp/>given<sp/>number<sp/>of<sp/>observations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetIdentity(noiseMat,<sp/>numObs,<sp/>numObs);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>mScale(qObsVal,<sp/>noiseMat,<sp/>numObs,<sp/>numObs,<sp/>noiseMat);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultV(kalmanGain,<sp/>EKF_N_STATES_SWITCH,<sp/>numObs,<sp/>yObs,<sp/>x);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>vAdd(states,<sp/>EKF_N_STATES_SWITCH,<sp/>x,<sp/>states);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(kalmanGain,<sp/>EKF_N_STATES_SWITCH,<sp/>numObs,<sp/>hObs,<sp/>numObs,<sp/>EKF_N_STATES_SWITCH,<sp/>kH);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetIdentity(eye,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>mSubtract(eye,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>kH,<sp/>eyeKalH);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>mTranspose(eyeKalH,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>eyeKalHT);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(eyeKalH,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>covarBar,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>eyeKalHCovarBar);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(eyeKalHCovarBar,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>eyeKalHT,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>covar);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>noise<sp/>to<sp/>the<sp/>covariance*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(kalmanGain,<sp/>EKF_N_STATES_SWITCH,<sp/>numObs,<sp/>noiseMat,<sp/>numObs,<sp/>numObs,<sp/>kalR);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>mTranspose(kalmanGain,<sp/>EKF_N_STATES_SWITCH,<sp/>numObs,<sp/>kalT);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(kalR,<sp/>EKF_N_STATES_SWITCH,<sp/>numObs,<sp/>kalT,<sp/>numObs,<sp/>EKF_N_STATES_SWITCH,<sp/>kalRKalT);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>mAdd(covar,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>kalRKalT,<sp/>covar);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sunlineHMatrixYMeas(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>states[EKF_N_STATES_SWITCH],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numCSS,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cssSensorCos[MAX_N_CSS_MEAS],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sensorUseThresh,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cssNHat_B[MAX_NUM_CSS_SENSORS*3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*obs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*yMeas,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*numObs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*measMat)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i,<sp/>obsCounter;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sensorNormal[3];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>v3SetZero(sensorNormal);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>obsCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;numCSS;<sp/>i++)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cssSensorCos[i]<sp/>&gt;<sp/>sensorUseThresh)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(&amp;(cssNHat_B[i*3]),<sp/>sensorNormal);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(obs+obsCounter)<sp/>=<sp/>cssSensorCos[i];</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(yMeas+obsCounter)<sp/>=<sp/>cssSensorCos[i]<sp/>-<sp/>v3Dot(&amp;(states[0]),<sp/>sensorNormal);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSetSubMatrix(&amp;(cssNHat_B[i*3]),<sp/>1,<sp/>3,<sp/>measMat,<sp/>MAX_NUM_CSS_SENSORS,<sp/>EKF_N_STATES_SWITCH,<sp/>obsCounter,<sp/>0);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obsCounter++;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>*numObs<sp/>=<sp/>(int)<sp/>obsCounter;</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sunlineKalmanGain(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>covarBar[EKF_N_STATES_SWITCH*EKF_N_STATES_SWITCH],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hObs[MAX_N_CSS_MEAS*EKF_N_STATES_SWITCH],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qObsVal,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numObs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*kalmanGain)</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hObsT[EKF_N_STATES_SWITCH*MAX_N_CSS_MEAS];</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>covHT[EKF_N_STATES_SWITCH*MAX_N_CSS_MEAS];</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hCovar[MAX_N_CSS_MEAS*EKF_N_STATES_SWITCH],<sp/>hCovarHT[MAX_N_CSS_MEAS*MAX_N_CSS_MEAS];</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rMat[MAX_N_CSS_MEAS*MAX_N_CSS_MEAS];</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Setting<sp/>all<sp/>local<sp/>variables<sp/>to<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(hObsT,<sp/>EKF_N_STATES_SWITCH,<sp/>MAX_N_CSS_MEAS);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(covHT,<sp/>EKF_N_STATES_SWITCH,<sp/>MAX_N_CSS_MEAS);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(hCovar,<sp/>MAX_N_CSS_MEAS,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(hCovarHT,<sp/>MAX_N_CSS_MEAS,<sp/>MAX_N_CSS_MEAS);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(rMat,<sp/>MAX_N_CSS_MEAS,<sp/>MAX_N_CSS_MEAS);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>mTranspose(hObs,<sp/>numObs,<sp/>EKF_N_STATES_SWITCH,<sp/>hObsT);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(covarBar,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>hObsT,<sp/>EKF_N_STATES_SWITCH,<sp/>numObs,<sp/>covHT);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(hObs,<sp/>numObs,<sp/>EKF_N_STATES_SWITCH,<sp/>covarBar,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>hCovar);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(hCovar,<sp/>numObs,<sp/>EKF_N_STATES_SWITCH,<sp/>hObsT,<sp/>EKF_N_STATES_SWITCH,<sp/>numObs,<sp/>hCovarHT);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetIdentity(rMat,<sp/>numObs,<sp/>numObs);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>mScale(qObsVal,<sp/>rMat,<sp/>numObs,<sp/>numObs,<sp/>rMat);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>mAdd(hCovarHT,<sp/>numObs,<sp/>numObs,<sp/>rMat,<sp/>hCovarHT);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>mInverse(hCovarHT,<sp/>numObs,<sp/>hCovarHT);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(covHT,<sp/>EKF_N_STATES_SWITCH,<sp/>numObs,<sp/>hCovarHT,<sp/>numObs,<sp/>numObs,<sp/>kalmanGain);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sunlineSEKFSwitch(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bVec_B,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*states,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*covar)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_BSold[SKF_N_STATES_HALF][SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_BSnew_T[SKF_N_STATES_HALF][SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_SnewSold[SKF_N_STATES_HALF][SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>switchMatP[EKF_N_STATES_SWITCH][EKF_N_STATES_SWITCH];</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>switchMat[EKF_N_STATES_SWITCH][EKF_N_STATES_SWITCH];</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sun_heading_norm[SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b1[SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2[SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Set(1,<sp/>0,<sp/>0,<sp/>b1);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Set(0,<sp/>1,<sp/>0,<sp/>b2);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Normalize(&amp;(states[0]),<sp/>sun_heading_norm);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>sunlineSEKFComputeDCM_BS(sun_heading_norm,<sp/>bVec_B,<sp/>&amp;dcm_BSold[0][0]);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v3IsEqual(bVec_B,<sp/>b1,<sp/>1e-10))</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunlineSEKFComputeDCM_BS(sun_heading_norm,<sp/>b2,<sp/>&amp;dcm_BSnew_T[0][0]);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(b2,<sp/>bVec_B);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunlineSEKFComputeDCM_BS(sun_heading_norm,<sp/>b1,<sp/>&amp;dcm_BSnew_T[0][0]);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(b1,<sp/>bVec_B);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>mTranspose(dcm_BSnew_T,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>dcm_BSnew_T);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(dcm_BSnew_T,<sp/>3,<sp/>3,<sp/>dcm_BSold,<sp/>3,<sp/>3,<sp/>dcm_SnewSold);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetIdentity(switchMat,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetSubMatrix(&amp;dcm_SnewSold[1][1],<sp/>1,<sp/>2,<sp/>&amp;switchMat,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>3,<sp/>3);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetSubMatrix(&amp;dcm_SnewSold[2][1],<sp/>1,<sp/>2,<sp/>&amp;switchMat,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>4,<sp/>3);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultV(switchMat,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>states,<sp/>states);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(switchMat,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>covar,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>switchMatP);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>mTranspose(switchMat,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>switchMat);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>mMultM(switchMatP,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>switchMat,<sp/>EKF_N_STATES_SWITCH,<sp/>EKF_N_STATES_SWITCH,<sp/>covar);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sunlineSEKFComputeDCM_BS(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sunheading[SKF_N_STATES_HALF],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bVec[SKF_N_STATES_HALF],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dcm){</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s1_B[SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s2_B[SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s3_B[SKF_N_STATES_HALF];</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetZero(dcm,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>v3SetZero(s2_B);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>v3SetZero(s3_B);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Normalize(sunheading,<sp/>s1_B);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(sunheading,<sp/>bVec,<sp/>s2_B);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v3Norm(s2_B)<sp/>&lt;<sp/>1E-5){</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSetIdentity(dcm,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Normalize(s2_B,<sp/>s2_B);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetSubMatrix(s1_B,<sp/>1,<sp/>SKF_N_STATES_HALF,<sp/>dcm,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetSubMatrix(&amp;(s2_B),<sp/>1,<sp/>SKF_N_STATES_HALF,<sp/>dcm,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(sunheading,<sp/>s2_B,<sp/>s3_B);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Normalize(s3_B,<sp/>s3_B);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>mSetSubMatrix(&amp;(s3_B),<sp/>1,<sp/>SKF_N_STATES_HALF,<sp/>dcm,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>2,<sp/>0);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>mTranspose(dcm,<sp/>SKF_N_STATES_HALF,<sp/>SKF_N_STATES_HALF,<sp/>dcm);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attDetermination/sunlineSEKF/sunlineSEKF.c"/>
  </compounddef>
</doxygen>
