<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="fuel_tank_8cpp" kind="file" language="C++">
    <compoundname>fuelTank.cpp</compoundname>
    <includes refid="fuel_tank_8h" local="yes">fuelTank.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp</label>
        <link refid="fuel_tank_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fuelTank.h</label>
        <link refid="fuel_tank_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="10">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="9">
        <label>architecture/msgPayloadDefC/FuelTankMsgPayload.h</label>
      </node>
      <node id="7">
        <label>architecture/utilities/avsEigenMRP.h</label>
      </node>
      <node id="8">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="12">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>simulation/dynamics/_GeneralModuleFiles/dynamicEffector.h</label>
      </node>
      <node id="11">
        <label>simulation/dynamics/_GeneralModuleFiles/fuelSlosh.h</label>
      </node>
      <node id="4">
        <label>simulation/dynamics/_GeneralModuleFiles/stateEffector.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="fuel_tank_8cpp_1a59bea0461a557b4e733dfc85b23428d5" prot="public" static="no" mutable="no">
        <type><ref refid="struct_fuel_tank_model_constant_volume__t" kindref="compound">FuelTankModelConstantVolume_t</ref></type>
        <definition>FuelTankModelConstantVolume_t FuelTankModelConstantVolume</definition>
        <argsstring></argsstring>
        <name>FuelTankModelConstantVolume</name>
        <briefdescription>
<para>fuel tank variable </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp" line="24" column="31" bodyfile="/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fuel_tank_8cpp_1aca8521c2d3d5f31b26d6d1a37fc4b599" prot="public" static="no" mutable="no">
        <type><ref refid="struct_fuel_tank_model_constant_density__t" kindref="compound">FuelTankModelConstantDensity_t</ref></type>
        <definition>FuelTankModelConstantDensity_t FuelTankModelConstantDensity</definition>
        <argsstring></argsstring>
        <name>FuelTankModelConstantDensity</name>
        <briefdescription>
<para>fuel tank variable </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp" line="25" column="32" bodyfile="/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fuel_tank_8cpp_1ad5918fe0cf3d2b077257f2f6a31be3fc" prot="public" static="no" mutable="no">
        <type><ref refid="struct_fuel_tank_model_emptying__t" kindref="compound">FuelTankModelEmptying_t</ref></type>
        <definition>FuelTankModelEmptying_t FuelTankModelEmptying</definition>
        <argsstring></argsstring>
        <name>FuelTankModelEmptying</name>
        <briefdescription>
<para>fuel tank variable </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp" line="26" column="25" bodyfile="/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fuel_tank_8cpp_1a8b3f7c19fdc17507e421218bda4eabf0" prot="public" static="no" mutable="no">
        <type><ref refid="struct_fuel_tank_model_uniform_burn__t" kindref="compound">FuelTankModelUniformBurn_t</ref></type>
        <definition>FuelTankModelUniformBurn_t FuelTankModelUniformBurn</definition>
        <argsstring></argsstring>
        <name>FuelTankModelUniformBurn</name>
        <briefdescription>
<para>fuel tank variable </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp" line="27" column="28" bodyfile="/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fuel_tank_8cpp_1a76f7ef0cfdf7b43df74f7aca493d7585" prot="public" static="no" mutable="no">
        <type><ref refid="struct_fuel_tank_model_centrifugal_burn__t" kindref="compound">FuelTankModelCentrifugalBurn_t</ref></type>
        <definition>FuelTankModelCentrifugalBurn_t FuelTankModelCentrifugalBurn</definition>
        <argsstring></argsstring>
        <name>FuelTankModelCentrifugalBurn</name>
        <briefdescription>
<para>fuel tank variable </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp" line="28" column="32" bodyfile="/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fuel_tank_8cpp_1a41c7dd768250e4ac7def64ab57cd7fbe" prot="public" static="no" mutable="no">
        <type><ref refid="struct_fuel_tank_model" kindref="compound">FuelTankModel</ref> *</type>
        <definition>FuelTankModel* FuelTankModels[TANK_MODEL_LAST_MODEL - TANK_MODEL_FIRST_MODEL]</definition>
        <argsstring>[TANK_MODEL_LAST_MODEL - TANK_MODEL_FIRST_MODEL]</argsstring>
        <name>FuelTankModels</name>
        <initializer>= {
	&amp;FuelTankModelConstantVolume,
	&amp;FuelTankModelConstantDensity,
	&amp;FuelTankModelEmptying,
	&amp;FuelTankModelUniformBurn,
	&amp;FuelTankModelCentrifugalBurn,
}</initializer>
        <briefdescription>
<para>fuel tank variable </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp" line="30" column="15" bodyfile="/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp" bodystart="30" bodyend="36"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fuelTank.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*Able<sp/>to<sp/>be<sp/>accesses<sp/>from<sp/>python,<sp/>used<sp/>to<sp/>set<sp/>up<sp/>fuel<sp/>tank<sp/>model*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="struct_fuel_tank_model_constant_volume__t" kindref="compound">FuelTankModelConstantVolume_t</ref><sp/>FuelTankModelConstantVolume;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="struct_fuel_tank_model_constant_density__t" kindref="compound">FuelTankModelConstantDensity_t</ref><sp/>FuelTankModelConstantDensity;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="struct_fuel_tank_model_emptying__t" kindref="compound">FuelTankModelEmptying_t</ref><sp/>FuelTankModelEmptying;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="struct_fuel_tank_model_uniform_burn__t" kindref="compound">FuelTankModelUniformBurn_t</ref><sp/>FuelTankModelUniformBurn;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="struct_fuel_tank_model_centrifugal_burn__t" kindref="compound">FuelTankModelCentrifugalBurn_t</ref><sp/>FuelTankModelCentrifugalBurn;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="struct_fuel_tank_model" kindref="compound">FuelTankModel</ref>*<sp/>FuelTankModels[TANK_MODEL_LAST_MODEL<sp/>-<sp/>TANK_MODEL_FIRST_MODEL]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;FuelTankModelConstantVolume,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;FuelTankModelConstantDensity,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;FuelTankModelEmptying,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;FuelTankModelUniformBurn,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;FuelTankModelCentrifugalBurn,</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="class_fuel_tank_1a4bfec5f737e567e59a04ac576b6878c9" kindref="member">FuelTank::FuelTank</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_fuel_tank_1a1e002ef28598119d235f04bfd23393b1" kindref="member">updateOnly</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>zero<sp/>the<sp/>contributions<sp/>for<sp/>mass<sp/>props<sp/>and<sp/>mass<sp/>rates&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.mEff<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.IEffPntB_B.setZero();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.rEff_CB_B.setZero();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.rEffPrime_CB_B.setZero();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.IEffPrimePntB_B.setZero();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_fuel_tank_1a374f11b1f9f9d56dac898dc561659d0a" kindref="member">dcm_TB</ref><sp/>=<sp/><ref refid="class_fuel_tank_1a374f11b1f9f9d56dac898dc561659d0a" kindref="member">dcm_TB</ref>.Identity();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_fuel_tank_1a92b3cbb3baa7d7bf3e9680fc50b7706e" kindref="member">r_TB_B</ref>.setZero();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Initialize<sp/>the<sp/>variables<sp/>to<sp/>working<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_fuel_tank_1a48a0b222262a22c957aa86c6f21218b5" kindref="member">nameOfMassState</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fuelTankMass&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(this-&gt;effectorID);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effectorID++;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">uint64_t<sp/>FuelTank::effectorID<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="class_fuel_tank_1a83355206bc3371dd41284355f6f48346" kindref="member">FuelTank::~FuelTank</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effectorID<sp/>=<sp/>1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>the<sp/>panel<sp/>ID*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fuel_tank_1a81fd292a5e9222ab5fc6a938c10ebd95" kindref="member">FuelTank::setTankModel</ref>(FuelTankModelTypes<sp/>model){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>fuelTankModel<sp/>=<sp/>FuelTankModels[model];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fuel_tank_1abecb586393dd13538c80b9b1a75402f4" kindref="member">FuelTank::pushFuelSloshParticle</ref>(FuelSlosh<sp/>*particle)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Add<sp/>a<sp/>fuel<sp/>slosh<sp/>particle<sp/>to<sp/>the<sp/>vector<sp/>of<sp/>fuel<sp/>slosh<sp/>particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_fuel_tank_1a14cd144b8f2b0c713dd73e9f8e3e6114" kindref="member">fuelSloshParticles</ref>.push_back(particle);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fuel_tank_1a38ee1270ce468a773a3d2d4e009d6fc1" kindref="member">FuelTank::linkInStates</ref>(DynParamManager&amp;<sp/>statesIn)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Grab<sp/>access<sp/>to<sp/>the<sp/>hubs<sp/>omega_BN_N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omegaState<sp/>=<sp/>statesIn.getStateObject(</highlight><highlight class="stringliteral">&quot;hubOmega&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fuel_tank_1af8230fbe66aa3cfc22fe12428fdff74f" kindref="member">FuelTank::registerStates</ref>(DynParamManager&amp;<sp/>statesIn)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Register<sp/>the<sp/>mass<sp/>state<sp/>associated<sp/>with<sp/>the<sp/>tank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>massMatrix(1,1);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;massState<sp/>=<sp/>statesIn.registerState(1,<sp/>1,<sp/>this-&gt;<ref refid="class_fuel_tank_1a48a0b222262a22c957aa86c6f21218b5" kindref="member">nameOfMassState</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>massMatrix(0,0)<sp/>=<sp/>this-&gt;fuelTankModel-&gt;<ref refid="struct_fuel_tank_model_1a8818c918b1bbd61ed36f83c0f793e8ef" kindref="member">propMassInit</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;massState-&gt;setState(massMatrix);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fuel_tank_1a892ce2469391c9b8f9016ce2909e105b" kindref="member">FuelTank::updateEffectorMassProps</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Add<sp/>contributions<sp/>of<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>tank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>massLocal<sp/>=<sp/>this-&gt;massState-&gt;getState()(0,<sp/>0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;fuelTankModel-&gt;<ref refid="struct_fuel_tank_model_1a4a130500069929d902786cdaf42857ef" kindref="member">computeTankProps</ref>(massLocal);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;r_TcB_B<sp/>=<sp/><ref refid="class_fuel_tank_1a92b3cbb3baa7d7bf3e9680fc50b7706e" kindref="member">r_TB_B</ref><sp/>+this-&gt;<ref refid="class_fuel_tank_1a374f11b1f9f9d56dac898dc561659d0a" kindref="member">dcm_TB</ref>.transpose()*this-&gt;fuelTankModel-&gt;<ref refid="struct_fuel_tank_model_1a976f4fc9dec3a887ff7c53a67d8a3c67" kindref="member">r_TcT_T</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.mEff<sp/>=<sp/>massLocal;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ITankPntT_B<sp/>=<sp/>this-&gt;<ref refid="class_fuel_tank_1a374f11b1f9f9d56dac898dc561659d0a" kindref="member">dcm_TB</ref>.transpose()*fuelTankModel-&gt;<ref refid="struct_fuel_tank_model_1a7a3b3f3e6135be2a8db99b2111500c84" kindref="member">ITankPntT_T</ref>*this-&gt;<ref refid="class_fuel_tank_1a374f11b1f9f9d56dac898dc561659d0a" kindref="member">dcm_TB</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.IEffPntB_B<sp/>=<sp/>ITankPntT_B+massLocal<sp/>*<sp/>(r_TcB_B.dot(r_TcB_B)*Eigen::Matrix3d::Identity()</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>r_TcB_B<sp/>*<sp/>r_TcB_B.transpose());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.rEff_CB_B<sp/>=<sp/>this-&gt;r_TcB_B;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>This<sp/>does<sp/>not<sp/>incorportate<sp/>mEffDot<sp/>into<sp/>cPrime<sp/>for<sp/>high<sp/>fidelity<sp/>mass<sp/>depletion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.rEffPrime_CB_B<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;fuelConsumption<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DynamicEffector*&gt;::iterator<sp/>dynIt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(dynIt<sp/>=<sp/>this-&gt;<ref refid="class_fuel_tank_1ad8c0d14b72cee4a6998dd8974cf5e83c" kindref="member">dynEffectors</ref>.begin();<sp/>dynIt<sp/>!=<sp/>this-&gt;<ref refid="class_fuel_tank_1ad8c0d14b72cee4a6998dd8974cf5e83c" kindref="member">dynEffectors</ref>.end();<sp/>dynIt++)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*dynIt)-&gt;computeStateContribution(integTime);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;fuelConsumption<sp/>+=<sp/>(*dynIt)-&gt;stateDerivContribution(0);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;StateEffector*&gt;::iterator<sp/>stateIt;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(stateIt<sp/>=<sp/>this-&gt;<ref refid="class_fuel_tank_1a0f220b34b394b311857339c6d2b5e69f" kindref="member">stateEffectors</ref>.begin();<sp/>stateIt<sp/>!=<sp/>this-&gt;<ref refid="class_fuel_tank_1a0f220b34b394b311857339c6d2b5e69f" kindref="member">stateEffectors</ref>.end();<sp/>stateIt++)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*stateIt)-&gt;updateEffectorMassProps(integTime);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;fuelConsumption<sp/>+=<sp/>(*stateIt)-&gt;stateDerivContribution(0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;FuelSlosh*&gt;::iterator<sp/>fuelSloshInt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Mass<sp/>depletion<sp/>(finding<sp/>total<sp/>mass<sp/>in<sp/>tank)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalMass<sp/>=<sp/>massLocal;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fuelSloshInt<sp/>=<sp/>this-&gt;<ref refid="class_fuel_tank_1a14cd144b8f2b0c713dd73e9f8e3e6114" kindref="member">fuelSloshParticles</ref>.begin();<sp/>fuelSloshInt<sp/>&lt;<sp/>this-&gt;<ref refid="class_fuel_tank_1a14cd144b8f2b0c713dd73e9f8e3e6114" kindref="member">fuelSloshParticles</ref>.end();<sp/>fuelSloshInt++)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Retrieve<sp/>current<sp/>mass<sp/>value<sp/>of<sp/>fuelSlosh<sp/>particle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*fuelSloshInt)-&gt;retrieveMassValue(integTime);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Add<sp/>fuelSlosh<sp/>mass<sp/>to<sp/>total<sp/>mass<sp/>of<sp/>tank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalMass<sp/>+=<sp/>(*fuelSloshInt)-&gt;fuelMass;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>mass<sp/>depletion<sp/>rate<sp/>of<sp/>fuelSloshParticles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fuelSloshInt<sp/>=<sp/>this-&gt;<ref refid="class_fuel_tank_1a14cd144b8f2b0c713dd73e9f8e3e6114" kindref="member">fuelSloshParticles</ref>.begin();<sp/>fuelSloshInt<sp/>&lt;<sp/>this-&gt;<ref refid="class_fuel_tank_1a14cd144b8f2b0c713dd73e9f8e3e6114" kindref="member">fuelSloshParticles</ref>.end();<sp/>fuelSloshInt++)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>fuelSlosh<sp/>particle<sp/>mass<sp/>to<sp/>fuel<sp/>tank<sp/>mass<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*fuelSloshInt)-&gt;massToTotalTankMassRatio<sp/>=<sp/>(*fuelSloshInt)-&gt;fuelMass/totalMass;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Scale<sp/>total<sp/>fuelConsumption<sp/>by<sp/>mass<sp/>ratio<sp/>to<sp/>find<sp/>fuelSloshParticle<sp/>mass<sp/>depletion<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*fuelSloshInt)-&gt;fuelMassDot<sp/>=<sp/>(*fuelSloshInt)-&gt;massToTotalTankMassRatio*(-this-&gt;fuelConsumption);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>fuel<sp/>consumption<sp/>rate<sp/>of<sp/>fuelTank<sp/>(not<sp/>negative<sp/>because<sp/>the<sp/>negative<sp/>sign<sp/>is<sp/>in<sp/>the<sp/>computeDerivatives<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;tankFuelConsumption<sp/>=<sp/>massLocal/totalMass*(this-&gt;fuelConsumption);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.mEffDot<sp/>=<sp/>-this-&gt;fuelConsumption;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fuel_tank_1aa174782290b6230ff6dfd82884582d83" kindref="member">FuelTank::updateContributions</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime,<sp/>BackSubMatrices<sp/>&amp;<sp/>backSubContr,<sp/>Eigen::Vector3d<sp/>sigma_BN,<sp/>Eigen::Vector3d<sp/>omega_BN_B,<sp/>Eigen::Vector3d<sp/>g_N)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_TB_BLocal,<sp/>rPrime_TB_BLocal,<sp/>rPPrime_TB_BLocal;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omega_BN_BLocal;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Zero<sp/>some<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.matrixA<sp/>=<sp/>backSubContr.matrixB<sp/>=<sp/>backSubContr.matrixC<sp/>=<sp/>backSubContr.matrixD<sp/>=<sp/>Eigen::Matrix3d::Zero();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.vecTrans<sp/>=<sp/>backSubContr.vecRot<sp/>=<sp/>Eigen::Vector3d::Zero();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>fuel<sp/>consumption<sp/>properties<sp/>for<sp/>the<sp/>tank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>tankFuelConsumption<sp/>=<sp/>fuelConsumption*massState-&gt;getState()(0,<sp/>0)<sp/>/<sp/>effProps.mEff;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>fuelTankModel-&gt;<ref refid="struct_fuel_tank_model_1a1cf071ba79dbe70073dcdbe5f414b393" kindref="member">computeTankPropDerivs</ref>(massState-&gt;getState()(0,<sp/>0),<sp/>-tankFuelConsumption);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>r_TB_BLocal<sp/>=<sp/>fuelTankModel-&gt;<ref refid="struct_fuel_tank_model_1a976f4fc9dec3a887ff7c53a67d8a3c67" kindref="member">r_TcT_T</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>rPrime_TB_BLocal<sp/>=<sp/>fuelTankModel-&gt;<ref refid="struct_fuel_tank_model_1a1ba2401f63b26112b76caec1803dbfd5" kindref="member">rPrime_TcT_T</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>rPPrime_TB_BLocal<sp/>=<sp/>fuelTankModel-&gt;<ref refid="struct_fuel_tank_model_1a9fe2268c73ed2350757ac0eff926fd23" kindref="member">rPPrime_TcT_T</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>omega_BN_BLocal<sp/>=<sp/>omegaState-&gt;getState();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_fuel_tank_1a1e002ef28598119d235f04bfd23393b1" kindref="member">updateOnly</ref>)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backSubContr.vecRot<sp/>=<sp/>-massState-&gt;getState()(0,<sp/>0)<sp/>*<sp/>r_TB_BLocal.cross(rPPrime_TB_BLocal)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>massState-&gt;getState()(0,<sp/>0)*omega_BN_BLocal.cross(r_TB_BLocal.cross(rPrime_TB_BLocal))</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>massState-&gt;getStateDeriv()(0,<sp/>0)*r_TB_BLocal.cross(rPrime_TB_BLocal);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backSubContr.vecRot<sp/>-=<sp/>fuelTankModel-&gt;<ref refid="struct_fuel_tank_model_1aa24ffb1be34a6774b6fdf1281acade51" kindref="member">IPrimeTankPntT_T</ref><sp/>*<sp/>omega_BN_BLocal;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fuel_tank_1a0c52e8a3233ef3791a022fa9b026da3e" kindref="member">FuelTank::computeDerivatives</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime,<sp/>Eigen::Vector3d<sp/>rDDot_BN_N,<sp/>Eigen::Vector3d<sp/>omegaDot_BN_B,<sp/>Eigen::Vector3d<sp/>sigma_BN)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Call<sp/>compute<sp/>derivatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>conv(1,<sp/>1);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>conv(0,<sp/>0)<sp/>=<sp/>-this-&gt;tankFuelConsumption;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;massState-&gt;setDerivative(conv);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fuel_tank_1a7224db83104f6dec425ce2f2fe089840" kindref="member">FuelTank::updateEnergyMomContributions</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime,<sp/>Eigen::Vector3d<sp/>&amp;<sp/>rotAngMomPntCContr_B,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>rotEnergyContr,<sp/>Eigen::Vector3d<sp/>omega_BN_B)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>variables<sp/>needed<sp/>for<sp/>energy<sp/>momentum<sp/>calcs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaLocal_BN_B;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>omegaLocal_BN_B<sp/>=<sp/>omegaState-&gt;getState();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDot_TcB_B;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>rotational<sp/>angular<sp/>momentum<sp/>contribution<sp/>from<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>massLocal<sp/>=<sp/>this-&gt;massState-&gt;getState()(0,<sp/>0);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>rDot_TcB_B<sp/>=<sp/>omegaLocal_BN_B.cross(r_TcB_B);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>rotAngMomPntCContr_B<sp/>+=<sp/>ITankPntT_B*omegaLocal_BN_B<sp/>+<sp/>massLocal*r_TcB_B.cross(rDot_TcB_B);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>rotational<sp/>energy<sp/>contribution<sp/>from<sp/>the<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>rotEnergyContr<sp/>+=<sp/>1.0/2.0*omegaLocal_BN_B.dot(ITankPntT_B*omegaLocal_BN_B)<sp/>+<sp/>1.0/2.0*massLocal*</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rDot_TcB_B.dot(rDot_TcB_B);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fuel_tank_1a101e60cd01d1f51e5bd705e7646a5f38" kindref="member">FuelTank::WriteOutputMessages</ref>(uint64_t<sp/>CurrentClock)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_fuel_tank_1a4ba35c6fd7d1d96c00eca65aba13f7c8" kindref="member">fuelTankMassPropMsg</ref><sp/>=<sp/>this-&gt;<ref refid="class_fuel_tank_1a12f6672d8be27ff123582a13538c1bac" kindref="member">fuelTankOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_fuel_tank_1a4ba35c6fd7d1d96c00eca65aba13f7c8" kindref="member">fuelTankMassPropMsg</ref>.fuelMass<sp/>=<sp/>this-&gt;effProps.mEff;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_fuel_tank_1a4ba35c6fd7d1d96c00eca65aba13f7c8" kindref="member">fuelTankMassPropMsg</ref>.fuelMassDot<sp/>=<sp/>this-&gt;effProps.mEffDot;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_fuel_tank_1a4ba35c6fd7d1d96c00eca65aba13f7c8" kindref="member">fuelTankMassPropMsg</ref>.maxFuelMass<sp/>=<sp/>this-&gt;fuelTankModel-&gt;<ref refid="struct_fuel_tank_model_1ad4a05de61e1fb3c006d38b9b6ae7c0ba" kindref="member">maxFuelMass</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_fuel_tank_1a12f6672d8be27ff123582a13538c1bac" kindref="member">fuelTankOutMsg</ref>.write(&amp;this-&gt;<ref refid="class_fuel_tank_1a4ba35c6fd7d1d96c00eca65aba13f7c8" kindref="member">fuelTankMassPropMsg</ref>,<sp/>this-&gt;moduleID,<sp/>CurrentClock);</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fuel_tank_1a7626aa8dc00c5c14e270f2e90cf668f8" kindref="member">FuelTank::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Writing<sp/>the<sp/>fuel<sp/>tank<sp/>mass<sp/>property<sp/>message<sp/>out<sp/>to<sp/>the<sp/>messaging<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fuel_tank_1a101e60cd01d1f51e5bd705e7646a5f38" kindref="member">WriteOutputMessages</ref>(CurrentSimNanos);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/FuelTank/fuelTank.cpp"/>
  </compounddef>
</doxygen>
