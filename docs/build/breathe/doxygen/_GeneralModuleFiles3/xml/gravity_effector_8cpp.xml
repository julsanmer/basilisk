<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="gravity_effector_8cpp" kind="file" language="C++">
    <compoundname>gravityEffector.cpp</compoundname>
    <includes refid="gravity_effector_8h" local="yes">gravityEffector.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="yes">architecture/utilities/avsEigenMRP.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="5">
        <label>dynParamManager.h</label>
        <link refid="dyn_param_manager_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>dynamicEffector.h</label>
        <link refid="dynamic_effector_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/dynamics/_GeneralModuleFiles/gravityEffector.cpp</label>
        <link refid="gravity_effector_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gravityEffector.h</label>
        <link refid="gravity_effector_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stateData.h</label>
        <link refid="state_data_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Eigen/Dense</label>
      </node>
      <node id="11">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="13">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="12">
        <label>architecture/msgPayloadDefC/SpicePlanetStateMsgPayload.h</label>
      </node>
      <node id="15">
        <label>architecture/utilities/avsEigenMRP.h</label>
      </node>
      <node id="10">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="16">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="14">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="17">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gravityEffector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenMRP.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">Mascon::Mascon()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">Mascon::~Mascon()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_mascon_1a50c6d6b66cf74635aa8c2122045556df" kindref="member">Mascon::initializeParameters</ref>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>paramsDone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_mascon_1a0d4fc2433780b65b56cef70a920f0e79" kindref="member">muM</ref>.size()<sp/>==<sp/>0<sp/>||<sp/>this-&gt;xyzM.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paramsDone;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_mascon_1a6ab1d300d4c029bf812e37a0fe74bc99" kindref="member">nM</ref><sp/>=<sp/>int(this-&gt;<ref refid="class_mascon_1a0d4fc2433780b65b56cef70a920f0e79" kindref="member">muM</ref>.size());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>paramsDone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paramsDone;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">Eigen::Vector3d<sp/><ref refid="class_mascon_1a2edc1720c7a2c4374f547f204228a828" kindref="member">Mascon::computeField</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/>pos_Pfix)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>acceleration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>acc;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>acc.setZero(3);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Declare<sp/>relative<sp/>position<sp/>between<sp/>kth<sp/>mass</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>and<sp/>evaluation<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>dr_k;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>through<sp/>masses<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>this-&gt;<ref refid="class_mascon_1a6ab1d300d4c029bf812e37a0fe74bc99" kindref="member">nM</ref>;<sp/>k++)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>relative<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dr_k<sp/>=<sp/>pos_Pfix<sp/>-<sp/>this-&gt;<ref refid="class_mascon_1a9714eb0b0fade142d08d17eafac4a81f" kindref="member">xyzM</ref>.row(k).transpose();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>kth<sp/>mass<sp/>contribution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>-this-&gt;<ref refid="class_mascon_1a0d4fc2433780b65b56cef70a920f0e79" kindref="member">muM</ref>(k)<sp/>*<sp/>dr_k/pow(dr_k.norm(),3);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_mascon_1adcbe4f0061f71c512b25f33dfa06dfe2" kindref="member">Mascon::masconReady</ref>()</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>masconGood<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>masconGood<sp/>=<sp/>masconGood<sp/>&amp;&amp;<sp/>this-&gt;<ref refid="class_mascon_1a9714eb0b0fade142d08d17eafac4a81f" kindref="member">xyzM</ref>.size()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>masconGood<sp/>=<sp/>masconGood<sp/>&amp;&amp;<sp/>this-&gt;<ref refid="class_mascon_1a0d4fc2433780b65b56cef70a920f0e79" kindref="member">muM</ref>.size()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>masconGood;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">Polyhedral::Polyhedral()</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_polyhedral_1a6e04a3cc2dcda15995fec5831da45b6a" kindref="member">volPoly</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_polyhedral_1a3108e142ed54ac6fd004762d14f98012" kindref="member">muBody</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">Polyhedral::~Polyhedral()</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polyhedral_1ab6cce421340203b8dd6d768ba1c99140" kindref="member">Polyhedral::initializeParameters</ref>()</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>paramsDone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_polyhedral_1a65b1d0554bb77fc48f0876c65b8cb2a6" kindref="member">xyzVertex</ref>.size()<sp/>==<sp/>0<sp/>||<sp/><ref refid="class_polyhedral_1a21d4e2892a48fd421991e12de55bd036" kindref="member">orderFacet</ref>.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paramsDone;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>xyz1,<sp/>xyz2,<sp/>xyz3,<sp/>e21,<sp/>e32;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3i<sp/>v;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>normal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_polyhedral_1ae7e84caebbe72185888f80e673ddcd5d" kindref="member">normalFacet</ref>.setZero(this-&gt;<ref refid="class_polyhedral_1aae28b1844a9a8a7a5473718cc24193b3" kindref="member">nFacet</ref>,3);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;xyzFacet.setZero(this-&gt;<ref refid="class_polyhedral_1aae28b1844a9a8a7a5473718cc24193b3" kindref="member">nFacet</ref>,3);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>through<sp/>each<sp/>facet<sp/>to<sp/>compute<sp/>volume<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>this-&gt;<ref refid="class_polyhedral_1aae28b1844a9a8a7a5473718cc24193b3" kindref="member">nFacet</ref>;<sp/>m++)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>auxiliary<sp/>variables<sp/>with<sp/>vertex<sp/>order<sp/>on<sp/>each<sp/>facet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="class_polyhedral_1a21d4e2892a48fd421991e12de55bd036" kindref="member">orderFacet</ref>.row(m);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>v[0]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>v[1]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>v[2]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xyz1<sp/>=<sp/><ref refid="class_polyhedral_1a65b1d0554bb77fc48f0876c65b8cb2a6" kindref="member">xyzVertex</ref>.row(i);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xyz2<sp/>=<sp/><ref refid="class_polyhedral_1a65b1d0554bb77fc48f0876c65b8cb2a6" kindref="member">xyzVertex</ref>.row(j);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xyz3<sp/>=<sp/><ref refid="class_polyhedral_1a65b1d0554bb77fc48f0876c65b8cb2a6" kindref="member">xyzVertex</ref>.row(k);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>two<sp/>edge<sp/>vectors<sp/>and<sp/>normal<sp/>to<sp/>facet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e21<sp/>=<sp/>xyz2<sp/>-<sp/>xyz1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e32<sp/>=<sp/>xyz3<sp/>-<sp/>xyz2;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_polyhedral_1ae7e84caebbe72185888f80e673ddcd5d" kindref="member">normalFacet</ref>.row(m)<sp/>=<sp/>e21.cross(e32)<sp/>/<sp/>e21.cross(e32).norm();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;xyzFacet.row(m)<sp/>=<sp/>(xyz3<sp/>+<sp/>xyz2<sp/>+<sp/>xyz1)<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>volume<sp/>contribution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_polyhedral_1a6e04a3cc2dcda15995fec5831da45b6a" kindref="member">volPoly</ref><sp/>+=<sp/>abs(xyz1.cross(xyz2).transpose()*xyz3)/6;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>paramsDone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paramsDone;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">Eigen::Vector3d<sp/><ref refid="class_polyhedral_1ace897841f09a77b03776a381f544fda7" kindref="member">Polyhedral::computeField</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/>pos_Pfix)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3i<sp/>v;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>ri,<sp/>rj,<sp/>rk;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>nf;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r1,<sp/>r2,<sp/>re;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r21,<sp/>n21;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>Ee;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_min;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/>b,<sp/>e,<sp/>Le;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wy,<sp/>wx,<sp/>wf;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>dUe,<sp/>dUf,<sp/>acc;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>dUe.setZero(3);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>dUf.setZero(3);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>through<sp/>each<sp/>facet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>this-&gt;<ref refid="class_polyhedral_1aae28b1844a9a8a7a5473718cc24193b3" kindref="member">nFacet</ref>;<sp/>m++){</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>auxiliary<sp/>variables<sp/>with<sp/>vertex<sp/>order<sp/>on<sp/>each<sp/>facet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="class_polyhedral_1a21d4e2892a48fd421991e12de55bd036" kindref="member">orderFacet</ref>.row(m);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>v[0]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>v[1]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>v[2]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>vectors<sp/>and<sp/>norm<sp/>from<sp/>each<sp/>vertex<sp/>to<sp/>the<sp/>evaluation<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ri<sp/>=<sp/><ref refid="class_polyhedral_1a65b1d0554bb77fc48f0876c65b8cb2a6" kindref="member">xyzVertex</ref>.row(i).transpose()<sp/>-<sp/>pos_Pfix;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rj<sp/>=<sp/><ref refid="class_polyhedral_1a65b1d0554bb77fc48f0876c65b8cb2a6" kindref="member">xyzVertex</ref>.row(j).transpose()<sp/>-<sp/>pos_Pfix;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rk<sp/>=<sp/><ref refid="class_polyhedral_1a65b1d0554bb77fc48f0876c65b8cb2a6" kindref="member">xyzVertex</ref>.row(k).transpose()<sp/>-<sp/>pos_Pfix;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Extract<sp/>normal<sp/>to<sp/>facet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nf<sp/>=<sp/>this-&gt;<ref refid="class_polyhedral_1ae7e84caebbe72185888f80e673ddcd5d" kindref="member">normalFacet</ref>.row(m).transpose();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>through<sp/>each<sp/>facet<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;=<sp/>2;<sp/>n++){</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(n){</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_min<sp/>=<sp/>fmin(i,j);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1<sp/>=<sp/>ri;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2<sp/>=<sp/>rj;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>re<sp/>=<sp/><ref refid="class_polyhedral_1a65b1d0554bb77fc48f0876c65b8cb2a6" kindref="member">xyzVertex</ref>.row(idx_min).transpose()<sp/>-<sp/>pos_Pfix;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>ri.norm();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>rj.norm();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_min<sp/>=<sp/>fmin(j,k);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1<sp/>=<sp/>rj;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2<sp/>=<sp/>rk;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>re<sp/>=<sp/><ref refid="class_polyhedral_1a65b1d0554bb77fc48f0876c65b8cb2a6" kindref="member">xyzVertex</ref>.row(idx_min).transpose()<sp/>-<sp/>pos_Pfix;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>rj.norm();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>rk.norm();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_min<sp/>=<sp/>fmin(i,k);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1<sp/>=<sp/>rk;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2<sp/>=<sp/>ri;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>re<sp/>=<sp/><ref refid="class_polyhedral_1a65b1d0554bb77fc48f0876c65b8cb2a6" kindref="member">xyzVertex</ref>.row(idx_min).transpose()<sp/>-<sp/>pos_Pfix;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>rk.norm();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>ri.norm();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>along<sp/>edge<sp/>vector<sp/>and<sp/>norm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r21<sp/>=<sp/>r2<sp/>-<sp/>r1;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>r21.norm();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n21<sp/>=<sp/>r21.cross(nf)<sp/>/<sp/>r21.cross(nf).norm();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Dimensionless<sp/>per<sp/>edge<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Le<sp/>=<sp/>log((a+b+e)<sp/>/<sp/>(a+b-e));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>dyad<sp/>product<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ee<sp/>=<sp/>nf*n21.transpose();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>current<sp/>facet<sp/>distribution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dUe<sp/>+=<sp/>Ee*re*Le;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>solid<sp/>angle<sp/>for<sp/>the<sp/>current<sp/>facet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wy<sp/>=<sp/>ri.transpose()*rj.cross(rk);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wx<sp/>=<sp/>ri.norm()*rj.norm()*rk.norm()<sp/>+<sp/>ri.norm()*rj.transpose()*rk</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>rj.norm()*rk.transpose()*ri<sp/>+<sp/>rk.norm()*ri.transpose()*rj;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wf<sp/>=<sp/>2*atan2(wy,<sp/>wx);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>current<sp/>solid<sp/>angle<sp/>facet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dUf<sp/>+=<sp/>nf*(nf.transpose()*ri)*wf;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>acceleration<sp/>contribution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>=<sp/>(this-&gt;<ref refid="class_polyhedral_1a3108e142ed54ac6fd004762d14f98012" kindref="member">muBody</ref>/this-&gt;<ref refid="class_polyhedral_1a6e04a3cc2dcda15995fec5831da45b6a" kindref="member">volPoly</ref>)*(-dUe<sp/>+<sp/>dUf);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polyhedral_1accd02bd0ab2177a984cdda23c770bdac" kindref="member">Polyhedral::polyReady</ref>()</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>polyGood<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>polyGood<sp/>=<sp/>polyGood<sp/>&amp;&amp;<sp/><ref refid="class_polyhedral_1a65b1d0554bb77fc48f0876c65b8cb2a6" kindref="member">xyzVertex</ref>.size()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>polyGood<sp/>=<sp/>polyGood<sp/>&amp;&amp;<sp/><ref refid="class_polyhedral_1a21d4e2892a48fd421991e12de55bd036" kindref="member">orderFacet</ref>.size()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>polyGood;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">SphericalHarmonics::SphericalHarmonics()</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spherical_harmonics_1a26468441214c23b2ae5a9b4994740416" kindref="member">radEquator</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spherical_harmonics_1a646f0282fe46db6bc37ade737633ebb8" kindref="member">maxDeg</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_spherical_harmonics_1abfdb05198530bf6e22f1e6cd0a25dfd9" kindref="member">muBody</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">SphericalHarmonics::~SphericalHarmonics()</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="278"><highlight class="comment">@brief<sp/>Computes<sp/>the<sp/>term<sp/>(2<sp/>-<sp/>d_l),<sp/>where<sp/>d_l<sp/>is<sp/>the<sp/>kronecker<sp/>delta.</highlight></codeline>
<codeline lineno="279"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_spherical_harmonics_1a6b4265e66fa601447a44fdbef6f542a7" kindref="member">SphericalHarmonics::getK</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>degree)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((degree<sp/>==<sp/>0)<sp/>?<sp/>1.0<sp/>:<sp/>2.0);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_spherical_harmonics_1aecd56b2cc0e882b87b06177c7d031483" kindref="member">SphericalHarmonics::initializeParameters</ref>()</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>paramsDone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_spherical_harmonics_1aa6325f9101a15dd362f70211f1e07b69" kindref="member">cBar</ref>.size()<sp/>==<sp/>0<sp/>||<sp/><ref refid="class_spherical_harmonics_1a125b9dd1de227f7eda1b975c2a0542a5" kindref="member">sBar</ref>.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paramsDone;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>this-&gt;<ref refid="class_spherical_harmonics_1a646f0282fe46db6bc37ade737633ebb8" kindref="member">maxDeg</ref><sp/>+<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>aRow,<sp/>n1Row,<sp/>n2Row;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aRow.resize(i+1,<sp/>0.0);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Diagonal<sp/>elements<sp/>of<sp/>A_bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aRow[i]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aRow[i]<sp/>=<sp/>sqrt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">((2*i+1)*<ref refid="class_spherical_harmonics_1a6b4265e66fa601447a44fdbef6f542a7" kindref="member">getK</ref>(i))/(2*i*<ref refid="class_spherical_harmonics_1a6b4265e66fa601447a44fdbef6f542a7" kindref="member">getK</ref>(i-1)))<sp/>*<sp/><ref refid="class_spherical_harmonics_1afca7ea5ca70437df721a892897450150" kindref="member">aBar</ref>[i-1][i-1];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1Row.resize(i+1,<sp/>0.0);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2Row.resize(i+1,<sp/>0.0);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;=<sp/>i;<sp/>m++)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>m<sp/>+<sp/>2)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1Row[m]<sp/>=<sp/>sqrt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">((2*i+1)*(2*i-1))/((i-m)*(i+m)));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2Row[m]<sp/>=<sp/>sqrt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">((i+m-1)*(2*i+1)*(i-m-1))/((i+m)*(i-m)*(2*i-3)));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spherical_harmonics_1a436f11a8cd133690913fefc17770d8bc" kindref="member">n1</ref>.push_back(n1Row);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spherical_harmonics_1ae57836afd57690636f0b93a442eb530c" kindref="member">n2</ref>.push_back(n2Row);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spherical_harmonics_1afca7ea5ca70437df721a892897450150" kindref="member">aBar</ref>.push_back(aRow);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;=<sp/>this-&gt;<ref refid="class_spherical_harmonics_1a646f0282fe46db6bc37ade737633ebb8" kindref="member">maxDeg</ref>;<sp/>l++)<sp/></highlight><highlight class="comment">//<sp/>up<sp/>to<sp/>_maxDegree-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>nq1Row,<sp/>nq2Row;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nq1Row.resize(l+1,<sp/>0.0);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nq2Row.resize(l+1,<sp/>0.0);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;=<sp/>l;<sp/>m++)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&lt;<sp/>l)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nq1Row[m]<sp/>=<sp/>sqrt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">((l-m)*<ref refid="class_spherical_harmonics_1a6b4265e66fa601447a44fdbef6f542a7" kindref="member">getK</ref>(m)*(l+m+1))/<ref refid="class_spherical_harmonics_1a6b4265e66fa601447a44fdbef6f542a7" kindref="member">getK</ref>(m+1));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nq2Row[m]<sp/>=<sp/>sqrt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">((l+m+2)*(l+m+1)*(2*l+1)*<ref refid="class_spherical_harmonics_1a6b4265e66fa601447a44fdbef6f542a7" kindref="member">getK</ref>(m))/((2*l+3)*<ref refid="class_spherical_harmonics_1a6b4265e66fa601447a44fdbef6f542a7" kindref="member">getK</ref>(m+1)));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spherical_harmonics_1adbfe2f25abd75e908b5bf9407bb226eb" kindref="member">nQuot1</ref>.push_back(nq1Row);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spherical_harmonics_1aab2d80f2f2d0431db679e356880514a5" kindref="member">nQuot2</ref>.push_back(nq2Row);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>paramsDone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paramsDone;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">Eigen::Vector3d<sp/><ref refid="class_spherical_harmonics_1a57f00983833903461457986745a025cd" kindref="member">SphericalHarmonics::computeField</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/>pos_Pfix,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>degree,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_zero_degree)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>pos_Pfix[0];</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>pos_Pfix[1];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>pos_Pfix[2];</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/>s,<sp/>t,<sp/>u;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>order;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>sum_a1,<sp/>sum_a2,<sp/>sum_a3,<sp/>sum_a4;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>rE,<sp/>iM,<sp/>rhol;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>acc;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>acc.fill(0.0);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>of<sp/>variables:<sp/>direction<sp/>cosines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>sqrt(x*x<sp/>+<sp/>y*y<sp/>+<sp/>z*z);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>x/r;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>y/r;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>z/r;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>degree!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(degree<sp/>&gt;<sp/>this-&gt;<ref refid="class_spherical_harmonics_1a646f0282fe46db6bc37ade737633ebb8" kindref="member">maxDeg</ref>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>degree<sp/>=<sp/>this-&gt;<ref refid="class_spherical_harmonics_1a646f0282fe46db6bc37ade737633ebb8" kindref="member">maxDeg</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>order<sp/>=<sp/>degree;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>1;<sp/>l<sp/>&lt;=<sp/>degree+1;<sp/>l++)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Diagonal<sp/>terms<sp/>are<sp/>computed<sp/>in<sp/>initialize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Low<sp/>diagonal<sp/>terms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spherical_harmonics_1afca7ea5ca70437df721a892897450150" kindref="member">aBar</ref>[l][l-1]<sp/>=<sp/>sqrt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">((2*l)*<ref refid="class_spherical_harmonics_1a6b4265e66fa601447a44fdbef6f542a7" kindref="member">getK</ref>(l-1))/<ref refid="class_spherical_harmonics_1a6b4265e66fa601447a44fdbef6f542a7" kindref="member">getK</ref>(l))<sp/>*<sp/><ref refid="class_spherical_harmonics_1afca7ea5ca70437df721a892897450150" kindref="member">aBar</ref>[l][l]<sp/>*<sp/>u;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lower<sp/>terms<sp/>of<sp/>A_bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;=<sp/>order+1;<sp/>m++)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>m<sp/>+<sp/>2;<sp/>l<sp/>&lt;=<sp/>degree+1;<sp/>l++)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spherical_harmonics_1afca7ea5ca70437df721a892897450150" kindref="member">aBar</ref>[l][m]<sp/>=<sp/>u<sp/>*<sp/><ref refid="class_spherical_harmonics_1a436f11a8cd133690913fefc17770d8bc" kindref="member">n1</ref>[l][m]<sp/>*<sp/><ref refid="class_spherical_harmonics_1afca7ea5ca70437df721a892897450150" kindref="member">aBar</ref>[l-1][m]<sp/>-<sp/><ref refid="class_spherical_harmonics_1ae57836afd57690636f0b93a442eb530c" kindref="member">n2</ref>[l][m]<sp/>*<sp/><ref refid="class_spherical_harmonics_1afca7ea5ca70437df721a892897450150" kindref="member">aBar</ref>[l-2][m];</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Computation<sp/>of<sp/>real<sp/>and<sp/>imaginary<sp/>parts<sp/>of<sp/>(2+j*t)^m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rE.push_back(1.0);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iM.push_back(0.0);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rE.push_back(s<sp/>*<sp/>rE[m-1]<sp/>-<sp/>t<sp/>*<sp/>iM[m-1]);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iM.push_back(s<sp/>*<sp/>iM[m-1]<sp/>+<sp/>t<sp/>*<sp/>rE[m-1]);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>rho<sp/>=<sp/><ref refid="class_spherical_harmonics_1a26468441214c23b2ae5a9b4994740416" kindref="member">radEquator</ref>/r;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>rhol.resize(degree+2,<sp/>0.0);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>rhol[0]<sp/>=<sp/><ref refid="class_spherical_harmonics_1abfdb05198530bf6e22f1e6cd0a25dfd9" kindref="member">muBody</ref>/r;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>rhol[1]<sp/>=<sp/>rhol[0]*rho;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Degree<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gravity<sp/>field<sp/>and<sp/>potential<sp/>of<sp/>degree<sp/>l<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gravity<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>a1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>a2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>a3<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>a4<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(include_zero_degree<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a4<sp/>=<sp/>-rhol[1]/<ref refid="class_spherical_harmonics_1a26468441214c23b2ae5a9b4994740416" kindref="member">radEquator</ref>;<sp/></highlight><highlight class="comment">//<sp/>*<sp/>this-&gt;_Nquot_2[0][0]<sp/>*<sp/>this-&gt;_A_bar[1][1];<sp/>//This<sp/>is<sp/>1,<sp/>so<sp/>it&apos;s<sp/>not<sp/>included!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>1;<sp/>l<sp/>&lt;=<sp/>degree;<sp/>l++)<sp/></highlight><highlight class="comment">//<sp/>does<sp/>not<sp/>include<sp/>l<sp/>=<sp/>maxDegree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhol[l+1]<sp/>=<sp/><sp/>rho<sp/>*<sp/>rhol[l];<sp/></highlight><highlight class="comment">//<sp/>rho_l<sp/>computed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_a1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_a2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_a3<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_a4<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;=<sp/>l;<sp/>m++)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>D,<sp/>E,<sp/>F;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>=<sp/><ref refid="class_spherical_harmonics_1aa6325f9101a15dd362f70211f1e07b69" kindref="member">cBar</ref>[l][m]<sp/>*<sp/>rE[m]<sp/>+<sp/><ref refid="class_spherical_harmonics_1a125b9dd1de227f7eda1b975c2a0542a5" kindref="member">sBar</ref>[l][m]<sp/>*<sp/>iM[m];</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E<sp/>=<sp/><ref refid="class_spherical_harmonics_1aa6325f9101a15dd362f70211f1e07b69" kindref="member">cBar</ref>[l][m]<sp/>*<sp/>rE[m-1]<sp/>+<sp/><ref refid="class_spherical_harmonics_1a125b9dd1de227f7eda1b975c2a0542a5" kindref="member">sBar</ref>[l][m]<sp/>*<sp/>iM[m-1];</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/>=<sp/><ref refid="class_spherical_harmonics_1a125b9dd1de227f7eda1b975c2a0542a5" kindref="member">sBar</ref>[l][m]<sp/>*<sp/>rE[m-1]<sp/>-<sp/><ref refid="class_spherical_harmonics_1aa6325f9101a15dd362f70211f1e07b69" kindref="member">cBar</ref>[l][m]<sp/>*<sp/>iM[m-1];</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(l<sp/>&lt;<sp/>degree)<sp/><sp/><sp/>//<sp/>Gravity<sp/>contains<sp/>up<sp/>to<sp/>max_degree-1<sp/>harmonics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_a1<sp/>=<sp/>sum_a1<sp/>+<sp/>m<sp/>*<sp/><ref refid="class_spherical_harmonics_1afca7ea5ca70437df721a892897450150" kindref="member">aBar</ref>[l][m]<sp/>*<sp/>E;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_a2<sp/>=<sp/>sum_a2<sp/>+<sp/>m<sp/>*<sp/><ref refid="class_spherical_harmonics_1afca7ea5ca70437df721a892897450150" kindref="member">aBar</ref>[l][m]<sp/>*<sp/>F;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&lt;<sp/>l)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_a3<sp/>=<sp/>sum_a3<sp/>+<sp/><ref refid="class_spherical_harmonics_1adbfe2f25abd75e908b5bf9407bb226eb" kindref="member">nQuot1</ref>[l][m]<sp/>*<sp/><ref refid="class_spherical_harmonics_1afca7ea5ca70437df721a892897450150" kindref="member">aBar</ref>[l][m+1]<sp/>*<sp/>D;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_a4<sp/>=<sp/>sum_a4<sp/>+<sp/><ref refid="class_spherical_harmonics_1aab2d80f2f2d0431db679e356880514a5" kindref="member">nQuot2</ref>[l][m]<sp/>*<sp/><ref refid="class_spherical_harmonics_1afca7ea5ca70437df721a892897450150" kindref="member">aBar</ref>[l+1][m+1]<sp/>*<sp/>D;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(l<sp/>&lt;<sp/>degree)<sp/><sp/><sp/>//<sp/>Gravity<sp/>contains<sp/>up<sp/>to<sp/>max_degree-1<sp/>harmonics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a1<sp/>=<sp/>a1<sp/>+<sp/>rhol[l+1]/<ref refid="class_spherical_harmonics_1a26468441214c23b2ae5a9b4994740416" kindref="member">radEquator</ref><sp/>*<sp/>sum_a1;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2<sp/>=<sp/>a2<sp/>+<sp/>rhol[l+1]/<ref refid="class_spherical_harmonics_1a26468441214c23b2ae5a9b4994740416" kindref="member">radEquator</ref><sp/>*<sp/>sum_a2;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a3<sp/>=<sp/>a3<sp/>+<sp/>rhol[l+1]/<ref refid="class_spherical_harmonics_1a26468441214c23b2ae5a9b4994740416" kindref="member">radEquator</ref><sp/>*<sp/>sum_a3;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a4<sp/>=<sp/>a4<sp/>-<sp/>rhol[l+1]/<ref refid="class_spherical_harmonics_1a26468441214c23b2ae5a9b4994740416" kindref="member">radEquator</ref><sp/>*<sp/>sum_a4;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>acc[0]<sp/>=<sp/>a1<sp/>+<sp/>s<sp/>*<sp/>a4;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>acc[1]<sp/>=<sp/>a2<sp/>+<sp/>t<sp/>*<sp/>a4;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>acc[2]<sp/>=<sp/>a3<sp/>+<sp/>u<sp/>*<sp/>a4;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_spherical_harmonics_1a6cef81094866b42add7b6c7bef2c4bf2" kindref="member">SphericalHarmonics::harmReady</ref>()</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>harmGood<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>harmGood<sp/>=<sp/>harmGood<sp/>&amp;&amp;<sp/><ref refid="class_spherical_harmonics_1aa6325f9101a15dd362f70211f1e07b69" kindref="member">cBar</ref>.size()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>harmGood<sp/>=<sp/>harmGood<sp/>&amp;&amp;<sp/><ref refid="class_spherical_harmonics_1a125b9dd1de227f7eda1b975c2a0542a5" kindref="member">sBar</ref>.size()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>harmGood<sp/>=<sp/>harmGood<sp/>&amp;&amp;<sp/><ref refid="class_spherical_harmonics_1afca7ea5ca70437df721a892897450150" kindref="member">aBar</ref>.size()&gt;<sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>harmGood;</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GravBodyData<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><ref refid="class_grav_body_data_1aa5cd7b9573a2aec62248afb38e4eb4db" kindref="member">GravBodyData::GravBodyData</ref>()</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1a06df7b4f1d17b39028c786964224efc1" kindref="member">useMascon</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1abe46ce7319da60d2abb26a5cbadcd89f" kindref="member">usePolyhedral</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1aa38a6d9dd9a4b748025f27672c0b45c5" kindref="member">useSphericalHarmParams</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1a604f53c740bd327f57d469ece798902d" kindref="member">isCentralBody</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1abf0c863b1a157f95f129ad405db09923" kindref="member">ephemTime</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1a90969a01db489ba218e22a7ab4e74521" kindref="member">ephIntTime</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1abf11b23d2c7b8105b44ff1fdd2d91e01" kindref="member">spherHarm</ref>.<ref refid="class_spherical_harmonics_1a646f0282fe46db6bc37ade737633ebb8" kindref="member">maxDeg</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>these<sp/>values<sp/>to<sp/>zero<sp/>just<sp/>in<sp/>case<sp/>they<sp/>don&apos;t<sp/>get<sp/>populated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1ad3af2d7231162bd600d41e836c2024c6" kindref="member">localPlanet</ref><sp/>=<sp/>this-&gt;<ref refid="class_grav_body_data_1a0a0fdac8ca9ec9f5b7bf2a1764ec853c" kindref="member">planetBodyInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>m33SetIdentity(this-&gt;<ref refid="class_grav_body_data_1ad3af2d7231162bd600d41e836c2024c6" kindref="member">localPlanet</ref>.J20002Pfix);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><ref refid="class_grav_body_data_1a8bb48e11d2308faf32cd6333ae76d86e" kindref="member">GravBodyData::~GravBodyData</ref>()</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_grav_body_data_1a0bfdbbe31a06e61b5482ca55a9def194" kindref="member">GravBodyData::initBody</ref>(int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>masconFound;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>masconFound<sp/>=<sp/>this-&gt;<ref refid="class_grav_body_data_1add69bcea561c6a4ea1735fc56f8d3f03" kindref="member">mascon</ref>.<ref refid="class_mascon_1a50c6d6b66cf74635aa8c2122045556df" kindref="member">initializeParameters</ref>();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1a101a84380b7bfe98bb825277e4a4a099" kindref="member">mu</ref><sp/>=<sp/>masconFound<sp/>?<sp/>this-&gt;<ref refid="class_grav_body_data_1add69bcea561c6a4ea1735fc56f8d3f03" kindref="member">mascon</ref>.<ref refid="class_mascon_1a0d4fc2433780b65b56cef70a920f0e79" kindref="member">muM</ref>.sum()<sp/>:<sp/>this-&gt;<ref refid="class_grav_body_data_1a101a84380b7bfe98bb825277e4a4a099" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>polyFound;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>polyFound<sp/>=<sp/>this-&gt;<ref refid="class_grav_body_data_1a52cb95545932dae22012b878af3df8ef" kindref="member">poly</ref>.<ref refid="class_polyhedral_1ab6cce421340203b8dd6d768ba1c99140" kindref="member">initializeParameters</ref>();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1a52cb95545932dae22012b878af3df8ef" kindref="member">poly</ref>.<ref refid="class_polyhedral_1a3108e142ed54ac6fd004762d14f98012" kindref="member">muBody</ref><sp/>=<sp/>polyFound<sp/>?<sp/>this-&gt;<ref refid="class_grav_body_data_1a101a84380b7bfe98bb825277e4a4a099" kindref="member">mu</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>spherFound;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>spherFound<sp/>=<sp/>this-&gt;<ref refid="class_grav_body_data_1abf11b23d2c7b8105b44ff1fdd2d91e01" kindref="member">spherHarm</ref>.<ref refid="class_spherical_harmonics_1aecd56b2cc0e882b87b06177c7d031483" kindref="member">initializeParameters</ref>();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1a101a84380b7bfe98bb825277e4a4a099" kindref="member">mu</ref><sp/>=<sp/>spherFound<sp/>?<sp/>this-&gt;<ref refid="class_grav_body_data_1abf11b23d2c7b8105b44ff1fdd2d91e01" kindref="member">spherHarm</ref>.<ref refid="class_spherical_harmonics_1abfdb05198530bf6e22f1e6cd0a25dfd9" kindref="member">muBody</ref><sp/>:<sp/>this-&gt;<ref refid="class_grav_body_data_1a101a84380b7bfe98bb825277e4a4a099" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1a068638bd3692b4cf600b427aa2e31a0c" kindref="member">radEquator</ref><sp/>=<sp/>spherFound<sp/>?<sp/>this-&gt;<ref refid="class_grav_body_data_1abf11b23d2c7b8105b44ff1fdd2d91e01" kindref="member">spherHarm</ref>.<ref refid="class_spherical_harmonics_1a26468441214c23b2ae5a9b4994740416" kindref="member">radEquator</ref><sp/>:<sp/>this-&gt;<ref refid="class_grav_body_data_1a068638bd3692b4cf600b427aa2e31a0c" kindref="member">radEquator</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_grav_body_data_1aac9590b0cccc1ac8baa38fb6b92ee610" kindref="member">GravBodyData::registerProperties</ref>(<ref refid="class_dyn_param_manager" kindref="compound">DynParamManager</ref>&amp;<sp/>statesIn)</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_grav_body_data_1a89b6e4b81088a73876816d1af9b56253" kindref="member">planetName</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1a68565632839f08cb0f1c5df4848cace3" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>specify<sp/>a<sp/>planetary<sp/>body<sp/>name<sp/>in<sp/>GravBodyData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>stateInit;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>stateInit.fill(0.0);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1a67f767b8cdecdbfa01e423f6856a7888" kindref="member">r_PN_N</ref><sp/>=<sp/>statesIn.<ref refid="class_dyn_param_manager_1ada46fd23fcbc4abcc1760f3ccaf8479e" kindref="member">createProperty</ref>(this-&gt;<ref refid="class_grav_body_data_1a89b6e4b81088a73876816d1af9b56253" kindref="member">planetName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.r_PN_N&quot;</highlight><highlight class="normal">,<sp/>stateInit);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1af61d0d12dce17aac681050bd7a22cdbc" kindref="member">v_PN_N</ref><sp/>=<sp/>statesIn.<ref refid="class_dyn_param_manager_1ada46fd23fcbc4abcc1760f3ccaf8479e" kindref="member">createProperty</ref>(this-&gt;<ref refid="class_grav_body_data_1a89b6e4b81088a73876816d1af9b56253" kindref="member">planetName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.v_PN_N&quot;</highlight><highlight class="normal">,<sp/>stateInit);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>muInit(1,1);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>muInit.setZero();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1abd97f263dc6889f0cd3d01faaf9ab8e5" kindref="member">muPlanet</ref><sp/>=<sp/>statesIn.<ref refid="class_dyn_param_manager_1ada46fd23fcbc4abcc1760f3ccaf8479e" kindref="member">createProperty</ref>(this-&gt;<ref refid="class_grav_body_data_1a89b6e4b81088a73876816d1af9b56253" kindref="member">planetName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.mu&quot;</highlight><highlight class="normal">,<sp/>muInit);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1a1810784eaef1403b628e992839d44ae9" kindref="member">J20002Pfix</ref><sp/>=<sp/>statesIn.<ref refid="class_dyn_param_manager_1ada46fd23fcbc4abcc1760f3ccaf8479e" kindref="member">createProperty</ref>(this-&gt;<ref refid="class_grav_body_data_1a89b6e4b81088a73876816d1af9b56253" kindref="member">planetName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.J20002Pfix&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Map&lt;Eigen::Matrix3d&gt;<sp/>(&amp;(this-&gt;<ref refid="class_grav_body_data_1ad3af2d7231162bd600d41e836c2024c6" kindref="member">localPlanet</ref>.J20002Pfix[0][0]),<sp/>3,<sp/>3));</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1a20bcef1f123c2aad5acd799a1f9b9847" kindref="member">J20002Pfix_dot</ref><sp/>=<sp/>statesIn.<ref refid="class_dyn_param_manager_1ada46fd23fcbc4abcc1760f3ccaf8479e" kindref="member">createProperty</ref>(this-&gt;<ref refid="class_grav_body_data_1a89b6e4b81088a73876816d1af9b56253" kindref="member">planetName</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.J20002Pfix_dot&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Map&lt;Eigen::Matrix3d&gt;<sp/>(&amp;(this-&gt;<ref refid="class_grav_body_data_1ad3af2d7231162bd600d41e836c2024c6" kindref="member">localPlanet</ref>.J20002Pfix_dot[0][0]),<sp/>3,<sp/>3));</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal">Eigen::Vector3d<sp/><ref refid="class_grav_body_data_1accb9b0280caa76025274096d91ae6bec" kindref="member">GravBodyData::computeGravityInertial</ref>(Eigen::Vector3d<sp/>r_I,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>simTimeNanos)</highlight></codeline>
<codeline lineno="571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gravOut;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rMag<sp/>=<sp/>r_I.norm();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>gravOut<sp/><sp/>=<sp/>-r_I*this-&gt;<ref refid="class_grav_body_data_1a101a84380b7bfe98bb825277e4a4a099" kindref="member">mu</ref>/(rMag*rMag*rMag);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>orientation<sp/>of<sp/>the<sp/>body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt<sp/>=<sp/>((int64_t)<sp/>simTimeNanos<sp/>-<sp/>(int64_t)<sp/>this-&gt;<ref refid="class_grav_body_data_1a8c2d78d120f9c14a01e5a63f9df19f69" kindref="member">timeWritten</ref>)*NANO2SEC;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_PfixN<sp/>=<sp/>Eigen::Map&lt;Eigen::Matrix3d&gt;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(&amp;(this-&gt;<ref refid="class_grav_body_data_1ad3af2d7231162bd600d41e836c2024c6" kindref="member">localPlanet</ref>.J20002Pfix[0][0]),<sp/>3,<sp/>3);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_PfixN_dot<sp/>=<sp/>Eigen::Map&lt;Eigen::Matrix3d&gt;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>(&amp;(this-&gt;<ref refid="class_grav_body_data_1ad3af2d7231162bd600d41e836c2024c6" kindref="member">localPlanet</ref>.J20002Pfix_dot[0][0]),<sp/>3,<sp/>3);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_PfixN<sp/>+=<sp/>dcm_PfixN_dot<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>the<sp/>current<sp/>planet<sp/>orientation<sp/>and<sp/>rates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>*this-&gt;<ref refid="class_grav_body_data_1a1810784eaef1403b628e992839d44ae9" kindref="member">J20002Pfix</ref><sp/>=<sp/>dcm_PfixN;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>*this-&gt;<ref refid="class_grav_body_data_1a20bcef1f123c2aad5acd799a1f9b9847" kindref="member">J20002Pfix_dot</ref><sp/>=<sp/>dcm_PfixN_dot;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_grav_body_data_1abf11b23d2c7b8105b44ff1fdd2d91e01" kindref="member">spherHarm</ref>.<ref refid="class_spherical_harmonics_1a6cef81094866b42add7b6c7bef2c4bf2" kindref="member">harmReady</ref>()<sp/>&amp;&amp;<sp/>this-&gt;useSphericalHarmParams)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcm_PfixN.transposeInPlace();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_Pfix<sp/>=<sp/>dcm_PfixN*r_I;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gravPert_Pfix<sp/>=<sp/>this-&gt;<ref refid="class_grav_body_data_1abf11b23d2c7b8105b44ff1fdd2d91e01" kindref="member">spherHarm</ref>.<ref refid="class_spherical_harmonics_1a57f00983833903461457986745a025cd" kindref="member">computeField</ref>(r_Pfix,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1abf11b23d2c7b8105b44ff1fdd2d91e01" kindref="member">spherHarm</ref>.<ref refid="class_spherical_harmonics_1a646f0282fe46db6bc37ade737633ebb8" kindref="member">maxDeg</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gravOut<sp/>+=<sp/>dcm_PfixN.transpose()<sp/>*<sp/>gravPert_Pfix;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_grav_body_data_1a52cb95545932dae22012b878af3df8ef" kindref="member">poly</ref>.<ref refid="class_polyhedral_1accd02bd0ab2177a984cdda23c770bdac" kindref="member">polyReady</ref>()<sp/>&amp;&amp;<sp/>this-&gt;usePolyhedral)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcm_PfixN.transposeInPlace();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_Pfix<sp/>=<sp/>dcm_PfixN*r_I;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gravPert_Pfix<sp/>=<sp/>this-&gt;<ref refid="class_grav_body_data_1a52cb95545932dae22012b878af3df8ef" kindref="member">poly</ref>.<ref refid="class_polyhedral_1ace897841f09a77b03776a381f544fda7" kindref="member">computeField</ref>(r_Pfix);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gravOut<sp/>=<sp/>dcm_PfixN.transpose()<sp/>*<sp/>gravPert_Pfix;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_grav_body_data_1add69bcea561c6a4ea1735fc56f8d3f03" kindref="member">mascon</ref>.<ref refid="class_mascon_1adcbe4f0061f71c512b25f33dfa06dfe2" kindref="member">masconReady</ref>()<sp/>&amp;&amp;<sp/>this-&gt;useMascon)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcm_PfixN.transposeInPlace();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_Pfix<sp/>=<sp/>dcm_PfixN*r_I;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gravPert_Pfix<sp/>=<sp/>this-&gt;<ref refid="class_grav_body_data_1add69bcea561c6a4ea1735fc56f8d3f03" kindref="member">mascon</ref>.<ref refid="class_mascon_1a2edc1720c7a2c4374f547f204228a828" kindref="member">computeField</ref>(r_Pfix);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gravOut<sp/>=<sp/>dcm_PfixN.transpose()<sp/>*<sp/>gravPert_Pfix;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(gravOut);</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_grav_body_data_1a92a05f3923ba9e5f824566ab6813452d" kindref="member">GravBodyData::computePotentialEnergy</ref>(Eigen::Vector3d<sp/>r_I)</highlight></codeline>
<codeline lineno="620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gravPotentialEnergyOut<sp/><sp/>=<sp/>-this-&gt;<ref refid="class_grav_body_data_1a101a84380b7bfe98bb825277e4a4a099" kindref="member">mu</ref>/r_I.norm();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gravPotentialEnergyOut;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_grav_body_data_1a32d91b7cbc77594f542dfb8b869374c4" kindref="member">GravBodyData::loadEphemeris</ref>()</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_grav_body_data_1a0a0fdac8ca9ec9f5b7bf2a1764ec853c" kindref="member">planetBodyInMsg</ref>.isLinked()){</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1ad3af2d7231162bd600d41e836c2024c6" kindref="member">localPlanet</ref><sp/>=<sp/>this-&gt;<ref refid="class_grav_body_data_1a0a0fdac8ca9ec9f5b7bf2a1764ec853c" kindref="member">planetBodyInMsg</ref>();</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1a8c2d78d120f9c14a01e5a63f9df19f69" kindref="member">timeWritten</ref><sp/>=<sp/>this-&gt;<ref refid="class_grav_body_data_1a0a0fdac8ca9ec9f5b7bf2a1764ec853c" kindref="member">planetBodyInMsg</ref>.timeWritten();</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>default<sp/>zero<sp/>planet<sp/>state<sp/>information,<sp/>including<sp/>a<sp/>zero<sp/>orientation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1ad3af2d7231162bd600d41e836c2024c6" kindref="member">localPlanet</ref><sp/>=<sp/>this-&gt;<ref refid="class_grav_body_data_1a0a0fdac8ca9ec9f5b7bf2a1764ec853c" kindref="member">planetBodyInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m33SetIdentity(this-&gt;<ref refid="class_grav_body_data_1ad3af2d7231162bd600d41e836c2024c6" kindref="member">localPlanet</ref>.J20002Pfix);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_grav_body_data_1a8c2d78d120f9c14a01e5a63f9df19f69" kindref="member">timeWritten</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/>GravityEffector</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal">GravityEffector::GravityEffector()</highlight></codeline>
<codeline lineno="649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_gravity_effector_1aa82d8872f6f0fc868f979ac6c050bdad" kindref="member">systemTimeCorrPropName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;systemTime&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_gravity_effector_1a334662437ccac61ba7785d8acdec4103" kindref="member">vehicleGravityPropName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;g_N&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_gravity_effector_1a272375615f4d1b2c4e9c29ae6a4997ed" kindref="member">inertialPositionPropName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;r_BN_N&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_gravity_effector_1a609ab3a0b45c6582a3bed2eff84a204e" kindref="member">inertialVelocityPropName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;v_BN_N&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal">GravityEffector::~GravityEffector()</highlight></codeline>
<codeline lineno="659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gravity_effector_1a6844d76bcb5c64f9d4df4fd65a62114f" kindref="member">GravityEffector::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;GravBodyData<sp/>*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_gravity_effector_1a3bd1d471d982f67cde37597f64b455cc" kindref="member">gravBodies</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_gravity_effector_1a3bd1d471d982f67cde37597f64b455cc" kindref="member">gravBodies</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;initBody(this-&gt;moduleID);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gravity_effector_1a941f2631c05abdde4264088fe1ae37e2" kindref="member">GravityEffector::UpdateState</ref>(uint64_t<sp/>currentSimNanos)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;GravBodyData<sp/>*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_gravity_effector_1a3bd1d471d982f67cde37597f64b455cc" kindref="member">gravBodies</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_gravity_effector_1a3bd1d471d982f67cde37597f64b455cc" kindref="member">gravBodies</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;loadEphemeris();</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it)-&gt;isCentralBody){</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref><sp/>=<sp/>(*it);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeOutputMessages(currentSimNanos);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GravityEffector::writeOutputMessages(uint64_t<sp/>currentSimNanos)</highlight></codeline>
<codeline lineno="701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_gravity_effector_1ae41d86e0344825bc448638d741270db2" kindref="member">centralBodyOutMsg</ref>.isLinked()<sp/>&amp;&amp;<sp/>this-&gt;centralBody)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_gravity_effector_1ae41d86e0344825bc448638d741270db2" kindref="member">centralBodyOutMsg</ref>.write(&amp;this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref>-&gt;<ref refid="class_grav_body_data_1ad3af2d7231162bd600d41e836c2024c6" kindref="member">localPlanet</ref>,<sp/>this-&gt;moduleID,<sp/>currentSimNanos);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gravity_effector_1ad258758e4bba73dfe009d277966bf1b2" kindref="member">GravityEffector::prependSpacecraftNameToStates</ref>()</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_gravity_effector_1a272375615f4d1b2c4e9c29ae6a4997ed" kindref="member">inertialPositionPropName</ref><sp/>=<sp/>this-&gt;<ref refid="class_gravity_effector_1a2023637740c7d84bbc0907d4a9cd2d74" kindref="member">nameOfSpacecraftAttachedTo</ref><sp/>+<sp/>this-&gt;<ref refid="class_gravity_effector_1a272375615f4d1b2c4e9c29ae6a4997ed" kindref="member">inertialPositionPropName</ref>;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_gravity_effector_1a609ab3a0b45c6582a3bed2eff84a204e" kindref="member">inertialVelocityPropName</ref><sp/>=<sp/>this-&gt;<ref refid="class_gravity_effector_1a2023637740c7d84bbc0907d4a9cd2d74" kindref="member">nameOfSpacecraftAttachedTo</ref><sp/>+<sp/>this-&gt;<ref refid="class_gravity_effector_1a609ab3a0b45c6582a3bed2eff84a204e" kindref="member">inertialVelocityPropName</ref>;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_gravity_effector_1a334662437ccac61ba7785d8acdec4103" kindref="member">vehicleGravityPropName</ref><sp/>=<sp/>this-&gt;<ref refid="class_gravity_effector_1a2023637740c7d84bbc0907d4a9cd2d74" kindref="member">nameOfSpacecraftAttachedTo</ref><sp/>+<sp/>this-&gt;<ref refid="class_gravity_effector_1a334662437ccac61ba7785d8acdec4103" kindref="member">vehicleGravityPropName</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gravity_effector_1a69c1f240e2fab0f1ae5b9eba8eb56f1c" kindref="member">GravityEffector::registerProperties</ref>(<ref refid="class_dyn_param_manager" kindref="compound">DynParamManager</ref>&amp;<sp/>statesIn)</highlight></codeline>
<codeline lineno="722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gravInit;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>gravInit.fill(0.0);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;gravProperty<sp/>=<sp/>statesIn.<ref refid="class_dyn_param_manager_1ada46fd23fcbc4abcc1760f3ccaf8479e" kindref="member">createProperty</ref>(this-&gt;<ref refid="class_gravity_effector_1a334662437ccac61ba7785d8acdec4103" kindref="member">vehicleGravityPropName</ref>,<sp/>gravInit);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;inertialPositionProperty<sp/>=<sp/>statesIn.<ref refid="class_dyn_param_manager_1ada46fd23fcbc4abcc1760f3ccaf8479e" kindref="member">createProperty</ref>(this-&gt;<ref refid="class_gravity_effector_1a272375615f4d1b2c4e9c29ae6a4997ed" kindref="member">inertialPositionPropName</ref>,<sp/>gravInit);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;inertialVelocityProperty<sp/>=<sp/>statesIn.<ref refid="class_dyn_param_manager_1ada46fd23fcbc4abcc1760f3ccaf8479e" kindref="member">createProperty</ref>(this-&gt;<ref refid="class_gravity_effector_1a609ab3a0b45c6582a3bed2eff84a204e" kindref="member">inertialVelocityPropName</ref>,<sp/>gravInit);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>register<sp/>planet<sp/>position<sp/>and<sp/>velocity<sp/>state<sp/>vectors<sp/>as<sp/>parameters<sp/>in<sp/>the<sp/>state<sp/>engine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;GravBodyData<sp/>*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_gravity_effector_1a3bd1d471d982f67cde37597f64b455cc" kindref="member">gravBodies</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_gravity_effector_1a3bd1d471d982f67cde37597f64b455cc" kindref="member">gravBodies</ref>.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;registerProperties(statesIn);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gravity_effector_1ac71c6b184cd5b7362bb5f7e822e21789" kindref="member">GravityEffector::linkInStates</ref>(<ref refid="class_dyn_param_manager" kindref="compound">DynParamManager</ref>&amp;<sp/>statesIn)</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;timeCorr<sp/>=<sp/>statesIn.<ref refid="class_dyn_param_manager_1a61e96d12fd7b123c9a7ae356b54ef381" kindref="member">getPropertyReference</ref>(this-&gt;<ref refid="class_gravity_effector_1aa82d8872f6f0fc868f979ac6c050bdad" kindref="member">systemTimeCorrPropName</ref>);</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gravity_effector_1a5a3cd377c22b3a35ed334f4dbcbb00fd" kindref="member">GravityEffector::computeGravityField</ref>(Eigen::Vector3d<sp/>r_cF_N,<sp/>Eigen::Vector3d<sp/>rDot_cF_N)</highlight></codeline>
<codeline lineno="748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;GravBodyData<sp/>*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>systemClock<sp/>=<sp/>(uint64_t)<sp/>this-&gt;timeCorr-&gt;data()[0];</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_cN_N;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//position<sp/>of<sp/>s/c<sp/>CoM<sp/>wrt<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_CN_N;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//inertial<sp/>position<sp/>of<sp/>central<sp/>body<sp/>if<sp/>there<sp/>is<sp/>one.<sp/>Big<sp/>C<sp/>is<sp/>central<sp/>body.<sp/>Little<sp/>c<sp/>is<sp/>CoM<sp/>of<sp/>s/c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_PN_N;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//position<sp/>of<sp/>Planet<sp/>being<sp/>queried<sp/>wrt<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_cP_N;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//position<sp/>of<sp/>s/c<sp/>CoM<sp/>wrt<sp/>planet<sp/>in<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDotDot_cF_N;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//acceleration<sp/>of<sp/>CoM<sp/>of<sp/>s/c<sp/>wrt<sp/>Frame<sp/>in<sp/>which<sp/>it<sp/>is<sp/>stored/integrated<sp/>in<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>rDotDot_cF_N.fill(0.0);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDotDot_cN_N_P;<sp/><sp/></highlight><highlight class="comment">//acceleration<sp/>of<sp/>c<sp/>wrt<sp/>N<sp/>in<sp/>N,<sp/>due<sp/>to<sp/>P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref>){<sp/><sp/><sp/></highlight><highlight class="comment">//Evaluates<sp/>true<sp/>if<sp/>there<sp/>is<sp/>a<sp/>central<sp/>body,<sp/>false<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_CN_N<sp/>=<sp/>getEulerSteppedGravBodyPosition(this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_cN_N<sp/>=<sp/>r_cF_N<sp/>+<sp/>r_CN_N;<sp/></highlight><highlight class="comment">//shift<sp/>s/c<sp/>to<sp/>be<sp/>wrt<sp/>inertial<sp/>frame<sp/>origin<sp/>if<sp/>it<sp/>isn&apos;t<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_cN_N<sp/>=<sp/>r_cF_N;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_gravity_effector_1a3bd1d471d982f67cde37597f64b455cc" kindref="member">gravBodies</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_gravity_effector_1a3bd1d471d982f67cde37597f64b455cc" kindref="member">gravBodies</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_PN_N<sp/>=<sp/>getEulerSteppedGravBodyPosition(*it);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_cP_N<sp/>=<sp/>r_cN_N<sp/>-<sp/>r_PN_N;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref>)<sp/><sp/><sp/></highlight><highlight class="comment">//Evaluates<sp/>true<sp/>if<sp/>there<sp/>is<sp/>a<sp/>central<sp/>body,<sp/>false<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref><sp/>!=<sp/>(*it))</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rDotDot_cF_N<sp/>+=<sp/>(*it)-&gt;computeGravityInertial(r_PN_N<sp/>-<sp/>r_CN_N,<sp/>systemClock);<sp/></highlight><highlight class="comment">//subtract<sp/>accel<sp/>of<sp/>central<sp/>body<sp/>due<sp/>to<sp/>other<sp/>bodies<sp/>to<sp/>get<sp/>RELATIVE<sp/>accel<sp/>of<sp/>s/c.<sp/>See<sp/>Vallado<sp/>on<sp/>&quot;Three-body<sp/>and<sp/>n-body<sp/>Equations&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rDotDot_cN_N_P<sp/>=<sp/>(*it)-&gt;computeGravityInertial(r_cP_N,<sp/>systemClock);<sp/></highlight><highlight class="comment">//acc<sp/>of<sp/>s/c<sp/>wrt<sp/>N<sp/>CoM<sp/>in<sp/>Frame<sp/>used<sp/>for<sp/>s/c<sp/>dynamics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rDotDot_cF_N<sp/>+=<sp/>rDotDot_cN_N_P;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>planet<sp/>states<sp/>in<sp/>the<sp/>state<sp/>engine<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*((*it)-&gt;r_PN_N)<sp/>=<sp/>r_PN_N;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*((*it)-&gt;v_PN_N)<sp/>=<sp/>Eigen::Map&lt;Eigen::Vector3d&gt;(&amp;((*it)-&gt;localPlanet.VelocityVector[0]),<sp/>3,<sp/>1);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*((*it)-&gt;muPlanet))(0,0)<sp/>=<sp/>(*it)-&gt;mu;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>*this-&gt;gravProperty<sp/>=<sp/>rDotDot_cF_N;</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gravity_effector_1a692989f7c408d907d5e98e7effa34a3c" kindref="member">GravityEffector::updateInertialPosAndVel</ref>(Eigen::Vector3d<sp/>r_BF_N,<sp/>Eigen::Vector3d<sp/>rDot_BF_N)</highlight></codeline>
<codeline lineno="794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>add<sp/>the<sp/>central<sp/>body<sp/>inertial<sp/>position<sp/>and<sp/>velocities<sp/>to<sp/>the<sp/>central-body-relative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>and<sp/>velicities<sp/>which<sp/>are<sp/>propogated<sp/>relative<sp/>to<sp/>the<sp/>central<sp/>body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref>)<sp/><sp/><sp/></highlight><highlight class="comment">//Evaluates<sp/>true<sp/>if<sp/>there<sp/>is<sp/>a<sp/>central<sp/>body,<sp/>false<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_CN_N<sp/>=<sp/>getEulerSteppedGravBodyPosition(this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref>);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*this-&gt;inertialPositionProperty<sp/>=<sp/>r_CN_N<sp/>+<sp/>r_BF_N;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*this-&gt;inertialVelocityProperty<sp/>=<sp/>Eigen::Map&lt;Eigen::MatrixXd&gt;(&amp;(this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref>-&gt;<ref refid="class_grav_body_data_1ad3af2d7231162bd600d41e836c2024c6" kindref="member">localPlanet</ref>.VelocityVector[0]),<sp/>3,<sp/>1)<sp/>+<sp/>rDot_BF_N;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*this-&gt;inertialPositionProperty<sp/>=<sp/>r_BF_N;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*this-&gt;inertialVelocityProperty<sp/>=<sp/>rDot_BF_N;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal">Eigen::Vector3d<sp/>GravityEffector::getEulerSteppedGravBodyPosition(<ref refid="class_grav_body_data" kindref="compound">GravBodyData</ref><sp/>*bodyData)</highlight></codeline>
<codeline lineno="812"><highlight class="normal">{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>systemClock<sp/>=<sp/>(uint64_t)<sp/>this-&gt;timeCorr-&gt;data()[0];</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt<sp/>=<sp/>((int64_t)(systemClock<sp/>-<sp/>bodyData-&gt;<ref refid="class_grav_body_data_1a8c2d78d120f9c14a01e5a63f9df19f69" kindref="member">timeWritten</ref>))*NANO2SEC;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_PN_N<sp/>=<sp/>Eigen::Map&lt;Eigen::MatrixXd&gt;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>(&amp;(bodyData-&gt;<ref refid="class_grav_body_data_1ad3af2d7231162bd600d41e836c2024c6" kindref="member">localPlanet</ref>.PositionVector[0]),<sp/>3,<sp/>1);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>r_PN_N<sp/>+=<sp/>Eigen::Map&lt;Eigen::Vector3d&gt;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>(&amp;(bodyData-&gt;<ref refid="class_grav_body_data_1ad3af2d7231162bd600d41e836c2024c6" kindref="member">localPlanet</ref>.VelocityVector[0]),<sp/>3,<sp/>1)*dt;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r_PN_N;</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gravity_effector_1a67bbce54251a2afd7d9c0b640bd062ea" kindref="member">GravityEffector::updateEnergyContributions</ref>(Eigen::Vector3d<sp/>r_cF_N,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>orbPotEnergyContr)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_CN_N;<sp/><sp/></highlight><highlight class="comment">//<sp/>C<sp/>is<sp/>central<sp/>body.<sp/>position<sp/>of<sp/>C<sp/>wrt<sp/>N<sp/>in<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_PN_N;<sp/><sp/></highlight><highlight class="comment">//<sp/>P<sp/>is<sp/>planet<sp/>being<sp/>queried.<sp/>position<sp/>of<sp/>planet<sp/>wrt<sp/>N<sp/>in<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_cP_N;<sp/><sp/></highlight><highlight class="comment">//<sp/>c<sp/>is<sp/>s/c<sp/>CoM.<sp/>position<sp/>of<sp/>c<sp/>wrt<sp/>P<sp/>in<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_cN_N;<sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>c<sp/>wrt<sp/>N<sp/>in<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref>){<sp/><sp/><sp/></highlight><highlight class="comment">//Evaluates<sp/>true<sp/>if<sp/>there<sp/>is<sp/>a<sp/>central<sp/>body,<sp/>false<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_CN_N<sp/>=<sp/>getEulerSteppedGravBodyPosition(this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref>);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_cN_N<sp/>=<sp/>r_cF_N<sp/>+<sp/>r_CN_N;<sp/></highlight><highlight class="comment">//shift<sp/>s/c<sp/>to<sp/>be<sp/>wrt<sp/>inertial<sp/>frame<sp/>origin<sp/>if<sp/>it<sp/>isn&apos;t<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_cN_N<sp/>=<sp/>r_cF_N;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;GravBodyData<sp/>*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>this-&gt;<ref refid="class_gravity_effector_1a3bd1d471d982f67cde37597f64b455cc" kindref="member">gravBodies</ref>.begin();<sp/>it<sp/>!=<sp/>this-&gt;<ref refid="class_gravity_effector_1a3bd1d471d982f67cde37597f64b455cc" kindref="member">gravBodies</ref>.end();<sp/>it++)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_PN_N<sp/>=<sp/>getEulerSteppedGravBodyPosition(*it);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_cP_N<sp/>=<sp/>r_cN_N<sp/>-<sp/>r_PN_N;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref>)<sp/><sp/><sp/></highlight><highlight class="comment">//Evaluates<sp/>true<sp/>if<sp/>there<sp/>is<sp/>a<sp/>central<sp/>body,<sp/>false<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_gravity_effector_1ad35afb93627663b3c2583b120ef52f56" kindref="member">centralBody</ref><sp/>!=<sp/>(*it))</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbPotEnergyContr<sp/>+=<sp/>(*it)-&gt;computePotentialEnergy(r_PN_N<sp/>-<sp/>r_CN_N);<sp/></highlight><highlight class="comment">//potential<sp/>of<sp/>central<sp/>body<sp/>w/in<sp/>current<sp/>planet<sp/>field.<sp/>leads<sp/>to<sp/>relative<sp/>potential<sp/>energy<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbPotEnergyContr<sp/>=<sp/>(*it)-&gt;computePotentialEnergy(r_cP_N);<sp/></highlight><highlight class="comment">//Potential<sp/>w/in<sp/>current<sp/>planet<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gravity_effector_1aa733dbb4e86ed4c6239953796020d270" kindref="member">GravityEffector::setGravBodies</ref>(std::vector&lt;GravBodyData<sp/>*&gt;<sp/>gravBodies)</highlight></codeline>
<codeline lineno="855"><highlight class="normal">{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;gravBodies<sp/>=<sp/><ref refid="class_gravity_effector_1a3bd1d471d982f67cde37597f64b455cc" kindref="member">gravBodies</ref>;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gravity_effector_1a055f787f8ee2c1ba15c7b90605974f4f" kindref="member">GravityEffector::addGravBody</ref>(<ref refid="class_grav_body_data" kindref="compound">GravBodyData</ref>*<sp/>gravBody)</highlight></codeline>
<codeline lineno="861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_gravity_effector_1a3bd1d471d982f67cde37597f64b455cc" kindref="member">gravBodies</ref>.push_back(gravBody);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="864"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/_GeneralModuleFiles/gravityEffector.cpp"/>
  </compounddef>
</doxygen>
