<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="prescribed_trans_8c" kind="file" language="C++">
    <compoundname>prescribedTrans.c</compoundname>
    <includes refid="prescribed_trans_8h" local="yes">prescribedTrans.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedTrans/prescribedTrans.c</label>
        <link refid="prescribed_trans_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>prescribedTrans.h</label>
        <link refid="prescribed_trans_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="10">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="11">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="6">
        <label>cMsgCInterface/PrescribedMotionMsg_C.h</label>
      </node>
      <node id="7">
        <label>cMsgCInterface/PrescribedTransMsg_C.h</label>
      </node>
      <node id="8">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="prescribed_trans_8c_1a38c023cae5cf80a399d647e9ad092fe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_prescribedTrans</definition>
        <argsstring>(PrescribedTransConfig *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_prescribedTrans</name>
        <param>
          <type><ref refid="struct_prescribed_trans_config" kindref="compound">PrescribedTransConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Import the module header file</para>
<para>Import other required files</para>
<para>This method initializes the output message for this module. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with this module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedTrans/prescribedTrans.c" line="35" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedTrans/prescribedTrans.c" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="prescribed_trans_8c_1ac2a575e67db8c68e3e389c59aead5c10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_prescribedTrans</definition>
        <argsstring>(PrescribedTransConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_prescribedTrans</name>
        <param>
          <type><ref refid="struct_prescribed_trans_config" kindref="compound">PrescribedTransConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs a complete reset of the module. Local module variables that retain time varying states between function calls are reset to their default values. This method also checks if the module input message is linked. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>[ns] Time the method is called </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedTrans/prescribedTrans.c" line="49" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedTrans/prescribedTrans.c" bodystart="49" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="prescribed_trans_8c_1ae2cb1d55c21ea691e30e3b830d9b24f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_prescribedTrans</definition>
        <argsstring>(PrescribedTransConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_prescribedTrans</name>
        <param>
          <type><ref refid="struct_prescribed_trans_config" kindref="compound">PrescribedTransConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method uses the given initial and reference attitudes to compute the required attitude maneuver as a function of time. The profiled translational trajectory is updated in time and written to the module&apos;s prescribed motion output message. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>[ns] Time the method is called </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedTrans/prescribedTrans.c" line="71" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedTrans/prescribedTrans.c" bodystart="71" bodyend="156"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2023,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;prescribedTrans.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_prescribedTrans(<ref refid="struct_prescribed_trans_config" kindref="compound">PrescribedTransConfig</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>module<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>PrescribedMotionMsg_C_init(&amp;configData-&gt;<ref refid="struct_prescribed_trans_config_1a63127e898a069f63474eb7b0ecbadf73" kindref="member">prescribedMotionOutMsg</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_prescribedTrans(<ref refid="struct_prescribed_trans_config" kindref="compound">PrescribedTransConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>input<sp/>message<sp/>is<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PrescribedTransMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_prescribed_trans_config_1a6437da36905101fb1e06f7045e0a65e0" kindref="member">prescribedTransInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_prescribed_trans_config_1afb29663595cc638d292a4d7b250d5f84" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>prescribedTrans.prescribedTransInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>initial<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1af79a0794cdbd8d305d033219ab536f59" kindref="member">tInit</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>initial<sp/>convergence<sp/>to<sp/>true<sp/>to<sp/>enter<sp/>the<sp/>correct<sp/>loop<sp/>in<sp/>the<sp/>Update()<sp/>method<sp/>on<sp/>the<sp/>first<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1abe457e7692044c2cc3d96edbef498200" kindref="member">convergence</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_prescribedTrans(<ref refid="struct_prescribed_trans_config" kindref="compound">PrescribedTransConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>buffer<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>PrescribedTransMsgPayload<sp/>prescribedTransIn;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>PrescribedMotionMsgPayload<sp/>prescribedMotionOut;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>the<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>prescribedMotionOut<sp/>=<sp/>PrescribedMotionMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>input<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>prescribedTransIn<sp/>=<sp/>PrescribedTransMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PrescribedTransMsg_C_isWritten(&amp;configData-&gt;<ref refid="struct_prescribed_trans_config_1a6437da36905101fb1e06f7045e0a65e0" kindref="member">prescribedTransInMsg</ref>))</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prescribedTransIn<sp/>=<sp/>PrescribedTransMsg_C_read(&amp;configData-&gt;<ref refid="struct_prescribed_trans_config_1a6437da36905101fb1e06f7045e0a65e0" kindref="member">prescribedTransInMsg</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>loop<sp/>is<sp/>entered<sp/>when<sp/>a<sp/>new<sp/>maneuver<sp/>is<sp/>requested<sp/>after<sp/>all<sp/>previous<sp/>maneuvers<sp/>are<sp/>completed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PrescribedTransMsg_C_timeWritten(&amp;configData-&gt;<ref refid="struct_prescribed_trans_config_1a6437da36905101fb1e06f7045e0a65e0" kindref="member">prescribedTransInMsg</ref>)<sp/>&lt;=<sp/>callTime<sp/>&amp;&amp;<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1abe457e7692044c2cc3d96edbef498200" kindref="member">convergence</ref>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>initial<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1af79a0794cdbd8d305d033219ab536f59" kindref="member">tInit</ref><sp/>=<sp/>callTime<sp/>*<sp/>NANO2SEC;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1ac3d7d021563901d4fbf73507f2288ee4" kindref="member">scalarPosInit</ref><sp/>=<sp/>v3Norm(configData-&gt;<ref refid="struct_prescribed_trans_config_1a71193ec839e738b50549757bede47423" kindref="member">r_FM_M</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a8cc4e5088d587cb18b9400609dca3f2a" kindref="member">scalarVelInit</ref><sp/>=<sp/>v3Norm(configData-&gt;<ref refid="struct_prescribed_trans_config_1a8e30f3ffc18e3c74542374a85da4653b" kindref="member">rPrime_FM_M</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>reference<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a72292b762e503ce9a2fa23f8b4d80c69" kindref="member">scalarPosRef</ref><sp/>=<sp/>prescribedTransIn.scalarPos;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a79899b9291c38e441f10ad4f5d743786" kindref="member">scalarVelRef</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>temporal<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>convTime<sp/>=<sp/>sqrt(((0.5<sp/>*<sp/>fabs(configData-&gt;<ref refid="struct_prescribed_trans_config_1a72292b762e503ce9a2fa23f8b4d80c69" kindref="member">scalarPosRef</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1ac3d7d021563901d4fbf73507f2288ee4" kindref="member">scalarPosInit</ref>))<sp/>*<sp/>8)<sp/>/<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a72501b56d038444b46443ce9910fe13f" kindref="member">scalarAccelMax</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a122633733239bbc911365004cc40f5a9" kindref="member">tf</ref><sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1af79a0794cdbd8d305d033219ab536f59" kindref="member">tInit</ref><sp/>+<sp/>convTime;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a94560e7f557ba0401a108258b9fbe018" kindref="member">ts</ref><sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1af79a0794cdbd8d305d033219ab536f59" kindref="member">tInit</ref><sp/>+<sp/>convTime<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>parabolic<sp/>constants<sp/>for<sp/>the<sp/>maneuver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a0eac590bdee200442ad22039876bcf37" kindref="member">a</ref><sp/>=<sp/>0.5<sp/>*<sp/>(configData-&gt;<ref refid="struct_prescribed_trans_config_1a72292b762e503ce9a2fa23f8b4d80c69" kindref="member">scalarPosRef</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1ac3d7d021563901d4fbf73507f2288ee4" kindref="member">scalarPosInit</ref>)<sp/>/<sp/>((configData-&gt;<ref refid="struct_prescribed_trans_config_1a94560e7f557ba0401a108258b9fbe018" kindref="member">ts</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1af79a0794cdbd8d305d033219ab536f59" kindref="member">tInit</ref>)<sp/>*<sp/>(configData-&gt;<ref refid="struct_prescribed_trans_config_1a94560e7f557ba0401a108258b9fbe018" kindref="member">ts</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1af79a0794cdbd8d305d033219ab536f59" kindref="member">tInit</ref>));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a867499d30e13d4961e02267559407fa1" kindref="member">b</ref><sp/>=<sp/>-0.5<sp/>*<sp/>(configData-&gt;<ref refid="struct_prescribed_trans_config_1a72292b762e503ce9a2fa23f8b4d80c69" kindref="member">scalarPosRef</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1ac3d7d021563901d4fbf73507f2288ee4" kindref="member">scalarPosInit</ref>)<sp/>/<sp/>((configData-&gt;<ref refid="struct_prescribed_trans_config_1a94560e7f557ba0401a108258b9fbe018" kindref="member">ts</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a122633733239bbc911365004cc40f5a9" kindref="member">tf</ref>)<sp/>*<sp/>(configData-&gt;<ref refid="struct_prescribed_trans_config_1a94560e7f557ba0401a108258b9fbe018" kindref="member">ts</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a122633733239bbc911365004cc40f5a9" kindref="member">tf</ref>));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>convergence<sp/>to<sp/>false<sp/>to<sp/>execute<sp/>the<sp/>maneuver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1abe457e7692044c2cc3d96edbef498200" kindref="member">convergence</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>current<sp/>simulation<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>callTime<sp/>*<sp/>NANO2SEC;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>scalar<sp/>prescribed<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scalarAccel;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scalarVel;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scalarPos;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>prescribed<sp/>scalar<sp/>states:<sp/>scalarAccel,<sp/>scalarVel,<sp/>and<sp/>scalarPos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((t<sp/>&lt;<sp/>configData-&gt;ts<sp/>||<sp/>t<sp/>==<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a94560e7f557ba0401a108258b9fbe018" kindref="member">ts</ref>)<sp/>&amp;&amp;<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a122633733239bbc911365004cc40f5a9" kindref="member">tf</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1af79a0794cdbd8d305d033219ab536f59" kindref="member">tInit</ref><sp/>!=<sp/>0)<sp/><sp/></highlight><highlight class="comment">//<sp/>Entered<sp/>during<sp/>the<sp/>first<sp/>half<sp/>of<sp/>the<sp/>maneuver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalarAccel<sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a72501b56d038444b46443ce9910fe13f" kindref="member">scalarAccelMax</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalarVel<sp/>=<sp/>scalarAccel<sp/>*<sp/>(t<sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1af79a0794cdbd8d305d033219ab536f59" kindref="member">tInit</ref>)<sp/>+<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a8cc4e5088d587cb18b9400609dca3f2a" kindref="member">scalarVelInit</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalarPos<sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a0eac590bdee200442ad22039876bcf37" kindref="member">a</ref><sp/>*<sp/>(t<sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1af79a0794cdbd8d305d033219ab536f59" kindref="member">tInit</ref>)<sp/>*<sp/>(t<sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1af79a0794cdbd8d305d033219ab536f59" kindref="member">tInit</ref>)<sp/>+<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1ac3d7d021563901d4fbf73507f2288ee4" kindref="member">scalarPosInit</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>t<sp/>&gt;<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a94560e7f557ba0401a108258b9fbe018" kindref="member">ts</ref><sp/>&amp;&amp;<sp/>t<sp/>&lt;=<sp/>configData-&gt;tf<sp/>&amp;&amp;<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a122633733239bbc911365004cc40f5a9" kindref="member">tf</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1af79a0794cdbd8d305d033219ab536f59" kindref="member">tInit</ref><sp/>!=<sp/>0)<sp/><sp/></highlight><highlight class="comment">//<sp/>Entered<sp/>during<sp/>the<sp/>second<sp/>half<sp/>of<sp/>the<sp/>maneuver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalarAccel<sp/>=<sp/>-1<sp/>*<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a72501b56d038444b46443ce9910fe13f" kindref="member">scalarAccelMax</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalarVel<sp/>=<sp/>scalarAccel<sp/>*<sp/>(t<sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1af79a0794cdbd8d305d033219ab536f59" kindref="member">tInit</ref>)<sp/>+<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a8cc4e5088d587cb18b9400609dca3f2a" kindref="member">scalarVelInit</ref><sp/>-<sp/>scalarAccel<sp/>*<sp/>(configData-&gt;<ref refid="struct_prescribed_trans_config_1a122633733239bbc911365004cc40f5a9" kindref="member">tf</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1af79a0794cdbd8d305d033219ab536f59" kindref="member">tInit</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalarPos<sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a867499d30e13d4961e02267559407fa1" kindref="member">b</ref><sp/>*<sp/>(t<sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a122633733239bbc911365004cc40f5a9" kindref="member">tf</ref>)<sp/>*<sp/>(t<sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a122633733239bbc911365004cc40f5a9" kindref="member">tf</ref>)<sp/>+<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a72292b762e503ce9a2fa23f8b4d80c69" kindref="member">scalarPosRef</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Entered<sp/>when<sp/>the<sp/>maneuver<sp/>is<sp/>complete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalarAccel<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalarVel<sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a79899b9291c38e441f10ad4f5d743786" kindref="member">scalarVelRef</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalarPos<sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a72292b762e503ce9a2fa23f8b4d80c69" kindref="member">scalarPosRef</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1abe457e7692044c2cc3d96edbef498200" kindref="member">convergence</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>scalar<sp/>variables<sp/>to<sp/>the<sp/>prescribed<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(scalarPos,<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1aebaf92d6f335cf952915d7a916502c82" kindref="member">transAxis_M</ref>,<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a71193ec839e738b50549757bede47423" kindref="member">r_FM_M</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(scalarVel,<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1aebaf92d6f335cf952915d7a916502c82" kindref="member">transAxis_M</ref>,<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1a8e30f3ffc18e3c74542374a85da4653b" kindref="member">rPrime_FM_M</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(scalarAccel,<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1aebaf92d6f335cf952915d7a916502c82" kindref="member">transAxis_M</ref>,<sp/>configData-&gt;<ref refid="struct_prescribed_trans_config_1ad34980d72e29465328feee377ac9b90c" kindref="member">rPrimePrime_FM_M</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>local<sp/>variables<sp/>to<sp/>the<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_prescribed_trans_config_1a71193ec839e738b50549757bede47423" kindref="member">r_FM_M</ref>,<sp/>prescribedMotionOut.r_FM_M);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_prescribed_trans_config_1a8e30f3ffc18e3c74542374a85da4653b" kindref="member">rPrime_FM_M</ref>,<sp/>prescribedMotionOut.rPrime_FM_M);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_prescribed_trans_config_1ad34980d72e29465328feee377ac9b90c" kindref="member">rPrimePrime_FM_M</ref>,<sp/>prescribedMotionOut.rPrimePrime_FM_M);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_prescribed_trans_config_1a1ba7362363b5ea33c630e1f5036186fd" kindref="member">omega_FM_F</ref>,<sp/>prescribedMotionOut.omega_FM_F);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_prescribed_trans_config_1a38b07f7c6087b01b208826fa440aedf5" kindref="member">omegaPrime_FM_F</ref>,<sp/>prescribedMotionOut.omegaPrime_FM_F);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_prescribed_trans_config_1a9a1da2a2c786357d70b69be8aadc4809" kindref="member">sigma_FM</ref>,<sp/>prescribedMotionOut.sigma_FM);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>prescribed<sp/>motion<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>PrescribedMotionMsg_C_write(&amp;prescribedMotionOut,<sp/>&amp;configData-&gt;<ref refid="struct_prescribed_trans_config_1a63127e898a069f63474eb7b0ecbadf73" kindref="member">prescribedMotionOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedTrans/prescribedTrans.c"/>
  </compounddef>
</doxygen>
