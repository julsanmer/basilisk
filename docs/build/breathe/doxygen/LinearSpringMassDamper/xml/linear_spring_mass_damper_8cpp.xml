<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="linear_spring_mass_damper_8cpp" kind="file" language="C++">
    <compoundname>linearSpringMassDamper.cpp</compoundname>
    <includes refid="linear_spring_mass_damper_8h" local="yes">linearSpringMassDamper.h</includes>
    <includes local="yes">architecture/utilities/avsEigenSupport.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/dynamics/LinearSpringMassDamper/linearSpringMassDamper.cpp</label>
        <link refid="linear_spring_mass_damper_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>linearSpringMassDamper.h</label>
        <link refid="linear_spring_mass_damper_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="5">
        <label>architecture/utilities/avsEigenMRP.h</label>
      </node>
      <node id="8">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="7">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="6">
        <label>simulation/dynamics/_GeneralModuleFiles/fuelSlosh.h</label>
      </node>
      <node id="3">
        <label>simulation/dynamics/_GeneralModuleFiles/stateEffector.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;linearSpringMassDamper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenSupport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="class_linear_spring_mass_damper_1ae794744c87e6381b7745c716f4b171af" kindref="member">LinearSpringMassDamper::LinearSpringMassDamper</ref>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>zero<sp/>the<sp/>contributions<sp/>for<sp/>mass<sp/>props<sp/>and<sp/>mass<sp/>rates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.mEff<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.IEffPntB_B.setZero();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.rEff_CB_B.setZero();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.rEffPrime_CB_B.setZero();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.IEffPrimePntB_B.setZero();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Initialize<sp/>the<sp/>variables<sp/>to<sp/>working<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;massSMD<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1ac33bf64bfe522deb40a2f795badfd85d" kindref="member">r_PB_B</ref>.setZero();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1aef0c2b158969224f7dfa998386b917e9" kindref="member">pHat_B</ref>.setIdentity();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1a4f21c2c1db6330452dbb2fe36f905021" kindref="member">k</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1a1d803699101cceeb02fb21a676b50b0d" kindref="member">c</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1ac7356c74d3764109fc4d8f7efd8663f6" kindref="member">rhoInit</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1a9b729fe76936e0f35e1895069a78ffa3" kindref="member">rhoDotInit</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1a5b2dd1621e88d10955f8ca7a9ca1320b" kindref="member">massInit</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1a8ab23edb707c88d0a3463072b6a62829" kindref="member">nameOfRhoState</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;linearSpringMassDamperRho&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(this-&gt;effectorID);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1a26144f9633cb6e57a41554dc91edddbf" kindref="member">nameOfRhoDotState</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;linearSpringMassDamperRhoDot&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(this-&gt;effectorID);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1a73bcec1e829d22bb1749205fe36ca742" kindref="member">nameOfMassState</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;linearSpringMassDamperMass&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(this-&gt;effectorID);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effectorID++;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">uint64_t<sp/>LinearSpringMassDamper::effectorID<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="class_linear_spring_mass_damper_1ac909fcf0c387130740adbfe244650bed" kindref="member">LinearSpringMassDamper::~LinearSpringMassDamper</ref>()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effectorID<sp/>=<sp/>1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>the<sp/>panel<sp/>ID*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_linear_spring_mass_damper_1a3aa5eac0728e135fa46814e2f3246b30" kindref="member">LinearSpringMassDamper::linkInStates</ref>(DynParamManager&amp;<sp/>statesIn)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Grab<sp/>access<sp/>to<sp/>the<sp/>hub<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;omegaState<sp/>=<sp/>statesIn.getStateObject(</highlight><highlight class="stringliteral">&quot;hubOmega&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sigmaState<sp/>=<sp/>statesIn.getStateObject(</highlight><highlight class="stringliteral">&quot;hubSigma&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;velocityState<sp/>=<sp/>statesIn.getStateObject(</highlight><highlight class="stringliteral">&quot;hubVelocity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Grab<sp/>access<sp/>to<sp/>gravity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;g_N<sp/>=<sp/>statesIn.getPropertyReference(</highlight><highlight class="stringliteral">&quot;g_N&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Grab<sp/>access<sp/>to<sp/>c_B<sp/>and<sp/>cPrime_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;c_B<sp/>=<sp/>statesIn.getPropertyReference(</highlight><highlight class="stringliteral">&quot;centerOfMassSC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cPrime_B<sp/>=<sp/>statesIn.getPropertyReference(</highlight><highlight class="stringliteral">&quot;centerOfMassPrimeSC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_linear_spring_mass_damper_1a29beb8277266f1d53ce5a1d71cffd773" kindref="member">LinearSpringMassDamper::registerStates</ref>(DynParamManager&amp;<sp/>states)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Register<sp/>rho<sp/>and<sp/>rhoDot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rhoState<sp/>=<sp/>states.registerState(1,<sp/>1,<sp/><ref refid="class_linear_spring_mass_damper_1a8ab23edb707c88d0a3463072b6a62829" kindref="member">nameOfRhoState</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>rhoInitMatrix(1,1);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>rhoInitMatrix(0,0)<sp/>=<sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1ac7356c74d3764109fc4d8f7efd8663f6" kindref="member">rhoInit</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rhoState-&gt;setState(rhoInitMatrix);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rhoDotState<sp/>=<sp/>states.registerState(1,<sp/>1,<sp/><ref refid="class_linear_spring_mass_damper_1a26144f9633cb6e57a41554dc91edddbf" kindref="member">nameOfRhoDotState</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>rhoDotInitMatrix(1,1);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>rhoDotInitMatrix(0,0)<sp/>=<sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1a9b729fe76936e0f35e1895069a78ffa3" kindref="member">rhoDotInit</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rhoDotState-&gt;setState(rhoDotInitMatrix);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Register<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1ad0f584733ae78ff1c7f910f27f26a675" kindref="member">massState</ref><sp/>=<sp/>states.registerState(1,<sp/>1,<sp/><ref refid="class_linear_spring_mass_damper_1a73bcec1e829d22bb1749205fe36ca742" kindref="member">nameOfMassState</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>massInitMatrix(1,1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>massInitMatrix(0,0)<sp/>=<sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1a5b2dd1621e88d10955f8ca7a9ca1320b" kindref="member">massInit</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1ad0f584733ae78ff1c7f910f27f26a675" kindref="member">massState</ref>-&gt;setState(massInitMatrix);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_linear_spring_mass_damper_1a92ca8ac9db3b17cf7f092f2b73cb1bcb" kindref="member">LinearSpringMassDamper::updateEffectorMassProps</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Grab<sp/>rho<sp/>from<sp/>state<sp/>manager<sp/>and<sp/>define<sp/>r_PcB_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rho<sp/>=<sp/>this-&gt;rhoState-&gt;getState()(0,0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;r_PcB_B<sp/>=<sp/>this-&gt;rho<sp/>*<sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1aef0c2b158969224f7dfa998386b917e9" kindref="member">pHat_B</ref><sp/>+<sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1ac33bf64bfe522deb40a2f795badfd85d" kindref="member">r_PB_B</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;massSMD<sp/>=<sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1ad0f584733ae78ff1c7f910f27f26a675" kindref="member">massState</ref>-&gt;getState()(0,<sp/>0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Update<sp/>the<sp/>effectors<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.mEff<sp/>=<sp/>this-&gt;massSMD;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Update<sp/>the<sp/>position<sp/>of<sp/>CoM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.rEff_CB_B<sp/>=<sp/>this-&gt;r_PcB_B;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Update<sp/>the<sp/>inertia<sp/>about<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rTilde_PcB_B<sp/>=<sp/>eigenTilde(this-&gt;r_PcB_B);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.IEffPntB_B<sp/>=<sp/>this-&gt;massSMD<sp/>*<sp/>this-&gt;rTilde_PcB_B<sp/>*<sp/>this-&gt;rTilde_PcB_B.transpose();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Grab<sp/>rhoDot<sp/>from<sp/>the<sp/>stateManager<sp/>and<sp/>define<sp/>rPrime_PcB_B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rhoDot<sp/>=<sp/>this-&gt;rhoDotState-&gt;getState()(0,<sp/>0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rPrime_PcB_B<sp/>=<sp/>this-&gt;rhoDot<sp/>*<sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1aef0c2b158969224f7dfa998386b917e9" kindref="member">pHat_B</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.rEffPrime_CB_B<sp/>=<sp/>this-&gt;rPrime_PcB_B;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Update<sp/>the<sp/>body<sp/>time<sp/>derivative<sp/>of<sp/>inertia<sp/>about<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rPrimeTilde_PcB_B<sp/>=<sp/>eigenTilde(this-&gt;rPrime_PcB_B);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;effProps.IEffPrimePntB_B<sp/>=<sp/>-this-&gt;massSMD*(this-&gt;rPrimeTilde_PcB_B*this-&gt;rTilde_PcB_B</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>this-&gt;rTilde_PcB_B*this-&gt;rPrimeTilde_PcB_B);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_linear_spring_mass_damper_1a7977e029938a1c1d27591ebf91ecfaec" kindref="member">LinearSpringMassDamper::retrieveMassValue</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>mass<sp/>value<sp/>into<sp/>the<sp/>fuelSlosh<sp/>class<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;fuelMass<sp/>=<sp/>this-&gt;massSMD;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_linear_spring_mass_damper_1acd7a415e877729160f59de32e62ed60a" kindref="member">LinearSpringMassDamper::updateContributions</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime,<sp/>BackSubMatrices<sp/>&amp;<sp/>backSubContr,<sp/>Eigen::Vector3d<sp/>sigma_BN,<sp/>Eigen::Vector3d<sp/>omega_BN_B,<sp/>Eigen::Vector3d<sp/>g_N)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>dcm_BN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigmaLocal_BN;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_BN;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_NB;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaLocal_BN<sp/>=<sp/>(Eigen::Vector3d<sp/>)<sp/>this-&gt;sigmaState-&gt;getState();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_NB<sp/>=<sp/>sigmaLocal_BN.toRotationMatrix();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_BN<sp/>=<sp/>dcm_NB.transpose();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Map<sp/>gravity<sp/>to<sp/>body<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>gLocal_N;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>g_B;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>gLocal_N<sp/>=<sp/>*this-&gt;g_N;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>g_B<sp/>=<sp/>dcm_BN*gLocal_N;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Define<sp/>aRho</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;aRho<sp/>=<sp/>-this-&gt;<ref refid="class_linear_spring_mass_damper_1aef0c2b158969224f7dfa998386b917e9" kindref="member">pHat_B</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Define<sp/>bRho</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;bRho<sp/>=<sp/>-this-&gt;rTilde_PcB_B*this-&gt;<ref refid="class_linear_spring_mass_damper_1aef0c2b158969224f7dfa998386b917e9" kindref="member">pHat_B</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Define<sp/>cRho</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omega_BN_B_local<sp/>=<sp/>this-&gt;omegaState-&gt;getState();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>omegaTilde_BN_B_local;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>omegaTilde_BN_B_local<sp/>=<sp/>eigenTilde(omega_BN_B_local);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>cRho<sp/>=<sp/>1.0/(this-&gt;massSMD)*(this-&gt;pHat_B.dot(this-&gt;massSMD<sp/>*<sp/>g_B)<sp/>-<sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1a4f21c2c1db6330452dbb2fe36f905021" kindref="member">k</ref>*this-&gt;rho<sp/>-<sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1a1d803699101cceeb02fb21a676b50b0d" kindref="member">c</ref>*this-&gt;rhoDot</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>2<sp/>*<sp/>this-&gt;massSMD*this-&gt;pHat_B.dot(omegaTilde_BN_B_local<sp/>*<sp/>this-&gt;rPrime_PcB_B)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>this-&gt;massSMD*this-&gt;pHat_B.dot(omegaTilde_BN_B_local*omegaTilde_BN_B_local*this-&gt;r_PcB_B));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Compute<sp/>matrix/vector<sp/>contributions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.matrixA<sp/>=<sp/>this-&gt;massSMD*this-&gt;pHat_B*this-&gt;aRho.transpose();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.matrixB<sp/>=<sp/>this-&gt;massSMD*this-&gt;pHat_B*this-&gt;bRho.transpose();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.matrixC<sp/>=<sp/>this-&gt;massSMD*this-&gt;rTilde_PcB_B*this-&gt;pHat_B*this-&gt;aRho.transpose();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.matrixD<sp/>=<sp/>this-&gt;massSMD*this-&gt;rTilde_PcB_B*this-&gt;pHat_B*this-&gt;bRho.transpose();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.vecTrans<sp/>=<sp/>-this-&gt;massSMD*this-&gt;cRho*this-&gt;<ref refid="class_linear_spring_mass_damper_1aef0c2b158969224f7dfa998386b917e9" kindref="member">pHat_B</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>backSubContr.vecRot<sp/>=<sp/>-this-&gt;massSMD*omegaTilde_BN_B_local<sp/>*<sp/>this-&gt;rTilde_PcB_B<sp/>*this-&gt;rPrime_PcB_B<sp/>-</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;massSMD*this-&gt;cRho*this-&gt;rTilde_PcB_B<sp/>*<sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1aef0c2b158969224f7dfa998386b917e9" kindref="member">pHat_B</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_linear_spring_mass_damper_1a1c0c7c0785f137090796731bdabcacba" kindref="member">LinearSpringMassDamper::computeDerivatives</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime,<sp/>Eigen::Vector3d<sp/>rDDot_BN_N,<sp/>Eigen::Vector3d<sp/>omegaDot_BN_B,<sp/>Eigen::Vector3d<sp/>sigma_BN)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>DCM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigmaLocal_BN;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_BN;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaLocal_BN<sp/>=<sp/>(Eigen::Vector3d)<sp/>this-&gt;sigmaState-&gt;getState();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_BN<sp/>=<sp/>(sigmaLocal_BN.toRotationMatrix()).transpose();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>the<sp/>derivative<sp/>of<sp/>rho<sp/>to<sp/>rhoDot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rhoState-&gt;setDerivative(this-&gt;rhoDotState-&gt;getState());</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Compute<sp/>rhoDDot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>conv(1,1);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaDot_BN_B_local<sp/>=<sp/>this-&gt;omegaState-&gt;getStateDeriv();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDDot_BN_N_local<sp/>=<sp/>this-&gt;velocityState-&gt;getStateDeriv();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDDot_BN_B_local<sp/>=<sp/>dcm_BN*rDDot_BN_N_local;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>conv(0,<sp/>0)<sp/>=<sp/>this-&gt;aRho.dot(rDDot_BN_B_local)<sp/>+<sp/>this-&gt;bRho.dot(omegaDot_BN_B_local)<sp/>+<sp/>this-&gt;cRho;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rhoDotState-&gt;setDerivative(conv);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Set<sp/>the<sp/>massDot<sp/>already<sp/>computed<sp/>from<sp/>fuelTank<sp/>to<sp/>the<sp/>stateDerivative<sp/>of<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>conv(0,0)<sp/>=<sp/>this-&gt;fuelMassDot;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_linear_spring_mass_damper_1ad0f584733ae78ff1c7f910f27f26a675" kindref="member">massState</ref>-&gt;setDerivative(conv);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_linear_spring_mass_damper_1a7dd7b570ac12054df9ae26fd6d2fc969" kindref="member">LinearSpringMassDamper::updateEnergyMomContributions</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime,<sp/>Eigen::Vector3d<sp/>&amp;<sp/>rotAngMomPntCContr_B,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>rotEnergyContr,<sp/>Eigen::Vector3d<sp/>omega_BN_B)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>Get<sp/>variables<sp/>needed<sp/>for<sp/>energy<sp/>momentum<sp/>calcs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaLocal_BN_B;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>omegaLocal_BN_B<sp/>=<sp/>omegaState-&gt;getState();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rDotPcB_B;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>rotational<sp/>angular<sp/>momentum<sp/>contribution<sp/>from<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>rDotPcB_B<sp/>=<sp/>this-&gt;rPrime_PcB_B<sp/>+<sp/>omegaLocal_BN_B.cross(this-&gt;r_PcB_B);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>rotAngMomPntCContr_B<sp/>=<sp/>this-&gt;massSMD*this-&gt;r_PcB_B.cross(rDotPcB_B);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Find<sp/>rotational<sp/>energy<sp/>contribution<sp/>from<sp/>the<sp/>hub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>rotEnergyContr<sp/>=<sp/>1.0/2.0*this-&gt;massSMD*rDotPcB_B.dot(rDotPcB_B)<sp/>+<sp/>1.0/2.0*this-&gt;<ref refid="class_linear_spring_mass_damper_1a4f21c2c1db6330452dbb2fe36f905021" kindref="member">k</ref>*this-&gt;rho*this-&gt;rho;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_linear_spring_mass_damper_1aafb6ab0398d11792f0fbce09b9502045" kindref="member">LinearSpringMassDamper::calcForceTorqueOnBody</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime,<sp/>Eigen::Vector3d<sp/>omega_BN_B)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>the<sp/>current<sp/>omega<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>omegaLocal_BN_B;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>omegaLocal_BN_B<sp/>=<sp/>this-&gt;omegaState-&gt;getState();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>omegaLocalTilde_BN_B;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>omegaLocalTilde_BN_B<sp/>=<sp/>eigenTilde(omegaLocal_BN_B);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Get<sp/>rhoDDot<sp/>from<sp/>last<sp/>integrator<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rhoDDotLocal;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>rhoDDotLocal<sp/>=<sp/>rhoDotState-&gt;getStateDeriv()(0,<sp/>0);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Calculate<sp/>force<sp/>that<sp/>the<sp/>FSP<sp/>is<sp/>applying<sp/>to<sp/>the<sp/>spacecraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;forceOnBody_B<sp/>=<sp/>-(this-&gt;massSMD*this-&gt;pHat_B*rhoDDotLocal<sp/>+<sp/>2*omegaLocalTilde_BN_B*this-&gt;massSMD</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*this-&gt;rhoDot*this-&gt;<ref refid="class_linear_spring_mass_damper_1aef0c2b158969224f7dfa998386b917e9" kindref="member">pHat_B</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Calculate<sp/>torque<sp/>that<sp/>the<sp/>FSP<sp/>is<sp/>applying<sp/>about<sp/>point<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;torqueOnBodyPntB_B<sp/>=<sp/>-(this-&gt;massSMD*this-&gt;rTilde_PcB_B*this-&gt;pHat_B*rhoDDotLocal<sp/>+<sp/>this-&gt;massSMD*omegaLocalTilde_BN_B*this-&gt;rTilde_PcB_B*this-&gt;rPrime_PcB_B<sp/>-<sp/>this-&gt;massSMD*(this-&gt;rPrimeTilde_PcB_B*this-&gt;rTilde_PcB_B<sp/>+<sp/>this-&gt;rTilde_PcB_B*this-&gt;rPrimeTilde_PcB_B)*omegaLocal_BN_B);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Define<sp/>values<sp/>needed<sp/>to<sp/>get<sp/>the<sp/>torque<sp/>about<sp/>point<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cLocal_B<sp/>=<sp/>*this-&gt;c_B;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>cPrimeLocal_B<sp/>=<sp/>*this-&gt;cPrime_B;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_PcC_B<sp/>=<sp/>this-&gt;r_PcB_B<sp/>-<sp/>cLocal_B;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>rPrime_PcC_B<sp/>=<sp/>this-&gt;rPrime_PcB_B<sp/>-<sp/>cPrimeLocal_B;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>rTilde_PcC_B<sp/>=<sp/>eigenTilde(r_PcC_B);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>rPrimeTilde_PcC_B<sp/>=<sp/>eigenTilde(rPrime_PcC_B);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Calculate<sp/>the<sp/>torque<sp/>about<sp/>point<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;torqueOnBodyPntC_B<sp/>=<sp/>-(this-&gt;massSMD*rTilde_PcC_B*this-&gt;pHat_B*rhoDDotLocal<sp/>+<sp/>this-&gt;massSMD*omegaLocalTilde_BN_B*rTilde_PcC_B*rPrime_PcC_B<sp/>-<sp/>this-&gt;massSMD*(rPrimeTilde_PcC_B*rTilde_PcC_B<sp/>+<sp/>rTilde_PcC_B*rPrimeTilde_PcC_B)*omegaLocal_BN_B);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/LinearSpringMassDamper/linearSpringMassDamper.cpp"/>
  </compounddef>
</doxygen>
