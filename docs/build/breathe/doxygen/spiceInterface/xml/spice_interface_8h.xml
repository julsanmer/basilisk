<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="spice_interface_8h" kind="file" language="C++">
    <compoundname>spiceInterface.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes local="yes">architecture/_GeneralModuleFiles/sys_model.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/bskLogging.h</includes>
    <includes local="yes">architecture/utilities/avsEigenSupport.h</includes>
    <includes local="yes">architecture/msgPayloadDefC/SpicePlanetStateMsgPayload.h</includes>
    <includes local="yes">architecture/msgPayloadDefC/SpiceTimeMsgPayload.h</includes>
    <includes local="yes">architecture/msgPayloadDefC/EpochMsgPayload.h</includes>
    <includes local="yes">architecture/msgPayloadDefC/SCStatesMsgPayload.h</includes>
    <includes local="yes">architecture/msgPayloadDefC/AttRefMsgPayload.h</includes>
    <includes local="yes">architecture/msgPayloadDefC/TransRefMsgPayload.h</includes>
    <includes local="yes">architecture/messaging/messaging.h</includes>
    <includedby refid="spice_interface_8cpp" local="yes">/Users/julio/Desktop/basilisk/src/simulation/environment/spiceInterface/spiceInterface.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/environment/spiceInterface/spiceInterface.h</label>
        <link refid="spice_interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="14">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="12">
        <label>architecture/msgPayloadDefC/AttRefMsgPayload.h</label>
      </node>
      <node id="10">
        <label>architecture/msgPayloadDefC/EpochMsgPayload.h</label>
      </node>
      <node id="11">
        <label>architecture/msgPayloadDefC/SCStatesMsgPayload.h</label>
      </node>
      <node id="8">
        <label>architecture/msgPayloadDefC/SpicePlanetStateMsgPayload.h</label>
      </node>
      <node id="9">
        <label>architecture/msgPayloadDefC/SpiceTimeMsgPayload.h</label>
      </node>
      <node id="13">
        <label>architecture/msgPayloadDefC/TransRefMsgPayload.h</label>
      </node>
      <node id="7">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="6">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="5">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_spice_interface" prot="public">SpiceInterface</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SpiceInterface_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SpiceInterface_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/_GeneralModuleFiles/sys_model.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/bskLogging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenSupport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/msgPayloadDefC/SpicePlanetStateMsgPayload.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/msgPayloadDefC/SpiceTimeMsgPayload.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/msgPayloadDefC/EpochMsgPayload.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/msgPayloadDefC/SCStatesMsgPayload.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/msgPayloadDefC/AttRefMsgPayload.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/msgPayloadDefC/TransRefMsgPayload.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/messaging/messaging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_spice_interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_spice_interface" kindref="compound">SpiceInterface</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SysModel<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spice_interface_1a63549f864889f0df19f179fac7a3cc7e" kindref="member">SpiceInterface</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spice_interface_1a7fdfcc1bbf8e6885ad5ee8aca2984fc1" kindref="member">~SpiceInterface</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1abe69b9b9ab322dac146b956db409afda" kindref="member">UpdateState</ref>(uint64_t<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1a6af08e3926de6b92f98d62687c4096bb" kindref="member">loadSpiceKernel</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kernelName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dataPath);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1a7f409d39805ee31564c7a6a83d4997e5" kindref="member">unloadSpiceKernel</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kernelName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dataPath);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_spice_interface_1a71794492749a0374a738c528c45803d7" kindref="member">getCurrentTimeString</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1a5c4dd146eca438ecee2df17417945ab9" kindref="member">Reset</ref>(uint64_t<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1a10635607ed9544ddcce54af1b2d1deaf" kindref="member">initTimeData</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1ae1cdd255a352f6419a16334499856022" kindref="member">computeGPSData</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1ad6d4a8e11c3d63f6890381cdd8bc53b4" kindref="member">pullSpiceData</ref>(std::vector&lt;SpicePlanetStateMsgPayload&gt;<sp/>*spiceData);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1ae88f8bdc020e79f9386e62df484b0aa5" kindref="member">writeOutputMessages</ref>(uint64_t<sp/>CurrentClock);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1aba25cdd800184d943a3d2e407f72e765" kindref="member">clearKeeper</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1ab5cc838778b98bdd1a78dbbc49d49cf2" kindref="member">addPlanetNames</ref>(std::vector&lt;std::string&gt;<sp/>planetNames);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1a166ba057be0d58c1965f68d2b62e2202" kindref="member">addSpacecraftNames</ref>(std::vector&lt;std::string&gt;<sp/>spacecraftNames);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58" refid="class_spice_interface_1adba8813710465e3c7dce29611c362c53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Message&lt;SpiceTimeMsgPayload&gt;<sp/><ref refid="class_spice_interface_1adba8813710465e3c7dce29611c362c53" kindref="member">spiceTimeOutMsg</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="class_spice_interface_1a5e16b267c6bd5adfca3fc6457530abbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ReadFunctor&lt;EpochMsgPayload&gt;<sp/><ref refid="class_spice_interface_1a5e16b267c6bd5adfca3fc6457530abbe" kindref="member">epochInMsg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60" refid="class_spice_interface_1a2d776ad89efad6f62ba52f78c87d73b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Message&lt;SpicePlanetStateMsgPayload&gt;*&gt;<sp/><ref refid="class_spice_interface_1a2d776ad89efad6f62ba52f78c87d73b0" kindref="member">planetStateOutMsgs</ref>;<sp/></highlight></codeline>
<codeline lineno="61" refid="class_spice_interface_1ab06260ee8b07f6352cf501ff1416445b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Message&lt;SCStatesMsgPayload&gt;*&gt;<sp/><ref refid="class_spice_interface_1ab06260ee8b07f6352cf501ff1416445b" kindref="member">scStateOutMsgs</ref>;<sp/></highlight></codeline>
<codeline lineno="62" refid="class_spice_interface_1a2414d26a7cc3adca06a84c9e1d8c4b8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Message&lt;AttRefMsgPayload&gt;*&gt;<sp/><ref refid="class_spice_interface_1a2414d26a7cc3adca06a84c9e1d8c4b8c" kindref="member">attRefStateOutMsgs</ref>;<sp/></highlight></codeline>
<codeline lineno="63" refid="class_spice_interface_1a633fbbb963fee18636a408ce6c85d672" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Message&lt;TransRefMsgPayload&gt;*&gt;<sp/><ref refid="class_spice_interface_1a633fbbb963fee18636a408ce6c85d672" kindref="member">transRefStateOutMsgs</ref>;<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_spice_interface_1a54964e27753edcb18ed55efbca8093ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_spice_interface_1a54964e27753edcb18ed55efbca8093ea" kindref="member">SPICEDataPath</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="class_spice_interface_1a928f07e1efcf33dcb4dd9c8f20f03b15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_spice_interface_1a928f07e1efcf33dcb4dd9c8f20f03b15" kindref="member">referenceBase</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="class_spice_interface_1aa792e93ebf9ad2b437781bc244a4d981" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_spice_interface_1aa792e93ebf9ad2b437781bc244a4d981" kindref="member">zeroBase</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="class_spice_interface_1a05a6a03962d38fea9996bb7f49498456" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_spice_interface_1a05a6a03962d38fea9996bb7f49498456" kindref="member">timeOutPicture</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="class_spice_interface_1a95403c16fb0d05715fd62989ede7d31c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1a95403c16fb0d05715fd62989ede7d31c" kindref="member">SPICELoaded</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="class_spice_interface_1a161a0c76c6177777600df290afd636fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1a161a0c76c6177777600df290afd636fa" kindref="member">charBufferSize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="class_spice_interface_1ab1e130de1b13e421f6e44be815791ff3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*<ref refid="class_spice_interface_1ab1e130de1b13e421f6e44be815791ff3" kindref="member">spiceBuffer</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="class_spice_interface_1a0074d718fa71d5be716f100f161e4a7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_spice_interface_1a0074d718fa71d5be716f100f161e4a7a" kindref="member">UTCCalInit</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_spice_interface_1a465a4b35b44cd5a6a0cb14e2c0aa0904" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<ref refid="class_spice_interface_1a465a4b35b44cd5a6a0cb14e2c0aa0904" kindref="member">planetFrames</ref>;<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="class_spice_interface_1a1e0cfc50ec8ae35f82f14e2acb3f5ded" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1a1e0cfc50ec8ae35f82f14e2acb3f5ded" kindref="member">timeDataInit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="class_spice_interface_1a0c588735af532fa7c5e5432adb055036" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1a0c588735af532fa7c5e5432adb055036" kindref="member">J2000ETInit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="class_spice_interface_1aedb85311ec1305d51ffd80d95304ae5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1aedb85311ec1305d51ffd80d95304ae5f" kindref="member">J2000Current</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="class_spice_interface_1a73f33934c48df5747d2658226fd681da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1a73f33934c48df5747d2658226fd681da" kindref="member">julianDateCurrent</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80" refid="class_spice_interface_1a4bff839079f4ee152a5cbc4ae161372a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_spice_interface_1a4bff839079f4ee152a5cbc4ae161372a" kindref="member">GPSSeconds</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81" refid="class_spice_interface_1a577e80e85e70c4236acd79d87436e56c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="class_spice_interface_1a577e80e85e70c4236acd79d87436e56c" kindref="member">GPSWeek</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82" refid="class_spice_interface_1a5ac156d521dee515d008e232b005a931" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="class_spice_interface_1a5ac156d521dee515d008e232b005a931" kindref="member">GPSRollovers</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_spice_interface_1a9880413126777995028d1d1d91264745" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BSKLogger<sp/><ref refid="class_spice_interface_1a9880413126777995028d1d1d91264745" kindref="member">bskLogger</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>GPSEpochTime;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>JDGPSEpoch;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpicePlanetStateMsgPayload&gt;<sp/>planetData;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SpicePlanetStateMsgPayload&gt;<sp/>scData;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/environment/spiceInterface/spiceInterface.h"/>
  </compounddef>
</doxygen>
