<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="gauss__markov_8cpp" kind="file" language="C++">
    <compoundname>gauss_markov.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">math.h</includes>
    <includes refid="gauss__markov_8h" local="yes">gauss_markov.h</includes>
    <includes refid="linear_algebra_8h" local="yes">linearAlgebra.h</includes>
    <incdepgraph>
      <node id="10">
        <label>architecture/utilities/bskLogging.h</label>
        <link refid="bsk_logging_8h_source"/>
      </node>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/architecture/utilities/gauss_markov.cpp</label>
        <link refid="gauss__markov_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gauss_markov.h</label>
        <link refid="gauss__markov_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>linearAlgebra.h</label>
        <link refid="linear_algebra_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Eigen/Dense</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
      <node id="8">
        <label>random</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gauss_markov.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="class_gauss_markov_1a2dbbd8931027f0679b08f538dcafbd09" kindref="member">GaussMarkov::GaussMarkov</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;RNGSeed<sp/>=<sp/>0x1badcad1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>std::normal_distribution&lt;double&gt;::param_type<sp/>updatePair(0.0,<sp/>1.0/3.0);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rGen.seed((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)this-&gt;RNGSeed);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rNum.param(updatePair);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="class_gauss_markov_1a2dbbd8931027f0679b08f538dcafbd09" kindref="member">GaussMarkov::GaussMarkov</ref>(uint64_t<sp/>size,<sp/>uint64_t<sp/>newSeed)<sp/>:<sp/><ref refid="class_gauss_markov" kindref="compound">GaussMarkov</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;RNGSeed<sp/>=<sp/>newSeed;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;propMatrix.resize(size,size);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;propMatrix.fill(0.0);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;currentState.resize((int64_t)<sp/>size);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;currentState.fill(0.0);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;noiseMatrix.resize((int64_t)<sp/>size,<sp/>(int64_t)<sp/>size);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;noiseMatrix.fill(0.0);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;stateBounds.resize((int64_t)<sp/>size);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;stateBounds.fill(0.0);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;numStates<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rGen.seed((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)this-&gt;RNGSeed);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="class_gauss_markov_1a0cdb905c228b3754ef8e8b2ac57cb33e" kindref="member">GaussMarkov::~GaussMarkov</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gauss_markov_1a4d86a8d558d36400b50a8452640c2499" kindref="member">GaussMarkov::computeNextState</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>errorVector;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>ranNums;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((this-&gt;<ref refid="class_gauss_markov_1afe03833bdc5e43a6394870468e645726" kindref="member">propMatrix</ref>.size()<sp/>!=<sp/>this-&gt;noiseMatrix.size())<sp/>||</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint64_t)<sp/>this-&gt;propMatrix.size()<sp/>!=<sp/>this-&gt;numStates*this-&gt;numStates))</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gauss_markov_1a354e6ccc2332f93335e8b81d4bbc79d9" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;For<sp/>the<sp/>Gauss<sp/>Markov<sp/>model,<sp/>you<sp/>HAVE,<sp/>and<sp/>I<sp/>mean<sp/>HAVE,<sp/>to<sp/>have<sp/>your<sp/>propagate<sp/>and<sp/>noise<sp/>matrices<sp/>be<sp/>same<sp/>size<sp/>and<sp/>that<sp/>size<sp/>is<sp/>your<sp/>number<sp/>of<sp/>states<sp/>squared.<sp/><sp/>I<sp/>quit.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(uint64_t)<sp/>this-&gt;<ref refid="class_gauss_markov_1ac2f89fc01b969731d4bcf422759e089c" kindref="member">stateBounds</ref>.size()<sp/>!=<sp/>this-&gt;numStates)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gauss_markov_1a354e6ccc2332f93335e8b81d4bbc79d9" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;For<sp/>the<sp/>Gauss<sp/>Markov<sp/>model,<sp/>you<sp/>HAVE,<sp/>and<sp/>I<sp/>mean<sp/>HAVE,<sp/>to<sp/>have<sp/>your<sp/>walk<sp/>bounds<sp/>length<sp/>equal<sp/>to<sp/>your<sp/>number<sp/>of<sp/>states.<sp/>I<sp/>quit.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>errorVector<sp/>=<sp/>this-&gt;<ref refid="class_gauss_markov_1a47515c59e3631cc0f28f94fd8715cc77" kindref="member">currentState</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_gauss_markov_1a47515c59e3631cc0f28f94fd8715cc77" kindref="member">currentState</ref><sp/>=<sp/>this-&gt;<ref refid="class_gauss_markov_1afe03833bdc5e43a6394870468e645726" kindref="member">propMatrix</ref><sp/>*<sp/>errorVector;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>ranNums.resize((int64_t)<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i&lt;this-&gt;numStates;<sp/>i++)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranNums[i]<sp/>=<sp/>this-&gt;rNum(rGen);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_gauss_markov_1ac2f89fc01b969731d4bcf422759e089c" kindref="member">stateBounds</ref>[i]<sp/>&gt;<sp/>0.0){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stateCalc<sp/>=<sp/>fabs(this-&gt;<ref refid="class_gauss_markov_1a47515c59e3631cc0f28f94fd8715cc77" kindref="member">currentState</ref>[i])<sp/>&gt;<sp/>this-&gt;<ref refid="class_gauss_markov_1ac2f89fc01b969731d4bcf422759e089c" kindref="member">stateBounds</ref>[i]*1E-10<sp/>?<sp/>fabs(this-&gt;<ref refid="class_gauss_markov_1a47515c59e3631cc0f28f94fd8715cc77" kindref="member">currentState</ref>[i])<sp/>:<sp/>this-&gt;<ref refid="class_gauss_markov_1ac2f89fc01b969731d4bcf422759e089c" kindref="member">stateBounds</ref>[i];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>boundCheck<sp/>=<sp/>(this-&gt;<ref refid="class_gauss_markov_1ac2f89fc01b969731d4bcf422759e089c" kindref="member">stateBounds</ref>[i]*2.0<sp/>-<sp/>stateCalc)/stateCalc;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundCheck<sp/>=<sp/>boundCheck<sp/>&gt;<sp/>this-&gt;<ref refid="class_gauss_markov_1ac2f89fc01b969731d4bcf422759e089c" kindref="member">stateBounds</ref>[i]*1E-10<sp/>?<sp/>boundCheck<sp/>:<sp/>this-&gt;<ref refid="class_gauss_markov_1ac2f89fc01b969731d4bcf422759e089c" kindref="member">stateBounds</ref>[i]*1E-10;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundCheck<sp/>=<sp/>1.0/exp(boundCheck*boundCheck*boundCheck);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundCheck<sp/>*=<sp/>copysign(boundCheck,<sp/>-this-&gt;<ref refid="class_gauss_markov_1a47515c59e3631cc0f28f94fd8715cc77" kindref="member">currentState</ref>[i]);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranNums[i]<sp/>+=<sp/>boundCheck;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>errorVector<sp/>=<sp/>this-&gt;<ref refid="class_gauss_markov_1a73009f39d3b4b2c97e937ee8887422ab" kindref="member">noiseMatrix</ref><sp/>*<sp/>ranNums;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_gauss_markov_1a47515c59e3631cc0f28f94fd8715cc77" kindref="member">currentState</ref><sp/>+=<sp/>errorVector;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/architecture/utilities/gauss_markov.cpp"/>
  </compounddef>
</doxygen>
