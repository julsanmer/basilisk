<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="mrp_rotation_8c" kind="file" language="C++">
    <compoundname>mrpRotation.c</compoundname>
    <includes refid="mrp_rotation_8h" local="yes">fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="yes">fswAlgorithms/fswUtilities/fswDefinitions.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/rigidBodyKinematics.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c</label>
        <link refid="mrp_rotation_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h</label>
        <link refid="mrp_rotation_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="11">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="10">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="12">
        <label>architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="5">
        <label>cMsgCInterface/AttRefMsg_C.h</label>
      </node>
      <node id="4">
        <label>cMsgCInterface/AttStateMsg_C.h</label>
      </node>
      <node id="9">
        <label>fswAlgorithms/fswUtilities/fswDefinitions.h</label>
      </node>
      <node id="8">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="mrp_rotation_8c_1adfe4e5fa92c861c7c5bfecafe0102030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_mrpRotation</definition>
        <argsstring>(mrpRotationConfig *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_mrpRotation</name>
        <param>
          <type><ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
<para>This method initializes the configData for mrpRotation model. It creates the module output message. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the null space control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" line="40" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="mrp_rotation_8c_1a56a033ed8b084cb8009cd10ff613415e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_mrpRotation</definition>
        <argsstring>(mrpRotationConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_mrpRotation</name>
        <param>
          <type><ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
<para>This resets the module to original states. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the null space control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" line="54" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" bodystart="54" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="mrp_rotation_8c_1a10871218b2feaea0cc095348d85bfc55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_mrpRotation</definition>
        <argsstring>(mrpRotationConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_mrpRotation</name>
        <param>
          <type><ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
<para>This method takes the input attitude reference frame, and and superimposes the dynamics MRP scanning motion on top of this. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the mrpRotation module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID associated with the configData </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>read in input reference frame message</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Check if a desired attitude configuration message exists. This allows for dynamic changes to the desired MRP rotation</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute time step to use in the integration downstream</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute output reference frame</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>write attitude guidance reference output</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Update last time the module was called to current call time</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" line="75" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" bodystart="75" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="mrp_rotation_8c_1ac25b30d633a7498e043e59dbd1be2b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checkRasterCommands</definition>
        <argsstring>(mrpRotationConfig *configData)</argsstring>
        <name>checkRasterCommands</name>
        <param>
          <type><ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <briefdescription>
<para>This function checks if there is a new commanded raster maneuver message available. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the mrpRotation module </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>check if a new attitude reference command message content is availble</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>copy over the commanded initial MRP and rate information</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>reset the prior commanded attitude state variables</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" line="125" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" bodystart="125" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="mrp_rotation_8c_1a5026fb8adc993ae9f003d1668aa050bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void computeTimeStep</definition>
        <argsstring>(mrpRotationConfig *configData, uint64_t callTime)</argsstring>
        <name>computeTimeStep</name>
        <param>
          <type><ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <briefdescription>
<para>This function computes control update time. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the mrpRotation module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" line="147" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" bodystart="147" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="mrp_rotation_8c_1a73523b22ce747907fb04af0c7b3c2c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void computeMRPRotationReference</definition>
        <argsstring>(mrpRotationConfig *configData, double sigma_R0N[3], double omega_R0N_N[3], double domega_R0N_N[3], AttRefMsgPayload *attRefOut)</argsstring>
        <name>computeMRPRotationReference</name>
        <param>
          <type><ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma_R0N</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>omega_R0N_N</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>domega_R0N_N</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>AttRefMsgPayload *</type>
          <declname>attRefOut</declname>
        </param>
        <briefdescription>
<para>This function computes the reference (MRP attitude Set, angular velocity and angular acceleration) associated with a rotation defined in terms of an initial MRP set and a constant angular velocity vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the mrpRotation module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sigma_R0N</parametername>
</parameternamelist>
<parameterdescription>
<para>The input reference attitude using MRPs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>omega_R0N_N</parametername>
</parameternamelist>
<parameterdescription>
<para>The input reference frame angular rate vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domega_R0N_N</parametername>
</parameternamelist>
<parameterdescription>
<para>The input reference frame angular acceleration vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attRefOut</parametername>
</parameternamelist>
<parameterdescription>
<para>The output message copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>Compute attitude reference frame R/N information</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute angular velocity of R/N</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Compute angular acceleration of R/N</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" line="167" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c" bodystart="167" bodyend="201"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>MRP<sp/>Rotation<sp/>Guidance<sp/>Module<sp/>with<sp/>a<sp/>Constant<sp/>Body<sp/>Rate<sp/>Vector</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fswAlgorithms/attGuidance/mrpRotation/mrpRotation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fswAlgorithms/fswUtilities/fswDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Support<sp/>files.<sp/><sp/>Be<sp/>sure<sp/>to<sp/>use<sp/>the<sp/>absolute<sp/>path<sp/>relative<sp/>to<sp/>Basilisk<sp/>directory.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_mrpRotation(<ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsg_C_init(&amp;configData-&gt;<ref refid="structmrp_rotation_config_1a875097ffd1bf430eb507e1fcb2816307" kindref="member">attRefOutMsg</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_mrpRotation(<ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>required<sp/>input<sp/>messages<sp/>are<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AttRefMsg_C_isLinked(&amp;configData-&gt;<ref refid="structmrp_rotation_config_1a032c93a075189c70a3996d55fd4bad4c" kindref="member">attRefInMsg</ref>))<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="structmrp_rotation_config_1a0ad3f0a5ad863b837ed6c4e56e186384" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>mrpRotation.attRefInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a2ae5d71f7ea1b226fd052a5704386740" kindref="member">priorTime</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>v3SetZero(configData-&gt;<ref refid="structmrp_rotation_config_1aa98147aea637f99836f94b07b1702fcb" kindref="member">priorCmdSet</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>v3SetZero(configData-&gt;<ref refid="structmrp_rotation_config_1a44fcda1412f09bd95abaadaa32fd5f56" kindref="member">priorCmdRates</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_mrpRotation(<ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-<sp/>Read<sp/>input<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsgPayload<sp/>inputRef;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[-]<sp/>read<sp/>in<sp/>the<sp/>[R_0N]<sp/>input<sp/>reference<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsgPayload<sp/>attRefOut;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[-]<sp/>structure<sp/>for<sp/>the<sp/>Reference<sp/>frame<sp/>output<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>inputRef<sp/>=<sp/>AttRefMsg_C_read(&amp;configData-&gt;<ref refid="structmrp_rotation_config_1a032c93a075189c70a3996d55fd4bad4c" kindref="member">attRefInMsg</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AttStateMsg_C_isLinked(&amp;configData-&gt;<ref refid="structmrp_rotation_config_1a5f80e107083577e43ba8529ffb2f9c37" kindref="member">desiredAttInMsg</ref>))</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttStateMsgPayload<sp/>attStates;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[-]<sp/>initial<sp/>[RR_0]<sp/>attitude<sp/>state<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-<sp/>Read<sp/>Raster<sp/>Manager<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attStates<sp/>=<sp/>AttStateMsg_C_read(&amp;configData-&gt;<ref refid="structmrp_rotation_config_1a5f80e107083577e43ba8529ffb2f9c37" kindref="member">desiredAttInMsg</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-<sp/>Save<sp/>commanded<sp/>MRP<sp/>set<sp/>and<sp/>body<sp/>rates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(attStates.state,<sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a4d0d55e466dad06c73494b2b053fb4f4" kindref="member">cmdSet</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(attStates.rate,<sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a2486db4ed77cd4b7bfa3b0e661f229e5" kindref="member">cmdRates</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-<sp/>Check<sp/>the<sp/>command<sp/>is<sp/>new<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkRasterCommands(configData);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>computeTimeStep(configData,<sp/>callTime);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>attRefOut<sp/>=<sp/>AttRefMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>computeMRPRotationReference(configData,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputRef.sigma_RN,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputRef.omega_RN_N,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputRef.domega_RN_N,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;attRefOut);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsg_C_write(&amp;attRefOut,<sp/>&amp;configData-&gt;<ref refid="structmrp_rotation_config_1a875097ffd1bf430eb507e1fcb2816307" kindref="member">attRefOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a2ae5d71f7ea1b226fd052a5704386740" kindref="member">priorTime</ref><sp/>=<sp/>callTime;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkRasterCommands(<ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref><sp/>*configData)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>prevCmdActive<sp/>=<sp/>v3IsEqual(configData-&gt;<ref refid="structmrp_rotation_config_1a4d0d55e466dad06c73494b2b053fb4f4" kindref="member">cmdSet</ref>,<sp/>configData-&gt;<ref refid="structmrp_rotation_config_1aa98147aea637f99836f94b07b1702fcb" kindref="member">priorCmdSet</ref><sp/>,<sp/>1E-12)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>v3IsEqual(configData-&gt;<ref refid="structmrp_rotation_config_1a2486db4ed77cd4b7bfa3b0e661f229e5" kindref="member">cmdRates</ref>,<sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a44fcda1412f09bd95abaadaa32fd5f56" kindref="member">priorCmdRates</ref><sp/>,<sp/>1E-12);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!prevCmdActive)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="structmrp_rotation_config_1a4d0d55e466dad06c73494b2b053fb4f4" kindref="member">cmdSet</ref>,<sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a025cce359d0824e4b07b7a34fb610975" kindref="member">mrpSet</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="structmrp_rotation_config_1a2486db4ed77cd4b7bfa3b0e661f229e5" kindref="member">cmdRates</ref>,<sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a60ab73151de35c7f6f43540d840002ab" kindref="member">omega_RR0_R</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="structmrp_rotation_config_1a4d0d55e466dad06c73494b2b053fb4f4" kindref="member">cmdSet</ref>,<sp/>configData-&gt;<ref refid="structmrp_rotation_config_1aa98147aea637f99836f94b07b1702fcb" kindref="member">priorCmdSet</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="structmrp_rotation_config_1a2486db4ed77cd4b7bfa3b0e661f229e5" kindref="member">cmdRates</ref>,<sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a44fcda1412f09bd95abaadaa32fd5f56" kindref="member">priorCmdRates</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeTimeStep(<ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configData-&gt;<ref refid="structmrp_rotation_config_1a2ae5d71f7ea1b226fd052a5704386740" kindref="member">priorTime</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a17ac7a36465f230813b3b57a2c5771a9" kindref="member">dt</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a17ac7a36465f230813b3b57a2c5771a9" kindref="member">dt</ref><sp/>=<sp/>(callTime<sp/>-<sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a2ae5d71f7ea1b226fd052a5704386740" kindref="member">priorTime</ref>)*NANO2SEC;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeMRPRotationReference(<ref refid="structmrp_rotation_config" kindref="compound">mrpRotationConfig</ref><sp/>*configData,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma_R0N[3],</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_R0N_N[3],</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>domega_R0N_N[3],</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttRefMsgPayload<sp/><sp/><sp/>*attRefOut)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>attIncrement[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[]<sp/>increment<sp/>in<sp/>MRP<sp/>attitude<sp/>coordinates<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>RR0[3][3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[]<sp/>DCM<sp/>rotating<sp/>from<sp/>R0<sp/>to<sp/>R<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R0N[3][3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[]<sp/>DCM<sp/>rotating<sp/>from<sp/>N<sp/>to<sp/>R0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>RN[3][3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[]<sp/>DCM<sp/>rotating<sp/>from<sp/>N<sp/>to<sp/>R<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaDot_RR0[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[1/s]<sp/>MRP<sp/>rates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B[3][3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[]<sp/>B<sp/>matrix<sp/>relating<sp/>omega<sp/>to<sp/>MRP<sp/>rates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_RR0_N[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[r/s]<sp/>angular<sp/>velocity<sp/>of<sp/>R<sp/>frame<sp/>relative<sp/>to<sp/>input<sp/>R0<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>domega_RR0_N[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[r/s^2]<sp/>inertial<sp/>derivative<sp/>of<sp/>angular<sp/>velocity<sp/>vector<sp/>between<sp/>R<sp/>and<sp/>R0<sp/>frames<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2C(sigma_R0N,<sp/>R0N);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>BmatMRP(configData-&gt;<ref refid="structmrp_rotation_config_1a025cce359d0824e4b07b7a34fb610975" kindref="member">mrpSet</ref>,<sp/>B);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(B,<sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a60ab73151de35c7f6f43540d840002ab" kindref="member">omega_RR0_R</ref>,<sp/>sigmaDot_RR0);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(0.25,<sp/>sigmaDot_RR0,<sp/>sigmaDot_RR0);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(configData-&gt;<ref refid="structmrp_rotation_config_1a17ac7a36465f230813b3b57a2c5771a9" kindref="member">dt</ref>,<sp/>sigmaDot_RR0,<sp/>attIncrement);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(configData-&gt;<ref refid="structmrp_rotation_config_1a025cce359d0824e4b07b7a34fb610975" kindref="member">mrpSet</ref>,<sp/>attIncrement,<sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a025cce359d0824e4b07b7a34fb610975" kindref="member">mrpSet</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>MRPswitch(configData-&gt;<ref refid="structmrp_rotation_config_1a025cce359d0824e4b07b7a34fb610975" kindref="member">mrpSet</ref>,<sp/>1.0,<sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a025cce359d0824e4b07b7a34fb610975" kindref="member">mrpSet</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2C(configData-&gt;<ref refid="structmrp_rotation_config_1a025cce359d0824e4b07b7a34fb610975" kindref="member">mrpSet</ref>,<sp/>RR0);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33(RR0,<sp/>R0N,<sp/>RN);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>C2MRP(RN,<sp/>attRefOut-&gt;sigma_RN);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>m33tMultV3(RN,<sp/>configData-&gt;<ref refid="structmrp_rotation_config_1a60ab73151de35c7f6f43540d840002ab" kindref="member">omega_RR0_R</ref>,<sp/>omega_RR0_N);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(omega_R0N_N,<sp/>omega_RR0_N,<sp/>attRefOut-&gt;omega_RN_N);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(omega_R0N_N,<sp/>omega_RR0_N,<sp/>domega_RR0_N);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(domega_RR0_N,<sp/>domega_R0N_N,<sp/>attRefOut-&gt;domega_RN_N);</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/mrpRotation/mrpRotation.c"/>
  </compounddef>
</doxygen>
