<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="constrained_attitude_maneuver_8cpp" kind="file" language="C++">
    <compoundname>constrainedAttitudeManeuver.cpp</compoundname>
    <includes refid="constrained_attitude_maneuver_8h" local="yes">fswAlgorithms/attGuidance/constrainedAttitudeManeuver/constrainedAttitudeManeuver.h</includes>
    <includes local="no">map</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="yes">architecture/utilities/avsEigenSupport.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/rigidBodyKinematics.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/constrainedAttitudeManeuver/constrainedAttitudeManeuver.cpp</label>
        <link refid="constrained_attitude_maneuver_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fswAlgorithms/attGuidance/constrainedAttitudeManeuver/constrainedAttitudeManeuver.h</label>
        <link refid="constrained_attitude_maneuver_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="6">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="10">
        <label>architecture/msgPayloadDefC/SCStatesMsgPayload.h</label>
      </node>
      <node id="12">
        <label>architecture/msgPayloadDefC/SpicePlanetStateMsgPayload.h</label>
      </node>
      <node id="11">
        <label>architecture/msgPayloadDefC/VehicleConfigMsgPayload.h</label>
      </node>
      <node id="5">
        <label>architecture/utilities/BSpline.h</label>
      </node>
      <node id="18">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="4">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="19">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="21">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="20">
        <label>architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="13">
        <label>cMsgCInterface/AttRefMsg_C.h</label>
      </node>
      <node id="9">
        <label>fstream</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="17">
        <label>math.h</label>
      </node>
      <node id="14">
        <label>sstream</label>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="16">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="constrained_attitude_maneuver_8cpp_1a5275f95684ec15fd4f3909374ce54e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mirrorFunction</definition>
        <argsstring>(int indices[3], int mirrorIndices[8][3])</argsstring>
        <name>mirrorFunction</name>
        <param>
          <type>int</type>
          <declname>indices</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>int</type>
          <declname>mirrorIndices</declname>
          <array>[8][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This helper function returns the coordinates of the 8 symmetrical points to a point in 3D cartesian space. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/constrainedAttitudeManeuver/constrainedAttitudeManeuver.cpp" line="824" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/constrainedAttitudeManeuver/constrainedAttitudeManeuver.cpp" bodystart="824" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="constrained_attitude_maneuver_8cpp_1aa3823b372755ada3842d628bb7d777d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void neighboringNodes</definition>
        <argsstring>(int indices[3], int neighbors[26][3])</argsstring>
        <name>neighboringNodes</name>
        <param>
          <type>int</type>
          <declname>indices</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>int</type>
          <declname>neighbors</declname>
          <array>[26][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For a set of indices, this helper function returns the indices of the 26 immediate neighbors. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/constrainedAttitudeManeuver/constrainedAttitudeManeuver.cpp" line="837" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/constrainedAttitudeManeuver/constrainedAttitudeManeuver.cpp" bodystart="837" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="constrained_attitude_maneuver_8cpp_1a7154302ea6295ea82d2ecd8b286387cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double distance</definition>
        <argsstring>(Node n1, Node n2)</argsstring>
        <name>distance</name>
        <param>
          <type><ref refid="class_node" kindref="compound">Node</ref></type>
          <declname>n1</declname>
        </param>
        <param>
          <type><ref refid="class_node" kindref="compound">Node</ref></type>
          <declname>n2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function implements the MRP cartesian distance between 2 nodes. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/constrainedAttitudeManeuver/constrainedAttitudeManeuver.cpp" line="868" column="8" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/constrainedAttitudeManeuver/constrainedAttitudeManeuver.cpp" bodystart="868" bodyend="905"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2022,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fswAlgorithms/attGuidance/constrainedAttitudeManeuver/constrainedAttitudeManeuver.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/avsEigenSupport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="class_node_1ad7a34779cad45d997bfd6d3d8043c75f" kindref="member">Node::Node</ref>()</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="class_node_1ad7a34779cad45d997bfd6d3d8043c75f" kindref="member">Node::Node</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma_BN[3],<sp/><ref refid="structconstraint_struct" kindref="compound">constraintStruct</ref><sp/>constraints,<sp/><ref refid="structsc_boresight_struct" kindref="compound">scBoresightStruct</ref><sp/>boresights)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MRPswitch(sigma_BN,<sp/>1,<sp/>this-&gt;sigma_BN);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>,<sp/>this-&gt;sigma_BN);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_1a7bf10372b4dfdc459bab526e9f8807ef" kindref="member">isBoundary</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(v3Norm(this-&gt;sigma_BN)<sp/>-<sp/>1)<sp/>&lt;<sp/>1e-5)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_1a7bf10372b4dfdc459bab526e9f8807ef" kindref="member">isBoundary</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_1a86c42e974ec5d75969bafa29fc67be7b" kindref="member">heuristic</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_1abd42217049ea96860a06c5b9dc85d6a4" kindref="member">priority</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_1a09f110294404f74ec368916089fc634c" kindref="member">neighborCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>constraint<sp/>compliance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_1a16bb76608b79cb5f53a268433b7614f5" kindref="member">isFree</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>BN[3][3];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2C(this-&gt;sigma_BN,<sp/>BN);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>boresight_B[3],<sp/>boresight_N[3];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep-out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constraints.<ref refid="structconstraint_struct_1a025adea3b26bcdace9437402431d6f71" kindref="member">keepOut</ref>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>boresights.<ref refid="structsc_boresight_struct_1a2239171c73b7553f6e69e6ecb121e17a" kindref="member">keepOutBoresightCount</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>N;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boresight_B[j]<sp/>=<sp/>boresights.<ref refid="structsc_boresight_struct_1a3c9075c2c922832c06fdf8ca90dcde20" kindref="member">keepOutBoresight_B</ref>[n][j];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3tMultM33(boresight_B,<sp/>BN,<sp/>boresight_N);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>v3Dot(boresight_N,<sp/>constraints.<ref refid="structconstraint_struct_1a42595bcd6c4ca04f2a3d92fe835fc76f" kindref="member">keepOutDir_N</ref>)<sp/>&gt;=<sp/>cos(boresights.<ref refid="structsc_boresight_struct_1a238dff6c8501b0ada8e0c0b3c25e1f06" kindref="member">keepOutFov</ref>[n])<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_1a16bb76608b79cb5f53a268433b7614f5" kindref="member">isFree</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep-in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constraints.<ref refid="structconstraint_struct_1afea4cf4de8dee7bc4e4e28f876d408f4" kindref="member">keepIn</ref>)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>boresights.<ref refid="structsc_boresight_struct_1a2fa3a9ac733077c52c754480eaef8cdb" kindref="member">keepInBoresightCount</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isIn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>N;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boresight_B[j]<sp/>=<sp/>boresights.<ref refid="structsc_boresight_struct_1ab0ee17085ddb54f88a443b80f2322c08" kindref="member">keepInBoresight_B</ref>[n][j];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3tMultM33(boresight_B,<sp/>BN,<sp/>boresight_N);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>v3Dot(boresight_N,<sp/>constraints.<ref refid="structconstraint_struct_1ae7a5d45bc3bfee806ea521af40449af2" kindref="member">keepInDir_N</ref>)<sp/>&gt;=<sp/>cos(boresights.<ref refid="structsc_boresight_struct_1ad38487d9bf0692f2b2964b1dd7f6b5ec" kindref="member">keepInFov</ref>[n])<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isIn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isIn)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_1a16bb76608b79cb5f53a268433b7614f5" kindref="member">isFree</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="class_node_1aa0840c3cb5c7159be6d992adecd2097c" kindref="member">Node::~Node</ref>()</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_node_1a33679f58e4bd98058323c411ba0bd84b" kindref="member">Node::appendNeighbor</ref>(<ref refid="class_node" kindref="compound">Node</ref><sp/>*node)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_1a75687689b00b7fa320d2203300b6d10c" kindref="member">neighbors</ref>[this-&gt;<ref refid="class_node_1a09f110294404f74ec368916089fc634c" kindref="member">neighborCount</ref>]<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_1a09f110294404f74ec368916089fc634c" kindref="member">neighborCount</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="class_node_list_1a7cf92e8316f291e0a4e4ad608756887f" kindref="member">NodeList::NodeList</ref>()</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<sp/>N<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="class_node_list_1a77b664c0c6c93d1c6eccbd10581396af" kindref="member">NodeList::~NodeList</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_node_list_1adbc3a6a6f80f489090675454587ec31d" kindref="member">NodeList::append</ref>(<ref refid="class_node" kindref="compound">Node</ref>*<sp/>node)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[this-&gt;<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>]<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;N<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_node_list_1a2a5b718b9378c5990e11ba7896cb6edd" kindref="member">NodeList::pop</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>M;<sp/>m<sp/>&lt;<sp/>this-&gt;N-1;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[m]<sp/>=<sp/>this-&gt;<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[m+1];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;N<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_node_list_1a036e517ea3194bfcac5d4abe4668d8a3" kindref="member">NodeList::clear</ref>()</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;N<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_node_list_1a5abac40b4e56711c9a19cd7a4169e667" kindref="member">NodeList::swap</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>*p1<sp/>=<sp/>this-&gt;<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[m];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>*p2<sp/>=<sp/>this-&gt;<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[n];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[m]<sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[n]<sp/>=<sp/>p1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_node_list_1ab3cdb45ce993f0980907f93c890bc7e3" kindref="member">NodeList::sort</ref>()</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>this-&gt;<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>1e5;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/>=<sp/>this-&gt;<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>n;<sp/>m<sp/>&lt;<sp/>this-&gt;<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[m]-&gt;priority<sp/>&lt;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>this-&gt;<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[m]-&gt;<ref refid="class_node_1abd42217049ea96860a06c5b9dc85d6a4" kindref="member">priority</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_list_1a5abac40b4e56711c9a19cd7a4169e667" kindref="member">swap</ref>(n,<sp/>M);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_node_list_1ac79b21396286d1b152a1a4574da17959" kindref="member">NodeList::contains</ref>(<ref refid="class_node" kindref="compound">Node</ref><sp/>*node)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>this-&gt;<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>this-&gt;<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[n])<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flag;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="class_constrained_attitude_maneuver_1a473555c6f2dea9b0fed600f9da4c8826" kindref="member">ConstrainedAttitudeManeuver::ConstrainedAttitudeManeuver</ref>()</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="class_constrained_attitude_maneuver_1a473555c6f2dea9b0fed600f9da4c8826" kindref="member">ConstrainedAttitudeManeuver::ConstrainedAttitudeManeuver</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;N<sp/>=<sp/><ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scStateMsgBuffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a28a1869a66f16db0631385d592f38e1e" kindref="member">scStateInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;keepOutCelBodyMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a5a3e1e294b08fe392a02cbeef9d1e86d" kindref="member">keepOutCelBodyInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;keepInCelBodyMsgBuffer<sp/><sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1aab5dd293e3519e62fe493f7c3f9b20ae" kindref="member">keepInCelBodyInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="class_constrained_attitude_maneuver_1aed54d1dac3ae2270f740da2bd45f0e7a" kindref="member">ConstrainedAttitudeManeuver::~ConstrainedAttitudeManeuver</ref>()</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a0d9d2f53f13a7e2cd04e1531eeaa0279" kindref="member">ConstrainedAttitudeManeuver::SelfInit</ref>(){</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsg_C_init(&amp;this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae07d809c429130f800e0c6d56284690f" kindref="member">attRefOutMsgC</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a01600778200d09d2ee321e09aa51d0c1" kindref="member">ConstrainedAttitudeManeuver::appendKeepOutDirection</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>direction[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Fov)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref><sp/>=<sp/>this-&gt;boresights.<ref refid="structsc_boresight_struct_1a2239171c73b7553f6e69e6ecb121e17a" kindref="member">keepOutBoresightCount</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Normalize(direction,<sp/>this-&gt;boresights.<ref refid="structsc_boresight_struct_1a3c9075c2c922832c06fdf8ca90dcde20" kindref="member">keepOutBoresight_B</ref>[<ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>]);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;boresights.<ref refid="structsc_boresight_struct_1a238dff6c8501b0ada8e0c0b3c25e1f06" kindref="member">keepOutFov</ref>[<ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>]<sp/>=<sp/>Fov;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;boresights.<ref refid="structsc_boresight_struct_1a2239171c73b7553f6e69e6ecb121e17a" kindref="member">keepOutBoresightCount</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a0d44eb8df6afb213180cb4705c392490" kindref="member">ConstrainedAttitudeManeuver::appendKeepInDirection</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>direction[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Fov)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref><sp/>=<sp/>this-&gt;boresights.<ref refid="structsc_boresight_struct_1a2fa3a9ac733077c52c754480eaef8cdb" kindref="member">keepInBoresightCount</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Normalize(direction,<sp/>this-&gt;boresights.<ref refid="structsc_boresight_struct_1ab0ee17085ddb54f88a443b80f2322c08" kindref="member">keepInBoresight_B</ref>[<ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>]);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;boresights.<ref refid="structsc_boresight_struct_1ad38487d9bf0692f2b2964b1dd7f6b5ec" kindref="member">keepInFov</ref>[<ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>]<sp/>=<sp/>Fov;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;boresights.<ref refid="structsc_boresight_struct_1a2fa3a9ac733077c52c754480eaef8cdb" kindref="member">keepInBoresightCount</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a4518d43390820f3c4e7002f9f5c45cf7" kindref="member">ConstrainedAttitudeManeuver::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a4cab805a293796f7fdd25fe2659408ad" kindref="member">ReadInputs</ref>();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>startNode<sp/>=<sp/><ref refid="class_node" kindref="compound">Node</ref>(this-&gt;scStateMsgBuffer.sigma_BN,<sp/>this-&gt;constraints,<sp/>this-&gt;boresights);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>goalNode<sp/>=<sp/><ref refid="class_node" kindref="compound">Node</ref>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a976c7642b4c449af53a59a3ea521c244" kindref="member">sigma_BN_goal</ref>,<sp/>this-&gt;constraints,<sp/>this-&gt;boresights);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!startNode.<ref refid="class_node_1a16bb76608b79cb5f53a268433b7614f5" kindref="member">isFree</ref>)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a5934da4e266609004605e75132939a34" kindref="member">bskLogger</ref>.bskLog(BSK_WARNING,<sp/></highlight><highlight class="stringliteral">&quot;ConstraintAttitudeManeuver:<sp/>the<sp/>initial<sp/>attitude<sp/>of<sp/>the<sp/>S/C<sp/>is<sp/>not<sp/>constraint-compliant.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!goalNode.<ref refid="class_node_1a16bb76608b79cb5f53a268433b7614f5" kindref="member">isFree</ref>)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a5934da4e266609004605e75132939a34" kindref="member">bskLogger</ref>.bskLog(BSK_WARNING,<sp/></highlight><highlight class="stringliteral">&quot;ConstraintAttitudeManeuver:<sp/>the<sp/>target<sp/>attitude<sp/>of<sp/>the<sp/>S/C<sp/>is<sp/>not<sp/>constraint-compliant.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1af3ac1647f4ae3d5d014b8b9ce773c949" kindref="member">GenerateGrid</ref>(startNode,<sp/>goalNode);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a4e7a9392cd46cee69d0be80114b66094" kindref="member">costFcnType</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1aec6325480bd8f20ca50ffc9dbedc597a" kindref="member">AStar</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a4e7a9392cd46cee69d0be80114b66094" kindref="member">costFcnType</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a7ddbaf53976802282fe5d96edf677dfa" kindref="member">effortBasedAStar</ref>();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a5934da4e266609004605e75132939a34" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;ConstraintAttitudeManeuver:<sp/>costFcnType<sp/>has<sp/>not<sp/>been<sp/>specified.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a9a74181f7dc508d0af9f5983daf14d4f" kindref="member">pathHandle</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1adb8fcc0d1903f58f1b01aa9d9d66a4a1" kindref="member">spline</ref>();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab0a4d019edc902829029da41dac70566" kindref="member">pathCost</ref><sp/>=<sp/><ref refid="class_constrained_attitude_maneuver_1adb8f21d9661285908ac59088a97596a3" kindref="member">effortEvaluation</ref>();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1af6663210bde903617edb062c48a9bc9c" kindref="member">ConstrainedAttitudeManeuver::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>CurrentSimNanos<sp/>*<sp/>1e-9;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma_RN[3],<sp/>sigmaDot_RN[3],<sp/>sigmaDDot_RN[3],<sp/>omega_RN_R[3],<sp/>omegaDot_RN_R[3];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>.getData(t,<sp/>sigma_RN,<sp/>sigmaDot_RN,<sp/>sigmaDDot_RN);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>dMRP2Omega(sigma_RN,<sp/>sigmaDot_RN,<sp/>omega_RN_R);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>ddMRP2dOmega(sigma_RN,<sp/>sigmaDot_RN,<sp/>sigmaDDot_RN,<sp/>omegaDot_RN_R);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>attitude<sp/>output<sp/>message<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsgPayload<sp/>attMsgBuffer;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>attMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a040a746e5dd20f991d46f8afd5ce74d7" kindref="member">attRefOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>direction<sp/>cosine<sp/>matrix<sp/>[RN]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>RN[3][3];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2C(sigma_RN,<sp/>RN);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(sigma_RN,<sp/>attMsgBuffer.sigma_RN);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>v3tMultM33(omega_RN_R,<sp/>RN,<sp/>attMsgBuffer.omega_RN_N);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>v3tMultM33(omegaDot_RN_R,<sp/>RN,<sp/>attMsgBuffer.domega_RN_N);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>output<sp/>attitude<sp/>reference<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a040a746e5dd20f991d46f8afd5ce74d7" kindref="member">attRefOutMsg</ref>.write(&amp;attMsgBuffer,<sp/>this-&gt;moduleID,<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>to<sp/>the<sp/>C-wrapped<sp/>output<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>AttRefMsg_C_write(&amp;attMsgBuffer,<sp/>&amp;this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae07d809c429130f800e0c6d56284690f" kindref="member">attRefOutMsgC</ref>,<sp/>this-&gt;moduleID,<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a4cab805a293796f7fdd25fe2659408ad" kindref="member">ConstrainedAttitudeManeuver::ReadInputs</ref>()</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>relPosVector[3];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a28a1869a66f16db0631385d592f38e1e" kindref="member">scStateInMsg</ref>.isWritten())<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;scStateMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a28a1869a66f16db0631385d592f38e1e" kindref="member">scStateInMsg</ref>();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a19b88b419b2568f7ce7be9f945f235dd" kindref="member">vehicleConfigInMsg</ref>.isWritten())<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;vehicleConfigMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a19b88b419b2568f7ce7be9f945f235dd" kindref="member">vehicleConfigInMsg</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a5a3e1e294b08fe392a02cbeef9d1e86d" kindref="member">keepOutCelBodyInMsg</ref>.isWritten())<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;keepOutCelBodyMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a5a3e1e294b08fe392a02cbeef9d1e86d" kindref="member">keepOutCelBodyInMsg</ref>();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Subtract(this-&gt;keepOutCelBodyMsgBuffer.PositionVector,<sp/>this-&gt;scStateMsgBuffer.r_BN_N,<sp/>relPosVector);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Normalize(relPosVector,<sp/>this-&gt;constraints.<ref refid="structconstraint_struct_1a42595bcd6c4ca04f2a3d92fe835fc76f" kindref="member">keepOutDir_N</ref>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;constraints.<ref refid="structconstraint_struct_1a025adea3b26bcdace9437402431d6f71" kindref="member">keepOut</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1aab5dd293e3519e62fe493f7c3f9b20ae" kindref="member">keepInCelBodyInMsg</ref>.isWritten())<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;keepInCelBodyMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1aab5dd293e3519e62fe493f7c3f9b20ae" kindref="member">keepInCelBodyInMsg</ref>();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Subtract(this-&gt;keepInCelBodyMsgBuffer.PositionVector,<sp/>this-&gt;scStateMsgBuffer.r_BN_N,<sp/>relPosVector);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Normalize(relPosVector,<sp/>this-&gt;constraints.<ref refid="structconstraint_struct_1ae7a5d45bc3bfee806ea521af40449af2" kindref="member">keepInDir_N</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;constraints.<ref refid="structconstraint_struct_1afea4cf4de8dee7bc4e4e28f876d408f4" kindref="member">keepIn</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_constrained_attitude_maneuver_1a5a3e1e294b08fe392a02cbeef9d1e86d" kindref="member">keepOutCelBodyInMsg</ref>.isWritten()<sp/>&amp;&amp;<sp/>!this-&gt;keepInCelBodyInMsg.isWritten())<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a5934da4e266609004605e75132939a34" kindref="member">bskLogger</ref>.bskLog(BSK_WARNING,<sp/></highlight><highlight class="stringliteral">&quot;ConstraintAttitudeManeuver:<sp/>no<sp/>celBodyMsgs<sp/>are<sp/>connected.<sp/>There<sp/>are<sp/>no<sp/>rotational<sp/>constraints.<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1af3ac1647f4ae3d5d014b8b9ce773c949" kindref="member">ConstrainedAttitudeManeuver::GenerateGrid</ref>(<ref refid="class_node" kindref="compound">Node</ref><sp/>startNode,<sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>goalNode)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref><sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u[20];</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u[n]<sp/>=<sp/>n<sp/>/<sp/>((double)<ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>internal<sp/>nodes<sp/>(|sigma_BN|<sp/>&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indices[3],<sp/>mirrorIndices[8][3];</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma_BN[3];</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/><ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pow(u[i],2)<sp/>+<sp/>pow(u[j],2)<sp/>+<sp/>pow(u[k],2)<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[0]<sp/>=<sp/>i;<sp/>indices[1]<sp/>=<sp/>j;<sp/>indices[2]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mirrorFunction(indices,<sp/>mirrorIndices);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>8;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[mirrorIndices[m][0]][mirrorIndices[m][1]].count(mirrorIndices[m][2])<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>3;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices[p]<sp/>!=<sp/>0)<sp/>{<sp/>sigma_BN[p]<sp/>=<sp/>mirrorIndices[m][p]/indices[p]*u[indices[p]];<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>sigma_BN[p]<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[mirrorIndices[m][0]][mirrorIndices[m][1]][mirrorIndices[m][2]]<sp/>=<sp/><ref refid="class_node" kindref="compound">Node</ref>(sigma_BN,<sp/>this-&gt;constraints,<sp/>this-&gt;boresights);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>missing<sp/>boundary<sp/>nodes<sp/>(|sigma_BN|<sp/>=<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>-1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>-1;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/><ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>-1;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[i][j].count(k)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[i][j][k].isBoundary<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>along<sp/>i<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[i+1][j].count(k)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[0]<sp/>=<sp/>i+1;<sp/>indices[1]<sp/>=<sp/>j;<sp/>indices[2]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mirrorFunction(indices,<sp/>mirrorIndices);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>8;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[mirrorIndices[m][0]][mirrorIndices[m][1]].count(mirrorIndices[m][2])<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_BN[0]<sp/>=<sp/>mirrorIndices[m][0]/indices[0]<sp/>*<sp/>pow(1-pow(u[j],2)-pow(u[k],2),0.5);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices[1]<sp/>!=<sp/>0)<sp/>{<sp/>sigma_BN[1]<sp/>=<sp/>mirrorIndices[m][1]/indices[1]*u[indices[1]];<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>sigma_BN[1]<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices[2]<sp/>!=<sp/>0)<sp/>{<sp/>sigma_BN[2]<sp/>=<sp/>mirrorIndices[m][2]/indices[2]*u[indices[2]];<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>sigma_BN[2]<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[mirrorIndices[m][0]][mirrorIndices[m][1]][mirrorIndices[m][2]]<sp/>=<sp/><ref refid="class_node" kindref="compound">Node</ref>(sigma_BN,<sp/>this-&gt;constraints,<sp/>this-&gt;boresights);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>along<sp/>j<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[i][j+1].count(k)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[0]<sp/>=<sp/>i;<sp/>indices[1]<sp/>=<sp/>j+1;<sp/>indices[2]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mirrorFunction(indices,<sp/>mirrorIndices);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>8;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[mirrorIndices[m][0]][mirrorIndices[m][1]].count(mirrorIndices[m][2])<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices[0]<sp/>!=<sp/>0)<sp/>{<sp/>sigma_BN[0]<sp/>=<sp/>mirrorIndices[m][0]/indices[0]*u[indices[0]];<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>sigma_BN[0]<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_BN[1]<sp/>=<sp/>mirrorIndices[m][1]/indices[1]<sp/>*<sp/>pow(1-pow(u[i],2)-pow(u[k],2),0.5);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices[2]<sp/>!=<sp/>0)<sp/>{<sp/>sigma_BN[2]<sp/>=<sp/>mirrorIndices[m][2]/indices[2]*u[indices[2]];<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>sigma_BN[2]<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[mirrorIndices[m][0]][mirrorIndices[m][1]][mirrorIndices[m][2]]<sp/>=<sp/><ref refid="class_node" kindref="compound">Node</ref>(sigma_BN,<sp/>this-&gt;constraints,<sp/>this-&gt;boresights);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>along<sp/>k<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[i][j].count(k+1)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[0]<sp/>=<sp/>i;<sp/>indices[1]<sp/>=<sp/>j;<sp/>indices[2]<sp/>=<sp/>k+1;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mirrorFunction(indices,<sp/>mirrorIndices);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>8;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[mirrorIndices[m][0]][mirrorIndices[m][1]].count(mirrorIndices[m][2])<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices[0]<sp/>!=<sp/>0)<sp/>{<sp/>sigma_BN[0]<sp/>=<sp/>mirrorIndices[m][0]/indices[0]*u[indices[0]];<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>sigma_BN[0]<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices[1]<sp/>!=<sp/>0)<sp/>{<sp/>sigma_BN[1]<sp/>=<sp/>mirrorIndices[m][1]/indices[1]*u[indices[1]];<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>sigma_BN[1]<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma_BN[2]<sp/>=<sp/>mirrorIndices[m][2]/indices[2]<sp/>*<sp/>pow(1-pow(u[i],2)-pow(u[j],2),0.5);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[mirrorIndices[m][0]][mirrorIndices[m][1]][mirrorIndices[m][2]]<sp/>=<sp/><ref refid="class_node" kindref="compound">Node</ref>(sigma_BN,<sp/>this-&gt;constraints,<sp/>this-&gt;boresights);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>link<sp/>nodes<sp/>to<sp/>adjacent<sp/>neighbors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbors[26][3];</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,std::map&lt;int,Node&gt;&gt;&gt;::iterator<sp/>it1=this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>.begin();<sp/>it1!=this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>.end();<sp/>it1++)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,std::map&lt;int,Node&gt;&gt;::iterator<sp/>it2=it1-&gt;second.begin();<sp/>it2!=it1-&gt;second.end();<sp/>it2++)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;int,Node&gt;::iterator<sp/>it3=it2-&gt;second.begin();<sp/>it3!=it2-&gt;second.end();<sp/>it3++)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[0]<sp/>=<sp/>it1-&gt;first;<sp/>indices[1]<sp/>=<sp/>it2-&gt;first;<sp/>indices[2]<sp/>=<sp/>it3-&gt;first;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighboringNodes(indices,<sp/>neighbors);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>26;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[neighbors[n][0]][neighbors[n][1]].count(neighbors[n][2])<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[indices[0]][indices[1]][indices[2]].isFree<sp/>&amp;&amp;<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[neighbors[n][0]][neighbors[n][1]][neighbors[n][2]].isFree)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[indices[0]][indices[1]][indices[2]].appendNeighbor(&amp;this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[neighbors[n][0]][neighbors[n][1]][neighbors[n][2]]);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>link<sp/>boundary<sp/>nodes<sp/>to<sp/>neighbors<sp/>of<sp/>shadow<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,std::map&lt;int,Node&gt;&gt;&gt;::iterator<sp/>it1=this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>.begin();<sp/>it1!=this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>.end();<sp/>it1++)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,std::map&lt;int,Node&gt;&gt;::iterator<sp/>it2=it1-&gt;second.begin();<sp/>it2!=it1-&gt;second.end();<sp/>it2++)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;int,Node&gt;::iterator<sp/>it3=it2-&gt;second.begin();<sp/>it3!=it2-&gt;second.end();<sp/>it3++)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it3-&gt;second.isBoundary<sp/>&amp;&amp;<sp/>it3-&gt;second.isFree)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>it1-&gt;first;<sp/><sp/>j<sp/>=<sp/>it2-&gt;first;<sp/><sp/>k<sp/>=<sp/>it3-&gt;first;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[-i][-j][-k].neighborCount;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[i][j][k].neighborCount;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[-i][-j][-k].neighbors[n]<sp/>==<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[i][j][k].neighbors[m])<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it3-&gt;second.appendNeighbor(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[-i][-j][-k].neighbors[n]);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>start<sp/>and<sp/>goal<sp/>node<sp/>to<sp/>grid<sp/>and<sp/>connecting<sp/>them<sp/>to<sp/>the<sp/>neighboring<sp/>nodes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ds<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dg<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1,<sp/>d2;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[3];</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[3];</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,std::map&lt;int,Node&gt;&gt;&gt;::iterator<sp/>it1=this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>.begin();<sp/>it1!=this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>.end();<sp/>it1++)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,std::map&lt;int,Node&gt;&gt;::iterator<sp/>it2=it1-&gt;second.begin();<sp/>it2!=it1-&gt;second.end();<sp/>it2++)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;int,Node&gt;::iterator<sp/>it3=it2-&gt;second.begin();<sp/>it3!=it2-&gt;second.end();<sp/>it3++)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it3-&gt;second.isFree)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>distance(startNode,<sp/>it3-&gt;second);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(d1-ds)<sp/>&lt;<sp/>1e-6)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v3Norm(it3-&gt;second.sigma_BN)<sp/>&lt;<sp/>v3Norm(<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[<ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[0]][<ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[1]][<ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[2]].sigma_BN))<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds<sp/>=<sp/>d1;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[0]<sp/>=<sp/>it1-&gt;first;<sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[1]<sp/>=<sp/>it2-&gt;first;<sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[2]<sp/>=<sp/>it3-&gt;first;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d1<sp/>&lt;<sp/>ds)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds<sp/>=<sp/>d1;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[0]<sp/>=<sp/>it1-&gt;first;<sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[1]<sp/>=<sp/>it2-&gt;first;<sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[2]<sp/>=<sp/>it3-&gt;first;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2<sp/>=<sp/>distance(goalNode,<sp/>it3-&gt;second);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(d2-dg)<sp/>&lt;<sp/>1e-6)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v3Norm(it3-&gt;second.sigma_BN)<sp/>&lt;<sp/>v3Norm(<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[<ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[0]][<ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[1]][<ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[2]].sigma_BN))<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dg<sp/>=<sp/>d2;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[0]<sp/>=<sp/>it1-&gt;first;<sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[1]<sp/>=<sp/>it2-&gt;first;<sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[2]<sp/>=<sp/>it3-&gt;first;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d2<sp/>&lt;<sp/>dg)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dg<sp/>=<sp/>d2;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[0]<sp/>=<sp/>it1-&gt;first;<sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[1]<sp/>=<sp/>it2-&gt;first;<sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[2]<sp/>=<sp/>it3-&gt;first;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startNode.<ref refid="class_node_1a7bf10372b4dfdc459bab526e9f8807ef" kindref="member">isBoundary</ref>)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>3;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[n]*startNode.<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>[n]<sp/>&lt;<sp/>0)<sp/>{<ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[n]<sp/>=<sp/>-<ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[n];}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goalNode.<ref refid="class_node_1a7bf10372b4dfdc459bab526e9f8807ef" kindref="member">isBoundary</ref>)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>3;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[n]*goalNode.<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>[n]<sp/>&lt;<sp/>0)<sp/>{<ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[n]<sp/>=<sp/>-<ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[n];}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[keyS[0]][<ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[1]][<ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[2]].neighborCount;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startNode.<ref refid="class_node_1a33679f58e4bd98058323c411ba0bd84b" kindref="member">appendNeighbor</ref>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[keyS[0]][<ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[1]][<ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[2]].neighbors[n]);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[keyG[0]][<ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[1]][<ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[2]].neighborCount;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[keyG[0]][<ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[1]][<ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[2]].neighbors[n]-&gt;appendNeighbor(&amp;goalNode);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[keyS[0]][<ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[1]][<ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[2]]<sp/>=<sp/>startNode;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[keyG[0]][<ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[1]][<ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[2]]<sp/>=<sp/>goalNode;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;keyS[0]<sp/>=<sp/><ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[0];<sp/>this-&gt;keyS[1]<sp/>=<sp/><ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[1];<sp/>this-&gt;keyS[2]<sp/>=<sp/><ref refid="class_constrained_attitude_maneuver_1a5b7163a9eedd663ff7ffb796935b9ec3" kindref="member">keyS</ref>[2];</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;keyG[0]<sp/>=<sp/><ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[0];<sp/>this-&gt;keyG[1]<sp/>=<sp/><ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[1];<sp/>this-&gt;keyG[2]<sp/>=<sp/><ref refid="class_constrained_attitude_maneuver_1a231594f31d609b30b854666d1366bcf5" kindref="member">keyG</ref>[2];</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a791ec4c8ffa418919135eccc0ad280fc" kindref="member">ConstrainedAttitudeManeuver::backtrack</ref>(<ref refid="class_node" kindref="compound">Node</ref><sp/>*p)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>&amp;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[this-&gt;keyS[0]][this-&gt;keyS[1]][this-&gt;keyS[2]])<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1adbc3a6a6f80f489090675454587ec31d" kindref="member">append</ref>(p);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a791ec4c8ffa418919135eccc0ad280fc" kindref="member">backtrack</ref>(p-&gt;<ref refid="class_node_1a520402f2050563b42dc4cf1960b8db73" kindref="member">backPointer</ref>);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1adbc3a6a6f80f489090675454587ec31d" kindref="member">append</ref>(p);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1aec6325480bd8f20ca50ffc9dbedc597a" kindref="member">ConstrainedAttitudeManeuver::AStar</ref>()</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,std::map&lt;int,Node&gt;&gt;&gt;::iterator<sp/>it1=<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>.begin();<sp/>it1!=<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>.end();<sp/>it1++)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,std::map&lt;int,Node&gt;&gt;::iterator<sp/>it2=it1-&gt;second.begin();<sp/>it2!=it1-&gt;second.end();<sp/>it2++)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;int,Node&gt;::iterator<sp/>it3=it2-&gt;second.begin();<sp/>it3!=it2-&gt;second.end();<sp/>it3++)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it3-&gt;second.heuristic<sp/>=<sp/>distance(it3-&gt;second,<sp/><ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[this-&gt;keyG[0]][this-&gt;keyG[1]][this-&gt;keyG[2]]);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nmax<sp/>=<sp/>4*this-&gt;N*this-&gt;<ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>*key;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_node_list" kindref="compound">NodeList</ref><sp/>O,<sp/>C;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>O.<ref refid="class_node_list_1adbc3a6a6f80f489090675454587ec31d" kindref="member">append</ref>(&amp;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[this-&gt;keyS[0]][this-&gt;keyS[1]][this-&gt;keyS[2]]);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0]<sp/>!=<sp/>&amp;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[this-&gt;keyG[0]][this-&gt;keyG[1]][this-&gt;keyG[2]]<sp/>&amp;&amp;<sp/>n<sp/>&lt;<sp/>Nmax)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C.<ref refid="class_node_list_1adbc3a6a6f80f489090675454587ec31d" kindref="member">append</ref>(O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0]);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0]-&gt;<ref refid="class_node_1a09f110294404f74ec368916089fc634c" kindref="member">neighborCount</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0]-&gt;<ref refid="class_node_1a75687689b00b7fa320d2203300b6d10c" kindref="member">neighbors</ref>[k];</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(C.<ref refid="class_node_list_1ac79b21396286d1b152a1a4574da17959" kindref="member">contains</ref>(key)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>key-&gt;<ref refid="class_node_1a86c42e974ec5d75969bafa29fc67be7b" kindref="member">heuristic</ref><sp/>+<sp/>distance(*O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0],<sp/>*key)<sp/>+<sp/>O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0]-&gt;<ref refid="class_node_1abd42217049ea96860a06c5b9dc85d6a4" kindref="member">priority</ref><sp/>-<sp/>O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0]-&gt;<ref refid="class_node_1a86c42e974ec5d75969bafa29fc67be7b" kindref="member">heuristic</ref>;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(O.<ref refid="class_node_list_1ac79b21396286d1b152a1a4574da17959" kindref="member">contains</ref>(key))<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&lt;<sp/>key-&gt;priority)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key-&gt;<ref refid="class_node_1abd42217049ea96860a06c5b9dc85d6a4" kindref="member">priority</ref><sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key-&gt;<ref refid="class_node_1a520402f2050563b42dc4cf1960b8db73" kindref="member">backPointer</ref><sp/>=<sp/>O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0];</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key-&gt;<ref refid="class_node_1abd42217049ea96860a06c5b9dc85d6a4" kindref="member">priority</ref><sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key-&gt;<ref refid="class_node_1a520402f2050563b42dc4cf1960b8db73" kindref="member">backPointer</ref><sp/>=<sp/>O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0];</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>O.<ref refid="class_node_list_1adbc3a6a6f80f489090675454587ec31d" kindref="member">append</ref>(key);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>O.<ref refid="class_node_list_1a2a5b718b9378c5990e11ba7896cb6edd" kindref="member">pop</ref>(0);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>O.<ref refid="class_node_list_1ab3cdb45ce993f0980907f93c890bc7e3" kindref="member">sort</ref>();</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a791ec4c8ffa418919135eccc0ad280fc" kindref="member">backtrack</ref>(O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0]);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Uncomment<sp/>to<sp/>print<sp/>path<sp/>node<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>this-&gt;path.N;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>this-&gt;path.list[n]-&gt;sigma_BN[0]<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>this-&gt;path.list[n]-&gt;sigma_BN[1]<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>this-&gt;path.list[n]-&gt;sigma_BN[2]<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a7ddbaf53976802282fe5d96edf677dfa" kindref="member">ConstrainedAttitudeManeuver::effortBasedAStar</ref>()</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nmax<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>*key;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_node_list" kindref="compound">NodeList</ref><sp/>O,<sp/>C;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>O.<ref refid="class_node_list_1adbc3a6a6f80f489090675454587ec31d" kindref="member">append</ref>(&amp;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[this-&gt;keyS[0]][this-&gt;keyS[1]][this-&gt;keyS[2]]);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0]<sp/>!=<sp/>&amp;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[this-&gt;keyG[0]][this-&gt;keyG[1]][this-&gt;keyG[2]]<sp/>&amp;&amp;<sp/>n<sp/>&lt;<sp/>Nmax)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;N<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>n<sp/>&lt;&lt;<sp/>&quot;\n&quot;;<sp/>//<sp/>uncomment<sp/>to<sp/>show<sp/>the<sp/>number<sp/>of<sp/>nodes<sp/>explored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C.<ref refid="class_node_list_1adbc3a6a6f80f489090675454587ec31d" kindref="member">append</ref>(O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0]);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0]-&gt;<ref refid="class_node_1a09f110294404f74ec368916089fc634c" kindref="member">neighborCount</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0]-&gt;<ref refid="class_node_1a75687689b00b7fa320d2203300b6d10c" kindref="member">neighbors</ref>[k];</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(C.<ref refid="class_node_list_1ac79b21396286d1b152a1a4574da17959" kindref="member">contains</ref>(key)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a791ec4c8ffa418919135eccc0ad280fc" kindref="member">backtrack</ref>(O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0]);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1adbc3a6a6f80f489090675454587ec31d" kindref="member">append</ref>(key);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>!=<sp/>&amp;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[this-&gt;keyG[0]][this-&gt;keyG[1]][this-&gt;keyG[2]])<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1adbc3a6a6f80f489090675454587ec31d" kindref="member">append</ref>(&amp;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[this-&gt;keyG[0]][this-&gt;keyG[1]][this-&gt;keyG[2]]);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a9a74181f7dc508d0af9f5983daf14d4f" kindref="member">pathHandle</ref>();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1adb8fcc0d1903f58f1b01aa9d9d66a4a1" kindref="member">spline</ref>();</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="class_constrained_attitude_maneuver_1adb8f21d9661285908ac59088a97596a3" kindref="member">effortEvaluation</ref>();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a036e517ea3194bfcac5d4abe4668d8a3" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(O.<ref refid="class_node_list_1ac79b21396286d1b152a1a4574da17959" kindref="member">contains</ref>(key))<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&lt;<sp/>key-&gt;priority)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key-&gt;<ref refid="class_node_1abd42217049ea96860a06c5b9dc85d6a4" kindref="member">priority</ref><sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key-&gt;<ref refid="class_node_1a520402f2050563b42dc4cf1960b8db73" kindref="member">backPointer</ref><sp/>=<sp/>O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0];</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key-&gt;<ref refid="class_node_1abd42217049ea96860a06c5b9dc85d6a4" kindref="member">priority</ref><sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key-&gt;<ref refid="class_node_1a520402f2050563b42dc4cf1960b8db73" kindref="member">backPointer</ref><sp/>=<sp/>O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0];</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>O.<ref refid="class_node_list_1adbc3a6a6f80f489090675454587ec31d" kindref="member">append</ref>(key);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>O.<ref refid="class_node_list_1a2a5b718b9378c5990e11ba7896cb6edd" kindref="member">pop</ref>(0);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>O.<ref refid="class_node_list_1ab3cdb45ce993f0980907f93c890bc7e3" kindref="member">sort</ref>();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a791ec4c8ffa418919135eccc0ad280fc" kindref="member">backtrack</ref>(O.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[0]);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Uncomment<sp/>to<sp/>print<sp/>path<sp/>node<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Waypoints:<sp/>\n&quot;;</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>this-&gt;path.N;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>this-&gt;path.list[n]-&gt;sigma_BN[0]<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>this-&gt;path.list[n]-&gt;sigma_BN[1]<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>this-&gt;path.list[n]-&gt;sigma_BN[2]<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a9a74181f7dc508d0af9f5983daf14d4f" kindref="member">ConstrainedAttitudeManeuver::pathHandle</ref>()</highlight></codeline>
<codeline lineno="653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>T(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>T[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>-1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T[n+1]<sp/>=<sp/>T[n]<sp/>+<sp/>distance(*<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[n],<sp/>*<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[n+1]);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S<sp/>+=<sp/>T[n+1]<sp/>-<sp/>T[n];</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>X1(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>X2(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>X3(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shadowSet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma[3],<sp/>delSigma[3];</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>-1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shadowSet)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[n]-&gt;<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>,<sp/>sigma);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[n]<sp/>==<sp/>&amp;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[0][0][0])<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>n-1;<sp/>m<sp/>&gt;<sp/>-1;<sp/>m--)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma[0]<sp/>=<sp/>X1[m];<sp/>sigma[1]<sp/>=<sp/>X2[m];<sp/>sigma[2]<sp/>=<sp/>X3[m];</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X1[m]<sp/>=<sp/>-X1[m]<sp/>/<sp/>v3Dot(sigma,<sp/>sigma);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X2[m]<sp/>=<sp/>-X2[m]<sp/>/<sp/>v3Dot(sigma,<sp/>sigma);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X3[m]<sp/>=<sp/>-X3[m]<sp/>/<sp/>v3Dot(sigma,<sp/>sigma);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowSet<sp/>=<sp/>!shadowSet;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MRPshadow(<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[n]-&gt;<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>,<sp/>sigma);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Subtract(<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[n]-&gt;<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>,<sp/><ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[n+1]-&gt;<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>,<sp/>delSigma);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v3Norm(delSigma)<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowSet<sp/>=<sp/>!shadowSet;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X1[n]<sp/>=<sp/>sigma[0];<sp/>X2[n]<sp/>=<sp/>sigma[1];<sp/>X3[n]<sp/>=<sp/>sigma[2];</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shadowSet)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>-1]-&gt;<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>,<sp/>sigma);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MRPshadow(<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>-1]-&gt;<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>,<sp/>sigma);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>X1[<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>-1]<sp/>=<sp/>sigma[0];<sp/>X2[<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>-1]<sp/>=<sp/>sigma[1];<sp/>X3[<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>-1]<sp/>=<sp/>sigma[2];</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a48ba4f571f3f56253ed6cc0107c27251" kindref="member">Input</ref><sp/>=<sp/>InputDataSet(X1,<sp/>X2,<sp/>X3);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a48ba4f571f3f56253ed6cc0107c27251" kindref="member">Input</ref>.setT(T<sp/>*<sp/>4<sp/>*<sp/>S<sp/>/<sp/>(T[this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>-1]<sp/>*<sp/>this-&gt;avgOmega));</highlight></codeline>
<codeline lineno="700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1adb8fcc0d1903f58f1b01aa9d9d66a4a1" kindref="member">ConstrainedAttitudeManeuver::spline</ref>()</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaDot_start[3],<sp/>sigmaDot_goal[3];</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>dMRP(this-&gt;scStateMsgBuffer.sigma_BN,<sp/>this-&gt;scStateMsgBuffer.omega_BN_B,<sp/>sigmaDot_start);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>dMRP(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a976c7642b4c449af53a59a3ea521c244" kindref="member">sigma_BN_goal</ref>,<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a552d87f71152d5e6b216a8bd0cb10afe" kindref="member">omega_BN_B_goal</ref>,<sp/>sigmaDot_goal);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sDot_s,<sp/>sDot_g;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sDot_s[i]<sp/>=<sp/>sigmaDot_start[i];</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sDot_g[i]<sp/>=<sp/>sigmaDot_goal[i];</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a48ba4f571f3f56253ed6cc0107c27251" kindref="member">Input</ref>.setXDot_0(sDot_s);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a48ba4f571f3f56253ed6cc0107c27251" kindref="member">Input</ref>.setXDot_N(sDot_g);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a69d9f12b40c1b4a6422bf6d7bc0a7ad3" kindref="member">BSplineType</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpolate(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a48ba4f571f3f56253ed6cc0107c27251" kindref="member">Input</ref>,<sp/>100,<sp/>4,<sp/>&amp;this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a69d9f12b40c1b4a6422bf6d7bc0a7ad3" kindref="member">BSplineType</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>approximate(this-&gt;<ref refid="class_constrained_attitude_maneuver_1a48ba4f571f3f56253ed6cc0107c27251" kindref="member">Input</ref>,<sp/>100,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a48ba4f571f3f56253ed6cc0107c27251" kindref="member">Input</ref>.X1.size(),<sp/>4,<sp/>&amp;this-&gt;Output);<sp/><sp/></highlight><highlight class="comment">//<sp/>review</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a5934da4e266609004605e75132939a34" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;ConstraintAttitudeManeuver:<sp/>BSplineType<sp/>has<sp/>not<sp/>been<sp/>specified.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a59f6cb90e31ea93ba34ce6e492a938d8" kindref="member">ConstrainedAttitudeManeuver::computeTorque</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I[9],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>L[3])</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma[3],<sp/>sigmaDot[3],<sp/>sigmaDDot[3],<sp/>omega[3],<sp/>omegaDot[3],<sp/>L1[3],<sp/>L2[3],<sp/>H[3];</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>sigma[0]<sp/><sp/><sp/><sp/><sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>.X1[n];<sp/><sp/><sp/><sp/>sigma[1]<sp/><sp/><sp/><sp/><sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>.X2[n];<sp/><sp/><sp/><sp/>sigma[2]<sp/><sp/><sp/><sp/><sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>.X3[n];</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaDot[0]<sp/><sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>.XD1[n];<sp/><sp/><sp/>sigmaDot[1]<sp/><sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>.XD2[n];<sp/><sp/><sp/>sigmaDot[2]<sp/><sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>.XD3[n];</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaDDot[0]<sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>.XDD1[n];<sp/><sp/>sigmaDDot[1]<sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>.XDD2[n];<sp/><sp/>sigmaDDot[2]<sp/>=<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>.XDD3[n];</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>dMRP2Omega(sigma,<sp/>sigmaDot,<sp/>omega);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>ddMRP2dOmega(sigma,<sp/>sigmaDot,<sp/>sigmaDDot,<sp/>omegaDot);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(RECAST3X3<sp/>I,<sp/>omegaDot,<sp/>L1);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultV3(RECAST3X3<sp/>I,<sp/>omega,<sp/>H);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Cross(omega,<sp/>H,<sp/>L2);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Add(L1,<sp/>L2,<sp/>L);</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a10dae96b4df53bc3cdcf50103369c461" kindref="member">ConstrainedAttitudeManeuver::computeTorqueNorm</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I[9])</highlight></codeline>
<codeline lineno="751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>L[3];</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a59f6cb90e31ea93ba34ce6e492a938d8" kindref="member">computeTorque</ref>(n,<sp/>this-&gt;vehicleConfigMsgBuffer.ISCPntB_B,<sp/>L);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v3Norm(L);</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1adb8f21d9661285908ac59088a97596a3" kindref="member">ConstrainedAttitudeManeuver::effortEvaluation</ref>()</highlight></codeline>
<codeline lineno="762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>effort<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>l_a,<sp/>l_b;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>L_a[3],<sp/>L_b[3];</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a59f6cb90e31ea93ba34ce6e492a938d8" kindref="member">computeTorque</ref>(0,<sp/>this-&gt;vehicleConfigMsgBuffer.ISCPntB_B,<sp/>L_a);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref><sp/>=<sp/>(int)<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>.T.size();</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="class_constrained_attitude_maneuver_1a3f6d5725a76ca5284d31ee37604e0256" kindref="member">N</ref>-1;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constrained_attitude_maneuver_1a59f6cb90e31ea93ba34ce6e492a938d8" kindref="member">computeTorque</ref>(n+1,<sp/>this-&gt;vehicleConfigMsgBuffer.ISCPntB_B,<sp/>L_b);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_a<sp/>=<sp/>v3Norm(L_a);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_b<sp/>=<sp/>v3Norm(L_b);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>effort<sp/>+=<sp/>(l_a<sp/>+<sp/>l_b)<sp/>*<sp/>(<ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>.T[n+1]<sp/>-<sp/><ref refid="class_constrained_attitude_maneuver_1ae29ea4da3ce74b0d584e15c3c1a2ec18" kindref="member">Output</ref>.T[n])<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Copy(L_b,<sp/>L_a);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>effort;</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a4562eaaf9f7fdf8b67cda2b309869403" kindref="member">ConstrainedAttitudeManeuver::returnNodeCoord</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key[3],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodeCoord)</highlight></codeline>
<codeline lineno="786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nodeCoord<sp/>&lt;<sp/>0<sp/>||<sp/>nodeCoord<sp/>&gt;<sp/>2<sp/>||<sp/><ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[key[0]][key[1]].count(key[2])<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1000;<sp/></highlight><highlight class="comment">//<sp/>random<sp/>large<sp/>number<sp/>that<sp/>will<sp/>cause<sp/>the<sp/>UnitTest<sp/>comparison<sp/>to<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[key[0]][key[1]][key[2]].sigma_BN[nodeCoord];</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1a9e796b7ea72b7264f1c3391ac9404ac3" kindref="member">ConstrainedAttitudeManeuver::returnNodeState</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key[3])</highlight></codeline>
<codeline lineno="800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[key[0]][key[1]].count(key[2])<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1ab90d8890c6e131726237ef686207dbc0" kindref="member">NodesMap</ref>[key[0]][key[1]][key[2]].isFree;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_constrained_attitude_maneuver_1ac04add72eb4d21d8ab277ea1981d8513" kindref="member">ConstrainedAttitudeManeuver::returnPathCoord</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodeCoord)</highlight></codeline>
<codeline lineno="814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;<sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1a59b88389fd644d100bb4e84bdac70a24" kindref="member">N</ref>-1)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1000;<sp/></highlight><highlight class="comment">//<sp/>random<sp/>large<sp/>number<sp/>that<sp/>will<sp/>cause<sp/>the<sp/>UnitTest<sp/>comparison<sp/>to<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_constrained_attitude_maneuver_1a8bb32bacaa717f8bf862e6f5f5ceb930" kindref="member">path</ref>.<ref refid="class_node_list_1ada0de7648901219146f127b583b9a8fa" kindref="member">list</ref>[index]-&gt;<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>[nodeCoord];</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mirrorFunction(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indices[3],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mirrorIndices[8][3])<sp/></highlight></codeline>
<codeline lineno="825"><highlight class="normal">{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>mirrorIndices[0][0]<sp/>=<sp/><sp/>indices[0];<sp/><sp/><sp/>mirrorIndices[0][1]<sp/>=<sp/><sp/>indices[1];<sp/><sp/><sp/>mirrorIndices[0][2]<sp/>=<sp/><sp/>indices[2];</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>mirrorIndices[1][0]<sp/>=<sp/>-indices[0];<sp/><sp/><sp/>mirrorIndices[1][1]<sp/>=<sp/><sp/>indices[1];<sp/><sp/><sp/>mirrorIndices[1][2]<sp/>=<sp/><sp/>indices[2];</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>mirrorIndices[2][0]<sp/>=<sp/><sp/>indices[0];<sp/><sp/><sp/>mirrorIndices[2][1]<sp/>=<sp/>-indices[1];<sp/><sp/><sp/>mirrorIndices[2][2]<sp/>=<sp/><sp/>indices[2];</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>mirrorIndices[3][0]<sp/>=<sp/><sp/>indices[0];<sp/><sp/><sp/>mirrorIndices[3][1]<sp/>=<sp/><sp/>indices[1];<sp/><sp/><sp/>mirrorIndices[3][2]<sp/>=<sp/>-indices[2];</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>mirrorIndices[4][0]<sp/>=<sp/>-indices[0];<sp/><sp/><sp/>mirrorIndices[4][1]<sp/>=<sp/>-indices[1];<sp/><sp/><sp/>mirrorIndices[4][2]<sp/>=<sp/><sp/>indices[2];</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>mirrorIndices[5][0]<sp/>=<sp/>-indices[0];<sp/><sp/><sp/>mirrorIndices[5][1]<sp/>=<sp/><sp/>indices[1];<sp/><sp/><sp/>mirrorIndices[5][2]<sp/>=<sp/>-indices[2];</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>mirrorIndices[6][0]<sp/>=<sp/><sp/>indices[0];<sp/><sp/><sp/>mirrorIndices[6][1]<sp/>=<sp/>-indices[1];<sp/><sp/><sp/>mirrorIndices[6][2]<sp/>=<sp/>-indices[2];</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>mirrorIndices[7][0]<sp/>=<sp/>-indices[0];<sp/><sp/><sp/>mirrorIndices[7][1]<sp/>=<sp/>-indices[1];<sp/><sp/><sp/>mirrorIndices[7][2]<sp/>=<sp/>-indices[2];</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>neighboringNodes(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indices[3],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbors[26][3])</highlight></codeline>
<codeline lineno="838"><highlight class="normal">{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[0][0]<sp/><sp/>=<sp/>indices[0]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[0][1]<sp/><sp/>=<sp/>indices[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[0][2]<sp/><sp/>=<sp/>indices[2];</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[1][0]<sp/><sp/>=<sp/>indices[0]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[1][1]<sp/><sp/>=<sp/>indices[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[1][2]<sp/><sp/>=<sp/>indices[2];</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[2][0]<sp/><sp/>=<sp/>indices[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[2][1]<sp/><sp/>=<sp/>indices[1]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[2][2]<sp/><sp/>=<sp/>indices[2];</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[3][0]<sp/><sp/>=<sp/>indices[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[3][1]<sp/><sp/>=<sp/>indices[1]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[3][2]<sp/><sp/>=<sp/>indices[2];</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[4][0]<sp/><sp/>=<sp/>indices[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[4][1]<sp/><sp/>=<sp/>indices[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[4][2]<sp/><sp/>=<sp/>indices[2]-1;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[5][0]<sp/><sp/>=<sp/>indices[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[5][1]<sp/><sp/>=<sp/>indices[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[5][2]<sp/><sp/>=<sp/>indices[2]+1;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[6][0]<sp/><sp/>=<sp/>indices[0]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[6][1]<sp/><sp/>=<sp/>indices[1]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[6][2]<sp/><sp/>=<sp/>indices[2];</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[7][0]<sp/><sp/>=<sp/>indices[0]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[7][1]<sp/><sp/>=<sp/>indices[1]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[7][2]<sp/><sp/>=<sp/>indices[2];</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[8][0]<sp/><sp/>=<sp/>indices[0]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[8][1]<sp/><sp/>=<sp/>indices[1]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[8][2]<sp/><sp/>=<sp/>indices[2];</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[9][0]<sp/><sp/>=<sp/>indices[0]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[9][1]<sp/><sp/>=<sp/>indices[1]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[9][2]<sp/><sp/>=<sp/>indices[2];</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[10][0]<sp/>=<sp/>indices[0]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[10][1]<sp/>=<sp/>indices[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[10][2]<sp/>=<sp/>indices[2]-1;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[11][0]<sp/>=<sp/>indices[0]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[11][1]<sp/>=<sp/>indices[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[11][2]<sp/>=<sp/>indices[2]-1;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[12][0]<sp/>=<sp/>indices[0]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[12][1]<sp/>=<sp/>indices[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[12][2]<sp/>=<sp/>indices[2]+1;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[13][0]<sp/>=<sp/>indices[0]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[13][1]<sp/>=<sp/>indices[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[13][2]<sp/>=<sp/>indices[2]+1;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[14][0]<sp/>=<sp/>indices[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[14][1]<sp/>=<sp/>indices[1]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[14][2]<sp/>=<sp/>indices[2]-1;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[15][0]<sp/>=<sp/>indices[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[15][1]<sp/>=<sp/>indices[1]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[15][2]<sp/>=<sp/>indices[2]-1;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[16][0]<sp/>=<sp/>indices[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[16][1]<sp/>=<sp/>indices[1]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[16][2]<sp/>=<sp/>indices[2]+1;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[17][0]<sp/>=<sp/>indices[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[17][1]<sp/>=<sp/>indices[1]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[17][2]<sp/>=<sp/>indices[2]+1;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[18][0]<sp/>=<sp/>indices[0]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[18][1]<sp/>=<sp/>indices[1]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[18][2]<sp/>=<sp/>indices[2]-1;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[19][0]<sp/>=<sp/>indices[0]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[19][1]<sp/>=<sp/>indices[1]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[19][2]<sp/>=<sp/>indices[2]-1;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[20][0]<sp/>=<sp/>indices[0]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[20][1]<sp/>=<sp/>indices[1]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[20][2]<sp/>=<sp/>indices[2]-1;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[21][0]<sp/>=<sp/>indices[0]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[21][1]<sp/>=<sp/>indices[1]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[21][2]<sp/>=<sp/>indices[2]+1;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[22][0]<sp/>=<sp/>indices[0]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[22][1]<sp/>=<sp/>indices[1]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[22][2]<sp/>=<sp/>indices[2]-1;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[23][0]<sp/>=<sp/>indices[0]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[23][1]<sp/>=<sp/>indices[1]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[23][2]<sp/>=<sp/>indices[2]+1;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[24][0]<sp/>=<sp/>indices[0]-1;<sp/><sp/><sp/><sp/><sp/>neighbors[24][1]<sp/>=<sp/>indices[1]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[24][2]<sp/>=<sp/>indices[2]+1;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[25][0]<sp/>=<sp/>indices[0]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[25][1]<sp/>=<sp/>indices[1]+1;<sp/><sp/><sp/><sp/><sp/>neighbors[25][2]<sp/>=<sp/>indices[2]+1;</highlight></codeline>
<codeline lineno="865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance(<ref refid="class_node" kindref="compound">Node</ref><sp/>n1,<sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>n2)</highlight></codeline>
<codeline lineno="869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n1n,<sp/>n2n;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>D,<sp/>d[4];</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dn[3],<sp/>n1s[3],<sp/>n2s[3];</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>n1n<sp/>=<sp/>v3Norm(n1.<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>n2n<sp/>=<sp/>v3Norm(n2.<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Subtract(n1.<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>,<sp/>n2.<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>,<sp/>dn);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>d[0]<sp/>=<sp/>v3Norm(dn);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n2n<sp/>&gt;<sp/>1e-8)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MRPshadow(n2.<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>,<sp/>n2s);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Subtract(n1.<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>,<sp/>n2s,<sp/>dn);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d[1]<sp/>=<sp/>v3Norm(dn);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d[1]<sp/>=<sp/>d[0];</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n1n<sp/>&gt;<sp/>1e-8)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MRPshadow(n1.<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>,<sp/>n1s);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Subtract(n2.<ref refid="class_node_1a3502e6e0a3fc8d2713fcd5421eeb9728" kindref="member">sigma_BN</ref>,<sp/>n1s,<sp/>dn);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d[2]<sp/>=<sp/>v3Norm(dn);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d[2]<sp/>=<sp/>d[0];</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n1n<sp/>&gt;<sp/>1e-8<sp/>&amp;&amp;<sp/>n2n<sp/>&gt;<sp/>1e-8)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v3Subtract(n1s,<sp/>n2s,<sp/>dn);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d[3]<sp/>=<sp/>v3Norm(dn);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d[3]<sp/>=<sp/>d[0];</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>D<sp/>=<sp/>d[0];</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d[i]<sp/>&lt;<sp/>D)<sp/>{<sp/>D<sp/>=<sp/>d[i];<sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>D;</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/attGuidance/constrainedAttitudeManeuver/constrainedAttitudeManeuver.cpp"/>
  </compounddef>
</doxygen>
