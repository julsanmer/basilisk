<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="fault_detection_8h" kind="file" language="C++">
    <compoundname>faultDetection.h</compoundname>
    <includes local="yes">cMsgCInterface/OpNavMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/CameraConfigMsg_C.h</includes>
    <includes local="yes">cMsgCInterface/NavAttMsg_C.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/astroConstants.h</includes>
    <includes local="yes">architecture/utilities/rigidBodyKinematics.h</includes>
    <includedby refid="fault_detection_8c" local="yes">/Users/julio/Desktop/basilisk/src/fswAlgorithms/opticalNavigation/faultDetection/faultDetection.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/opticalNavigation/faultDetection/faultDetection.h</label>
        <link refid="fault_detection_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>architecture/utilities/astroConstants.h</label>
      </node>
      <node id="6">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="5">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="8">
        <label>architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="3">
        <label>cMsgCInterface/CameraConfigMsg_C.h</label>
      </node>
      <node id="4">
        <label>cMsgCInterface/NavAttMsg_C.h</label>
      </node>
      <node id="2">
        <label>cMsgCInterface/OpNavMsg_C.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_fault_detection_data" prot="public">FaultDetectionData</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="fault_detection_8h_1a0183656753ad9893bf73852bd223fe7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_faultDetection</definition>
        <argsstring>(FaultDetectionData *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_faultDetection</name>
        <param>
          <type><ref refid="struct_fault_detection_data" kindref="compound">FaultDetectionData</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Self-init for the fault detection module <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identification integer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/opticalNavigation/faultDetection/faultDetection.h" line="53" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/opticalNavigation/faultDetection/faultDetection.c" bodystart="32" bodyend="35" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/opticalNavigation/faultDetection/faultDetection.h" declline="53" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fault_detection_8h_1a2de78f34d3b70c683af3c24650567f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_faultDetection</definition>
        <argsstring>(FaultDetectionData *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_faultDetection</name>
        <param>
          <type><ref refid="struct_fault_detection_data" kindref="compound">FaultDetectionData</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method reads in the two compared navigation messages and outputs the best measurement possible. It compares the faults of each and uses camera and attitude knowledge to output the information in all necessary frames. Three fault modes are possible. FaultMode = 0 is the less restricitve: it uses either of the measurements availabe and merges them if they are both available FaultMode = 1 is more restricitve: only the primary is used if both are available and the secondary is only used for a dissimilar check FaultMode = 2 is most restricive: the primary is not used in the abscence of the secondary measurement <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identification integer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><itemizedlist>
<listitem><para>read input opnav messages</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>read dcm messages</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>compute dcms</para>
</listitem></itemizedlist>
</para>
<para>Begin fault detection logic</para>
<para><itemizedlist>
<listitem><para>If none of the message contain valid nav data, unvalidate the nav and populate a zero message</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Only one of two are valid</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>Only one of two are valid</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>If secondary measurments are trusted use them as primary</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>If secondaries are not trusted, do not risk corrupting measurment</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para>If they are both valid proceed to the fault detection</para>
</listitem></itemizedlist>
</para>
<para><ndash/> Dissimilar mode compares the two measurements: if the mean +/- 3-sigma covariances overlap use the nominal nav solution</para>
<para>Get the direction and norm between the the two measurements in camera frame</para>
<para>If the difference between vectors is beyond the covariances, detect a fault and use secondary</para>
<para>If the difference between vectors is low, use primary</para>
<para>Bring all the measurements and covariances into their respective frames</para>
<para><ndash/> Merge mode combines the two measurements and uncertainties if they are similar</para>
<para>The covariance merge is given by P = (P1^{-1} + P2^{-1})^{-1}</para>
<para>The estimage merge is given by x = P (P1^{-1}x1 + P2^{-1}x2)</para>
<para>Bring all the measurements and covariances into their respective frames</para>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/opticalNavigation/faultDetection/faultDetection.h" line="54" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/opticalNavigation/faultDetection/faultDetection.c" bodystart="72" bodyend="188" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/opticalNavigation/faultDetection/faultDetection.h" declline="54" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fault_detection_8h_1aa0eb2777541b87bb4828b19942dceb8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_faultDetection</definition>
        <argsstring>(FaultDetectionData *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_faultDetection</name>
        <param>
          <type><ref refid="struct_fault_detection_data" kindref="compound">FaultDetectionData</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This resets the module to original states. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The clock time at which the function was called (nanoseconds) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identification integer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/opticalNavigation/faultDetection/faultDetection.h" line="56" column="10" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/opticalNavigation/faultDetection/faultDetection.c" bodystart="44" bodyend="60" declfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/opticalNavigation/faultDetection/faultDetection.h" declline="56" declcolumn="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_FAULT_DETECTION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_FAULT_DETECTION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/OpNavMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/CameraConfigMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cMsgCInterface/NavAttMsg_C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/astroConstants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="struct_fault_detection_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34" refid="struct_fault_detection_data_1a37a66fd57ecccd74498f29a0f5c15f65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>OpNavMsg_C<sp/><ref refid="struct_fault_detection_data_1a37a66fd57ecccd74498f29a0f5c15f65" kindref="member">opNavOutMsg</ref>;<sp/></highlight></codeline>
<codeline lineno="35" refid="struct_fault_detection_data_1a0350bcbb35ee3421f60bbc33345462d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>NavAttMsg_C<sp/><ref refid="struct_fault_detection_data_1a0350bcbb35ee3421f60bbc33345462d7" kindref="member">attInMsg</ref>;<sp/></highlight></codeline>
<codeline lineno="36" refid="struct_fault_detection_data_1a459159db8a456d1bbd80bfd2b9d105c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>OpNavMsg_C<sp/><ref refid="struct_fault_detection_data_1a459159db8a456d1bbd80bfd2b9d105c9" kindref="member">navMeasPrimaryInMsg</ref>;<sp/></highlight></codeline>
<codeline lineno="37" refid="struct_fault_detection_data_1afe3f05f96ae1e05c82ab7f494bad9ef9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>OpNavMsg_C<sp/><ref refid="struct_fault_detection_data_1afe3f05f96ae1e05c82ab7f494bad9ef9" kindref="member">navMeasSecondaryInMsg</ref>;<sp/></highlight></codeline>
<codeline lineno="38" refid="struct_fault_detection_data_1a5f548854165c898717aeb95cc4c65398" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraConfigMsg_C<sp/><ref refid="struct_fault_detection_data_1a5f548854165c898717aeb95cc4c65398" kindref="member">cameraConfigInMsg</ref>;<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="struct_fault_detection_data_1ab0059c628bdcc79cd2b138638996c19b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_fault_detection_data_1ab0059c628bdcc79cd2b138638996c19b" kindref="member">planetTarget</ref>;<sp/></highlight></codeline>
<codeline lineno="41" refid="struct_fault_detection_data_1a90805d2400f822d04bb2629192bcc77c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_fault_detection_data_1a90805d2400f822d04bb2629192bcc77c" kindref="member">faultMode</ref>;<sp/></highlight></codeline>
<codeline lineno="42" refid="struct_fault_detection_data_1a383b2a34957a99095cdede4ebadd86dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_fault_detection_data_1a383b2a34957a99095cdede4ebadd86dc" kindref="member">sigmaFault</ref>;<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>for<sp/>bsk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="struct_fault_detection_data_1afbe2f8a47edb7b4ab3fdcea2d8635d37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BSKLogger*<sp/><ref refid="struct_fault_detection_data_1afbe2f8a47edb7b4ab3fdcea2d8635d37" kindref="member">bskLogger</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}<ref refid="struct_fault_detection_data" kindref="compound">FaultDetectionData</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_faultDetection(<ref refid="struct_fault_detection_data" kindref="compound">FaultDetectionData</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_faultDetection(<ref refid="struct_fault_detection_data" kindref="compound">FaultDetectionData</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_faultDetection(<ref refid="struct_fault_detection_data" kindref="compound">FaultDetectionData</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/opticalNavigation/faultDetection/faultDetection.h"/>
  </compounddef>
</doxygen>
