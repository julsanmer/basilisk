<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="small_body_nav_e_k_f_8cpp" kind="file" language="C++">
    <compoundname>smallBodyNavEKF.cpp</compoundname>
    <includes refid="small_body_nav_e_k_f_8h" local="yes">fswAlgorithms/smallBodyNavigation/smallBodyNavEKF/smallBodyNavEKF.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/rigidBodyKinematics.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cstring</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/smallBodyNavigation/smallBodyNavEKF/smallBodyNavEKF.cpp</label>
        <link refid="small_body_nav_e_k_f_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fswAlgorithms/smallBodyNavigation/smallBodyNavEKF/smallBodyNavEKF.h</label>
        <link refid="small_body_nav_e_k_f_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="11">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="9">
        <label>architecture/msgPayloadDefCpp/THROutputMsgPayload.h</label>
      </node>
      <node id="13">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="10">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="15">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="14">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="12">
        <label>architecture/utilities/orbitalMotion.h</label>
      </node>
      <node id="16">
        <label>architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="8">
        <label>cMsgCInterface/CmdForceBodyMsg_C.h</label>
      </node>
      <node id="6">
        <label>cMsgCInterface/EphemerisMsg_C.h</label>
      </node>
      <node id="5">
        <label>cMsgCInterface/NavAttMsg_C.h</label>
      </node>
      <node id="4">
        <label>cMsgCInterface/NavTransMsg_C.h</label>
      </node>
      <node id="7">
        <label>cMsgCInterface/SmallBodyNavMsg_C.h</label>
      </node>
      <node id="18">
        <label>cstring</label>
      </node>
      <node id="17">
        <label>iostream</label>
      </node>
      <node id="19">
        <label>math.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2021,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fswAlgorithms/smallBodyNavigation/smallBodyNavEKF/smallBodyNavEKF.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="class_small_body_nav_e_k_f_1abb18e175799a34e5bbe6850a47290829" kindref="member">SmallBodyNavEKF::SmallBodyNavEKF</ref>()</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;numStates<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mu_sun<sp/>=<sp/>1.327124e20;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;o_hat_3_tilde.setZero();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;o_hat_3_tilde(0,<sp/>1)<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;o_hat_3_tilde(1,<sp/>0)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;o_hat_1<sp/>&lt;&lt;<sp/>1,<sp/>0,<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;I.setIdentity(3,3);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;I_full.setIdentity(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1abdcfa80a061f555cc9e7e1b0122f5a00" kindref="member">C_SRP</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1ae22fc1b01603c50ba2db12f9b45cc5c5" kindref="member">P_0</ref><sp/>=<sp/>4.56e-6;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1a3ae9742b5ebf8a17bcea75d5baf1fb10" kindref="member">rho</ref><sp/>=<sp/>0.4;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;x_hat_dot_k.setZero(this-&gt;numStates);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;x_hat_k1_.setZero(this-&gt;numStates);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;x_hat_k1.setZero(this-&gt;numStates);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1a325b0505a1de3a43106f0c3b123567ed" kindref="member">x_hat_k</ref>.setZero(this-&gt;numStates);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;P_dot_k.setZero(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;P_k1_.setZero(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;P_k1.setZero(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;A_k.setIdentity(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Phi_k.setIdentity(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Phi_dot_k.setZero(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;L.setIdentity(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;M.setIdentity(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;H_k1.setIdentity(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;k1.setZero(this-&gt;numStates);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;k2.setZero(this-&gt;numStates);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;k3.setZero(this-&gt;numStates);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;k4.setZero(this-&gt;numStates);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;k1_phi.setZero(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;k2_phi.setZero(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;k3_phi.setZero(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;k4_phi.setZero(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;prevTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="class_small_body_nav_e_k_f_1ab317545113b845f9bd8b02d771922c91" kindref="member">SmallBodyNavEKF::~SmallBodyNavEKF</ref>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_small_body_nav_e_k_f_1ad738750d3255dd9c793696f464781da8" kindref="member">SmallBodyNavEKF::SelfInit</ref>(){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>NavTransMsg_C_init(&amp;this-&gt;<ref refid="class_small_body_nav_e_k_f_1ab8e6b56a1dc63aa0214550cc82a6a11a" kindref="member">navTransOutMsgC</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>SmallBodyNavMsg_C_init(&amp;this-&gt;<ref refid="class_small_body_nav_e_k_f_1a5158e25d652305f53e7691b2f6b2870f" kindref="member">smallBodyNavOutMsgC</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>EphemerisMsg_C_init(&amp;this-&gt;<ref refid="class_small_body_nav_e_k_f_1afe280ece1a6a2b0ba9b2e2215f6463e3" kindref="member">asteroidEphemerisOutMsgC</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_small_body_nav_e_k_f_1a06b47d20db9f571ea563b9bf3e513a8a" kindref="member">SmallBodyNavEKF::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>that<sp/>required<sp/>input<sp/>messages<sp/>are<sp/>connected<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_small_body_nav_e_k_f_1aaf235778bf84fb787d1bee6de6a5532c" kindref="member">navTransInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_small_body_nav_e_k_f_1a3e8a1d4e9743b73f301232fe76ecb005" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;SmallBodyNavEKF.navTransInMsg<sp/>was<sp/>not<sp/>linked.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_small_body_nav_e_k_f_1ae45c20cc36ae1db1031f4ce94c72add5" kindref="member">navAttInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_small_body_nav_e_k_f_1a3e8a1d4e9743b73f301232fe76ecb005" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;SmallBodyNavEKF.navAttInMsg<sp/>was<sp/>not<sp/>linked.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_small_body_nav_e_k_f_1afd3ea5454542504121cc41c72a10e019" kindref="member">asteroidEphemerisInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_small_body_nav_e_k_f_1a3e8a1d4e9743b73f301232fe76ecb005" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;SmallBodyNavEKF.asteroidEphemerisInMsg<sp/>was<sp/>not<sp/>linked.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_small_body_nav_e_k_f_1a07c57eb98e3f2fa8b6733497d56e943f" kindref="member">sunEphemerisInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_small_body_nav_e_k_f_1a3e8a1d4e9743b73f301232fe76ecb005" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;SmallBodyNavEKF.sunEphemerisInMsg<sp/>was<sp/>not<sp/>linked.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_small_body_nav_e_k_f_1a9e6bcb0abad3656a2425c7f2eb1372a1" kindref="member">SmallBodyNavEKF::addThrusterToFilter</ref>(Message&lt;THROutputMsgPayload&gt;<sp/>*tmpThrusterMsg){</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1a1e0aa0e34c79567a23fea5dc2eeba886" kindref="member">thrusterInMsgs</ref>.push_back(tmpThrusterMsg-&gt;addSubscriber());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SmallBodyNavEKF::readMessages(uint64_t<sp/>CurrentSimNanos){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>in<sp/>the<sp/>input<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((this-&gt;<ref refid="class_small_body_nav_e_k_f_1aaf235778bf84fb787d1bee6de6a5532c" kindref="member">navTransInMsg</ref>.timeWritten()<sp/>+<sp/>this-&gt;navAttInMsg.timeWritten()<sp/>+<sp/>this-&gt;asteroidEphemerisInMsg.timeWritten()<sp/>-<sp/>3*CurrentSimNanos)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;newMeasurements<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;newMeasurements<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;navTransInMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1aaf235778bf84fb787d1bee6de6a5532c" kindref="member">navTransInMsg</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;navAttInMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1ae45c20cc36ae1db1031f4ce94c72add5" kindref="member">navAttInMsg</ref>();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;asteroidEphemerisInMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1afd3ea5454542504121cc41c72a10e019" kindref="member">asteroidEphemerisInMsg</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sunEphemerisInMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1a07c57eb98e3f2fa8b6733497d56e943f" kindref="member">sunEphemerisInMsg</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_small_body_nav_e_k_f_1a7d23362def4c17fe7b6d7a121e879b75" kindref="member">cmdForceBodyInMsg</ref>.isLinked()){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cmdForceBodyInMsgBuffer=<sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1a7d23362def4c17fe7b6d7a121e879b75" kindref="member">cmdForceBodyInMsg</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cmdForceBodyInMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1a7d23362def4c17fe7b6d7a121e879b75" kindref="member">cmdForceBodyInMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>the<sp/>thruster<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>THROutputMsgPayload<sp/>thrusterMsg;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;thrusterInMsgBuffer.clear();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_small_body_nav_e_k_f_1a1e0aa0e34c79567a23fea5dc2eeba886" kindref="member">thrusterInMsgs</ref>.size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c&lt;this-&gt;<ref refid="class_small_body_nav_e_k_f_1a1e0aa0e34c79567a23fea5dc2eeba886" kindref="member">thrusterInMsgs</ref>.size();<sp/>c++){</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrusterMsg<sp/>=<sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1a1e0aa0e34c79567a23fea5dc2eeba886" kindref="member">thrusterInMsgs</ref>.at(c)();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;thrusterInMsgBuffer.push_back(thrusterMsg);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_small_body_nav_e_k_f_1a3e8a1d4e9743b73f301232fe76ecb005" kindref="member">bskLogger</ref>.bskLog(BSK_WARNING,<sp/></highlight><highlight class="stringliteral">&quot;Small<sp/>Body<sp/>Nav<sp/>EKF<sp/>has<sp/>no<sp/>thruster<sp/>messages<sp/>to<sp/>read.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SmallBodyNavEKF::predict(uint64_t<sp/>CurrentSimNanos){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>orbital<sp/>elements<sp/>of<sp/>the<sp/>asteroid,<sp/>we<sp/>assume<sp/>the<sp/>uncertainty<sp/>on<sp/>the<sp/>pos.<sp/>and<sp/>vel.<sp/>of<sp/>the<sp/>body<sp/>are<sp/>low</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>enough<sp/>to<sp/>consider<sp/>them<sp/>known<sp/>apriori<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>rv2elem(mu_sun,<sp/>asteroidEphemerisInMsgBuffer.r_BdyZero_N,<sp/>asteroidEphemerisInMsgBuffer.v_BdyZero_N,<sp/>&amp;oe_ast);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>F_dot<sp/>and<sp/>F_ddot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>F_dot<sp/>=<sp/>sqrt(mu_sun/(pow(oe_ast.a*(1-pow(oe_ast.e,<sp/>2)),<sp/>3)))*pow(1+(oe_ast.e)*cos(oe_ast.f),<sp/>2);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>F_ddot<sp/>=<sp/>-2*(oe_ast.e)*(sqrt(mu_sun/(pow(oe_ast.a*(1-pow(oe_ast.e,<sp/>2)),<sp/>3))))*sin(oe_ast.f)*(1+oe_ast.e*cos(oe_ast.f))*(F_dot);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>hill<sp/>frame<sp/>DCM<sp/>of<sp/>the<sp/>small<sp/>body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_ON_array[3][3];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>hillFrame(asteroidEphemerisInMsgBuffer.r_BdyZero_N,<sp/>asteroidEphemerisInMsgBuffer.v_BdyZero_N,<sp/>dcm_ON_array);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_ON<sp/>=<sp/>cArray2EigenMatrixXd(*dcm_ON_array,<sp/>3,<sp/>3).transpose();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>direction<sp/>of<sp/>the<sp/>sun<sp/>from<sp/>the<sp/>asteroid<sp/>in<sp/>the<sp/>small<sp/>body&apos;s<sp/>hill<sp/>frame,<sp/>assumes<sp/>heliocentric<sp/>frame</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>centered<sp/>at<sp/>the<sp/>origin<sp/>of<sp/>the<sp/>sun,<sp/>not<sp/>the<sp/>solar<sp/>system&apos;s<sp/>barycenter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_ON_N;<sp/><sp/></highlight><highlight class="comment">//<sp/>inertial<sp/>to<sp/>small<sp/>body<sp/>pos.<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>r_SN_N;<sp/><sp/></highlight><highlight class="comment">//<sp/>inertial<sp/>to<sp/>sun<sp/>pos.<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>r_ON_N<sp/>=<sp/>cArray2EigenVector3d(asteroidEphemerisInMsgBuffer.r_BdyZero_N);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>r_SN_N<sp/>=<sp/>cArray2EigenVector3d(sunEphemerisInMsgBuffer.r_BdyZero_N);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>r_SO_O<sp/>=<sp/>dcm_ON*(r_SN_N<sp/>-<sp/>r_ON_N);<sp/><sp/></highlight><highlight class="comment">//<sp/>small<sp/>body<sp/>to<sp/>sun<sp/>pos<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>total<sp/>thrust<sp/>and<sp/>torque<sp/>from<sp/>the<sp/>thrusters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust_B.setZero();<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>zero<sp/>in<sp/>case<sp/>no<sp/>thrusters<sp/>are<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>thrusterInMsgBuffer.size();<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrust_B<sp/>+=<sp/>cArray2EigenVector3d(thrusterInMsgBuffer[c].thrustForce_B);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>the<sp/>commanded<sp/>force<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_small_body_nav_e_k_f_1a7d23362def4c17fe7b6d7a121e879b75" kindref="member">cmdForceBodyInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdForce_B<sp/>=<sp/>cArray2EigenVector3d(cmdForceBodyInMsgBuffer.forceRequestBody);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>aprior<sp/>state<sp/>estimate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>aprioriState(CurrentSimNanos);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>apriori<sp/>covariance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>aprioriCovar(CurrentSimNanos);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SmallBodyNavEKF::aprioriState(uint64_t<sp/>CurrentSimNanos){</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>RK4<sp/>step<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>computeEquationsOfMotion(<ref refid="class_small_body_nav_e_k_f_1a325b0505a1de3a43106f0c3b123567ed" kindref="member">x_hat_k</ref>,<sp/>Phi_k);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>k1<sp/>=<sp/>(CurrentSimNanos-prevTime)*NANO2SEC*x_hat_dot_k;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>k1_phi<sp/>=<sp/>(CurrentSimNanos-prevTime)*NANO2SEC*Phi_dot_k;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Second<sp/>RK4<sp/>step<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>computeEquationsOfMotion(<ref refid="class_small_body_nav_e_k_f_1a325b0505a1de3a43106f0c3b123567ed" kindref="member">x_hat_k</ref><sp/>+<sp/>k1/2,<sp/>Phi_k<sp/>+<sp/>k1_phi/2);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>k2<sp/>=<sp/>(CurrentSimNanos-prevTime)*NANO2SEC*x_hat_dot_k;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>k2_phi<sp/>=<sp/>(CurrentSimNanos-prevTime)*NANO2SEC*Phi_dot_k;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Third<sp/>RK4<sp/>step<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>computeEquationsOfMotion(<ref refid="class_small_body_nav_e_k_f_1a325b0505a1de3a43106f0c3b123567ed" kindref="member">x_hat_k</ref><sp/>+<sp/>k2/2,<sp/>Phi_k<sp/>+<sp/>k2_phi/2);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>k3<sp/>=<sp/>(CurrentSimNanos-prevTime)*NANO2SEC*x_hat_dot_k;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>k3_phi<sp/>=<sp/>(CurrentSimNanos-prevTime)*NANO2SEC*Phi_dot_k;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fourth<sp/>RK4<sp/>step<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>computeEquationsOfMotion(<ref refid="class_small_body_nav_e_k_f_1a325b0505a1de3a43106f0c3b123567ed" kindref="member">x_hat_k</ref><sp/>+<sp/>k3,<sp/>Phi_k<sp/>+<sp/>k3_phi);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>k4<sp/>=<sp/>(CurrentSimNanos-prevTime)*NANO2SEC*x_hat_dot_k;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>k4_phi<sp/>=<sp/>(CurrentSimNanos-prevTime)*NANO2SEC*Phi_dot_k;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perform<sp/>the<sp/>RK4<sp/>integration<sp/>on<sp/>the<sp/>dynamics<sp/>and<sp/>STM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>x_hat_k1_<sp/>=<sp/><ref refid="class_small_body_nav_e_k_f_1a325b0505a1de3a43106f0c3b123567ed" kindref="member">x_hat_k</ref><sp/>+<sp/>(k1<sp/>+<sp/>2*k2<sp/>+<sp/>2*k3<sp/>+<sp/>k4)/6;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>Phi_k<sp/>=<sp/>Phi_k<sp/>+<sp/>(k1_phi<sp/>+<sp/>2*k2_phi<sp/>+<sp/>2*k3_phi<sp/>+<sp/>k4_phi)/6;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SmallBodyNavEKF::computeEquationsOfMotion(Eigen::VectorXd<sp/>x_hat,<sp/>Eigen::MatrixXd<sp/>Phi){</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>temporary<sp/>state<sp/>vectors<sp/>for<sp/>readability<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>x_1;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>x_2;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>x_3;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>x_4;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>x_1<sp/>&lt;&lt;<sp/>x_hat.segment(0,3);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>x_2<sp/>&lt;&lt;<sp/>x_hat.segment(3,3);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>x_3<sp/>&lt;&lt;<sp/>x_hat.segment(6,3);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>x_4<sp/>&lt;&lt;<sp/>x_hat.segment(9,3);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x1_dot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>x_hat_dot_k.segment(0,3)<sp/>=<sp/>x_2;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x2_dot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>compute<sp/>dcm_OB,<sp/>DCM<sp/>from<sp/>sc<sp/>body-frame<sp/>to<sp/>orbit<sp/>frame*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_BN_meas[3][3];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>MRP2C(this-&gt;navAttInMsgBuffer.sigma_BN,<sp/>dcm_BN_meas);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_OB;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>dcm_OB<sp/>=<sp/>dcm_ON*(cArray2EigenMatrixXd(*dcm_BN_meas,<sp/>3,<sp/>3));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>compute<sp/>x2_dot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>x_hat_dot_k.segment(3,3)<sp/>=</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-F_ddot*o_hat_3_tilde*x_1<sp/>-<sp/>2*F_dot*o_hat_3_tilde*x_2<sp/>-pow(F_dot,2)*o_hat_3_tilde*o_hat_3_tilde*x_1</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><ref refid="class_small_body_nav_e_k_f_1a2fe29356c37b01ffb0f6dda2841ad4ba" kindref="member">mu_ast</ref>*x_1/pow(x_1.norm(),<sp/>3)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>mu_sun*(3*(r_SO_O/r_SO_O.norm())*(r_SO_O/r_SO_O.norm()).transpose()-I)*x_1/pow(r_SO_O.norm(),<sp/>3)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="class_small_body_nav_e_k_f_1abdcfa80a061f555cc9e7e1b0122f5a00" kindref="member">C_SRP</ref>*<ref refid="class_small_body_nav_e_k_f_1ae22fc1b01603c50ba2db12f9b45cc5c5" kindref="member">P_0</ref>*(1+<ref refid="class_small_body_nav_e_k_f_1a3ae9742b5ebf8a17bcea75d5baf1fb10" kindref="member">rho</ref>)*(<ref refid="class_small_body_nav_e_k_f_1ae5ae48becc8ffc08ec37ddba4bea0c1c" kindref="member">A_sc</ref>/<ref refid="class_small_body_nav_e_k_f_1a4f2e0834f68ac63a056c1e03439fc573" kindref="member">M_sc</ref>)*o_hat_1/pow(r_SO_O.norm(),<sp/>2)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>dcm_OB*thrust_B/<ref refid="class_small_body_nav_e_k_f_1a4f2e0834f68ac63a056c1e03439fc573" kindref="member">M_sc</ref></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>dcm_OB*cmdForce_B/<ref refid="class_small_body_nav_e_k_f_1a4f2e0834f68ac63a056c1e03439fc573" kindref="member">M_sc</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x3_dot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>x_hat_dot_k.segment(6,3)<sp/>=<sp/>0.25*((1-pow(x_3.norm(),2))*I<sp/>+<sp/>2*eigenTilde(x_3)<sp/>+<sp/>2*x_3*x_3.transpose())*x_4;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x4_dot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>x_hat_dot_k.segment(9,3)<sp/>&lt;&lt;<sp/>0,<sp/>0,<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Re-compute<sp/>the<sp/>dynamics<sp/>matrix<sp/>and<sp/>compute<sp/>Phi_dot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>computeDynamicsMatrix(x_hat);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>Phi_dot_k<sp/>=<sp/>A_k*Phi;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SmallBodyNavEKF::aprioriCovar(uint64_t<sp/>CurrentSimNanos){</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>apriori<sp/>covariance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>P_k1_<sp/>=<sp/>Phi_k*<ref refid="class_small_body_nav_e_k_f_1a011a47814f3192756326857c5942bb2a" kindref="member">P_k</ref>*Phi_k.transpose()<sp/>+<sp/>L*<ref refid="class_small_body_nav_e_k_f_1a012f054fa34856423221de6d376ee8b3" kindref="member">Q</ref>*L.transpose();</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SmallBodyNavEKF::checkMRPSwitching(){</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>temporary<sp/>values<sp/>for<sp/>sigma_AN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sigma_AN;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>sigma_AN<sp/>&lt;&lt;<sp/>x_hat_k1_.segment(6,3);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>shadow<sp/>covariance<sp/>matrix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>P_k1_s;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>P_k1_s.setZero(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>Lambda,<sp/>set<sp/>it<sp/>to<sp/>zero,<sp/>set<sp/>diagonal<sp/>3x3<sp/>state<sp/>blocks<sp/>to<sp/>identity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>Lambda;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>Lambda.setZero(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>Lambda.block(0,<sp/>0,<sp/>3,<sp/>3).setIdentity();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>Lambda.block(3,<sp/>3,<sp/>3,<sp/>3).setIdentity();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>Lambda.block(6,<sp/>6,<sp/>3,<sp/>3).setIdentity();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>Lambda.block(9,<sp/>9,<sp/>3,<sp/>3).setIdentity();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>attitude<sp/>of<sp/>the<sp/>small<sp/>body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigma_AN.norm()<sp/>&gt;<sp/>1.0){</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Switch<sp/>MRPs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_hat_k1_.segment(6,<sp/>3)<sp/>=<sp/>-sigma_AN/pow(sigma_AN.norm(),<sp/>2);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Populate<sp/>lambda<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lambda.block(6,<sp/>6,<sp/>3,<sp/>3)<sp/>=<sp/>2*sigma_AN*sigma_AN.transpose()/pow(sigma_AN.norm(),<sp/>4)<sp/>-<sp/>I/pow(sigma_AN.norm(),<sp/>2);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>new<sp/>apriori<sp/>covariance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>P_k1_s<sp/>=<sp/>Lambda*P_k1_*Lambda.transpose();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>P_k1_<sp/>=<sp/>P_k1_s;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SmallBodyNavEKF::measurementUpdate(){</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>Kalman<sp/>gain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>K_k1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>K_k1.setZero(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>K_k1<sp/>=<sp/>P_k1_*H_k1.transpose()<sp/>*<sp/>(H_k1*P_k1_*H_k1.transpose()<sp/>+<sp/>M*<ref refid="class_small_body_nav_e_k_f_1a07ea49428124faf01a90250debe2866d" kindref="member">R</ref>*M.transpose()).inverse();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Grab<sp/>the<sp/>measurements<sp/>from<sp/>the<sp/>input<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Subtract<sp/>the<sp/>asteroid<sp/>position<sp/>from<sp/>the<sp/>spacecraft<sp/>position<sp/>and<sp/>rotate<sp/>it<sp/>into<sp/>the<sp/>small<sp/>body&apos;s<sp/>hill<sp/>frame*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>y_k1;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>y_k1.setZero(this-&gt;numStates);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>y_k1.segment(0,<sp/>3)<sp/>=<sp/>dcm_ON*(cArray2EigenVector3d(navTransInMsgBuffer.r_BN_N)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>cArray2EigenVector3d(asteroidEphemerisInMsgBuffer.r_BdyZero_N));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perform<sp/>a<sp/>similar<sp/>operation<sp/>for<sp/>the<sp/>relative<sp/>velocity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>y_k1.segment(3,<sp/>3)<sp/>=<sp/>dcm_ON*(cArray2EigenVector3d(navTransInMsgBuffer.v_BN_N)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>cArray2EigenVector3d(asteroidEphemerisInMsgBuffer.v_BdyZero_N));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Small<sp/>body<sp/>attitude<sp/>from<sp/>the<sp/>ephemeris<sp/>msg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>y_k1.segment(6,<sp/>3)<sp/>=<sp/><sp/>cArray2EigenVector3d(asteroidEphemerisInMsgBuffer.sigma_BN);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>the<sp/>shadow<sp/>set<sp/>measurement<sp/>must<sp/>be<sp/>considered,<sp/>i.e.<sp/>|sigma|<sp/>&gt;<sp/>1/3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_k1.segment(6,<sp/>3).norm()<sp/>&gt;<sp/>1.0/3.0)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>temporary<sp/>shadow-set<sp/>MRP<sp/>representation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>sigma_AN_s<sp/>=<sp/>-y_k1.segment(6,<sp/>3)/pow(y_k1.segment(6,<sp/>3).norm(),<sp/>2);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>shadow<sp/>set<sp/>gives<sp/>a<sp/>smaller<sp/>residual<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sigma_AN_s<sp/>-<sp/>x_hat_k1_.segment(6,<sp/>3)).norm()<sp/>&lt;<sp/>(y_k1.segment(6,<sp/>3)<sp/>-<sp/>x_hat_k1_.segment(6,<sp/>3)).norm()){</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_k1.segment(6,<sp/>3)<sp/>=<sp/>sigma_AN_s;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Small<sp/>body<sp/>attitude<sp/>rate<sp/>from<sp/>the<sp/>ephemeris<sp/>msg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>y_k1.segment(9,<sp/>3)<sp/>=<sp/>cArray2EigenVector3d(asteroidEphemerisInMsgBuffer.omega_BN_B);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>state<sp/>estimate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>x_hat_k1<sp/>=<sp/>x_hat_k1_<sp/>+<sp/>K_k1*(y_k1<sp/>-<sp/>x_hat_k1_);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>covariance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>P_k1<sp/>=<sp/>(I_full<sp/>-<sp/>K_k1*H_k1)*P_k1_*(I_full<sp/>-<sp/>K_k1*H_k1).transpose()<sp/>+<sp/>K_k1*M*<ref refid="class_small_body_nav_e_k_f_1a07ea49428124faf01a90250debe2866d" kindref="member">R</ref>*M.transpose()*K_k1.transpose();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assign<sp/>the<sp/>state<sp/>estimate<sp/>and<sp/>covariance<sp/>to<sp/>k<sp/>for<sp/>the<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_small_body_nav_e_k_f_1a325b0505a1de3a43106f0c3b123567ed" kindref="member">x_hat_k</ref><sp/>=<sp/>x_hat_k1;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_small_body_nav_e_k_f_1a011a47814f3192756326857c5942bb2a" kindref="member">P_k</ref><sp/>=<sp/>P_k1;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SmallBodyNavEKF::computeDynamicsMatrix(Eigen::VectorXd<sp/>x_hat){</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>temporary<sp/>state<sp/>vectors<sp/>for<sp/>readability<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>x_1;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>x_2;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>x_3;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>x_4;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>x_1<sp/>&lt;&lt;<sp/>x_hat.segment(0,3);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>x_2<sp/>&lt;&lt;<sp/>x_hat.segment(3,3);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>x_3<sp/>&lt;&lt;<sp/>x_hat.segment(6,3);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>x_4<sp/>&lt;&lt;<sp/>x_hat.segment(9,3);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>set<sp/>the<sp/>matrix<sp/>to<sp/>zero<sp/>(many<sp/>indices<sp/>are<sp/>zero)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>A_k.setZero(this-&gt;numStates,<sp/>this-&gt;numStates);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x_1<sp/>partial<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>A_k.block(0,<sp/>3,<sp/>3,<sp/>3).setIdentity();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x_2<sp/>partial<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>A_k.block(3,<sp/>0,<sp/>3,<sp/>3)<sp/>=</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>F_ddot*o_hat_3_tilde</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>pow(F_dot,<sp/>2)*o_hat_3_tilde*o_hat_3_tilde</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><ref refid="class_small_body_nav_e_k_f_1a2fe29356c37b01ffb0f6dda2841ad4ba" kindref="member">mu_ast</ref>/pow(x_1.norm(),<sp/>3)*I</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>3*<ref refid="class_small_body_nav_e_k_f_1a2fe29356c37b01ffb0f6dda2841ad4ba" kindref="member">mu_ast</ref>*x_1*x_1.transpose()/pow(x_1.norm(),<sp/>5)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>mu_sun*(3*(r_SO_O*r_SO_O.transpose())/pow(r_SO_O.norm(),<sp/>2)<sp/>-<sp/>I)/pow(r_SO_O.norm(),<sp/>3);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>A_k.block(3,<sp/>3,<sp/>3,<sp/>3)<sp/>=<sp/>-2*F_dot*o_hat_3_tilde;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x_3<sp/>partial<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>A_k.block(6,<sp/>6,<sp/>3,<sp/>3)<sp/>=<sp/>0.5*(x_3*x_4.transpose()<sp/>-<sp/>x_4*x_3.transpose()<sp/>-<sp/>eigenTilde(x_4)<sp/>+<sp/>(x_4.transpose()*x_3)*I);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>A_k.block(6,<sp/>9,<sp/>3,<sp/>3)<sp/>=<sp/>0.25*((1-pow(x_3.norm(),<sp/>2))*I<sp/>+<sp/>2*eigenTilde(x_3)<sp/>+<sp/>3*x_3*x_3.transpose());</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_small_body_nav_e_k_f_1a5bffa58adedadd607cf2555e8aefb5e5" kindref="member">SmallBodyNavEKF::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;readMessages(CurrentSimNanos);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;predict(CurrentSimNanos);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;checkMRPSwitching();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;newMeasurements){</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Run<sp/>the<sp/>measurement<sp/>update<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;measurementUpdate();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assign<sp/>the<sp/>apriori<sp/>state<sp/>estimate<sp/>and<sp/>covariance<sp/>to<sp/>k<sp/>for<sp/>the<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_small_body_nav_e_k_f_1a325b0505a1de3a43106f0c3b123567ed" kindref="member">x_hat_k</ref><sp/>=<sp/>x_hat_k1_;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeMessages(CurrentSimNanos);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>prevTime<sp/>=<sp/>CurrentSimNanos;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SmallBodyNavEKF::writeMessages(uint64_t<sp/>CurrentSimNanos){</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>output<sp/>msg<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>NavTransMsgPayload<sp/>navTransOutMsgBuffer;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>SmallBodyNavMsgPayload<sp/>smallBodyNavOutMsgBuffer;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>EphemerisMsgPayload<sp/>asteroidEphemerisOutMsgBuffer;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Zero<sp/>the<sp/>output<sp/>message<sp/>buffers<sp/>before<sp/>assigning<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>navTransOutMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1a300dbeb4994b914b3aa25e8e0aa2aeb2" kindref="member">navTransOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>smallBodyNavOutMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1abbd20ee6e388853b27ab6c82952bf5a8" kindref="member">smallBodyNavOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>asteroidEphemerisOutMsgBuffer<sp/>=<sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1aa42936de07c8d2cdcd12c38b15f148d8" kindref="member">asteroidEphemerisOutMsg</ref>.zeroMsgPayload;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assign<sp/>values<sp/>to<sp/>the<sp/>nav<sp/>trans<sp/>output<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>navTransOutMsgBuffer.timeTag<sp/>=<sp/>navTransInMsgBuffer.timeTag;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(cArray2EigenVector3d(asteroidEphemerisInMsgBuffer.r_BdyZero_N)<sp/>+<sp/>dcm_ON.transpose()*<ref refid="class_small_body_nav_e_k_f_1a325b0505a1de3a43106f0c3b123567ed" kindref="member">x_hat_k</ref>.segment(0,3),<sp/>navTransOutMsgBuffer.r_BN_N);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(cArray2EigenVector3d(asteroidEphemerisInMsgBuffer.v_BdyZero_N)<sp/>+<sp/>dcm_ON.transpose()*<ref refid="class_small_body_nav_e_k_f_1a325b0505a1de3a43106f0c3b123567ed" kindref="member">x_hat_k</ref>.segment(3,3),<sp/>navTransOutMsgBuffer.v_BN_N);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(navTransOutMsgBuffer.vehAccumDV,<sp/>navTransInMsgBuffer.vehAccumDV);<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>an<sp/>estimated<sp/>parameter,<sp/>pass<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assign<sp/>values<sp/>to<sp/>the<sp/>asteroid<sp/>ephemeris<sp/>output<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(asteroidEphemerisOutMsgBuffer.r_BdyZero_N,<sp/>asteroidEphemerisInMsgBuffer.r_BdyZero_N);<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>an<sp/>estimated<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(asteroidEphemerisOutMsgBuffer.v_BdyZero_N,<sp/>asteroidEphemerisInMsgBuffer.v_BdyZero_N);<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>an<sp/>estimated<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(<ref refid="class_small_body_nav_e_k_f_1a325b0505a1de3a43106f0c3b123567ed" kindref="member">x_hat_k</ref>.segment(6,3),<sp/>asteroidEphemerisOutMsgBuffer.sigma_BN);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(<ref refid="class_small_body_nav_e_k_f_1a325b0505a1de3a43106f0c3b123567ed" kindref="member">x_hat_k</ref>.segment(9,3),<sp/>asteroidEphemerisOutMsgBuffer.omega_BN_B);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>asteroidEphemerisOutMsgBuffer.timeTag<sp/>=<sp/>asteroidEphemerisInMsgBuffer.timeTag;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assign<sp/>values<sp/>to<sp/>the<sp/>small<sp/>body<sp/>navigation<sp/>output<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(<ref refid="class_small_body_nav_e_k_f_1a325b0505a1de3a43106f0c3b123567ed" kindref="member">x_hat_k</ref>,<sp/>smallBodyNavOutMsgBuffer.state);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;newMeasurements)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(<ref refid="class_small_body_nav_e_k_f_1a011a47814f3192756326857c5942bb2a" kindref="member">P_k</ref>,<sp/>*smallBodyNavOutMsgBuffer.covar);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenMatrixXd2CArray(P_k1_,<sp/>*smallBodyNavOutMsgBuffer.covar);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>to<sp/>the<sp/>C++-wrapped<sp/>output<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1a300dbeb4994b914b3aa25e8e0aa2aeb2" kindref="member">navTransOutMsg</ref>.write(&amp;navTransOutMsgBuffer,<sp/>this-&gt;moduleID,<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1abbd20ee6e388853b27ab6c82952bf5a8" kindref="member">smallBodyNavOutMsg</ref>.write(&amp;smallBodyNavOutMsgBuffer,<sp/>this-&gt;moduleID,<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_small_body_nav_e_k_f_1aa42936de07c8d2cdcd12c38b15f148d8" kindref="member">asteroidEphemerisOutMsg</ref>.write(&amp;asteroidEphemerisOutMsgBuffer,<sp/>this-&gt;moduleID,<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>to<sp/>the<sp/>C-wrapped<sp/>output<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>NavTransMsg_C_write(&amp;navTransOutMsgBuffer,<sp/>&amp;this-&gt;<ref refid="class_small_body_nav_e_k_f_1ab8e6b56a1dc63aa0214550cc82a6a11a" kindref="member">navTransOutMsgC</ref>,<sp/>this-&gt;moduleID,<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>SmallBodyNavMsg_C_write(&amp;smallBodyNavOutMsgBuffer,<sp/>&amp;this-&gt;<ref refid="class_small_body_nav_e_k_f_1a5158e25d652305f53e7691b2f6b2870f" kindref="member">smallBodyNavOutMsgC</ref>,<sp/>this-&gt;moduleID,<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>EphemerisMsg_C_write(&amp;asteroidEphemerisOutMsgBuffer,<sp/>&amp;this-&gt;<ref refid="class_small_body_nav_e_k_f_1afe280ece1a6a2b0ba9b2e2215f6463e3" kindref="member">asteroidEphemerisOutMsgC</ref>,<sp/>this-&gt;moduleID,<sp/>CurrentSimNanos);</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/smallBodyNavigation/smallBodyNavEKF/smallBodyNavEKF.cpp"/>
  </compounddef>
</doxygen>
