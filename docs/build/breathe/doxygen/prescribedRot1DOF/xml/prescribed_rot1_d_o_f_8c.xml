<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="prescribed_rot1_d_o_f_8c" kind="file" language="C++">
    <compoundname>prescribedRot1DOF.c</compoundname>
    <includes refid="prescribed_rot1_d_o_f_8h" local="yes">prescribedRot1DOF.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">math.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/rigidBodyKinematics.h</includes>
    <includes local="yes">architecture/utilities/macroDefinitions.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedRot1DOF/prescribedRot1DOF.c</label>
        <link refid="prescribed_rot1_d_o_f_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>prescribedRot1DOF.h</label>
        <link refid="prescribed_rot1_d_o_f_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="9">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="11">
        <label>architecture/utilities/macroDefinitions.h</label>
      </node>
      <node id="10">
        <label>architecture/utilities/rigidBodyKinematics.h</label>
      </node>
      <node id="6">
        <label>cMsgCInterface/HingedRigidBodyMsg_C.h</label>
      </node>
      <node id="7">
        <label>cMsgCInterface/PrescribedMotionMsg_C.h</label>
      </node>
      <node id="8">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="prescribed_rot1_d_o_f_8c_1a412733d08855778fb34add692ab3e5c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelfInit_prescribedRot1DOF</definition>
        <argsstring>(PrescribedRot1DOFConfig *configData, int64_t moduleID)</argsstring>
        <name>SelfInit_prescribedRot1DOF</name>
        <param>
          <type><ref refid="struct_prescribed_rot1_d_o_f_config" kindref="compound">PrescribedRot1DOFConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
<para>Method for module initialization. </para>
        </briefdescription>
        <detaileddescription>
<para>This method initializes the output messages for this module. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with this module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedRot1DOF/prescribedRot1DOF.c" line="35" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedRot1DOF/prescribedRot1DOF.c" bodystart="35" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="prescribed_rot1_d_o_f_8c_1a4557908802e39b69ee5da5d30ce707a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset_prescribedRot1DOF</definition>
        <argsstring>(PrescribedRot1DOFConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Reset_prescribedRot1DOF</name>
        <param>
          <type><ref refid="struct_prescribed_rot1_d_o_f_config" kindref="compound">PrescribedRot1DOFConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
<para>Method for module reset. </para>
        </briefdescription>
        <detaileddescription>
<para>This method performs a complete reset of the module. The input messages are checked to ensure they are linked. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>[ns] Time the method is called </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedRot1DOF/prescribedRot1DOF.c" line="49" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedRot1DOF/prescribedRot1DOF.c" bodystart="49" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="prescribed_rot1_d_o_f_8c_1af8ead2cb5b7f40f3b03a9ae4032c993a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Update_prescribedRot1DOF</definition>
        <argsstring>(PrescribedRot1DOFConfig *configData, uint64_t callTime, int64_t moduleID)</argsstring>
        <name>Update_prescribedRot1DOF</name>
        <param>
          <type><ref refid="struct_prescribed_rot1_d_o_f_config" kindref="compound">PrescribedRot1DOFConfig</ref> *</type>
          <declname>configData</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>callTime</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>moduleID</declname>
        </param>
        <briefdescription>
<para>Method for module time update. </para>
        </briefdescription>
        <detaileddescription>
<para>This method profiles the prescribed trajectory and updates the prescribed states as a function of time. The prescribed states are then written to the output message. <simplesect kind="return"><para>void </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configData</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration data associated with the module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callTime</parametername>
</parameternamelist>
<parameterdescription>
<para>[ns] Time the method is called </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The module identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedRot1DOF/prescribedRot1DOF.c" line="72" column="6" bodyfile="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedRot1DOF/prescribedRot1DOF.c" bodystart="72" bodyend="189"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2023,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Import<sp/>the<sp/>module<sp/>header<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;prescribedRot1DOF.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Other<sp/>required<sp/>files<sp/>to<sp/>import<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/rigidBodyKinematics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/macroDefinitions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelfInit_prescribedRot1DOF(<ref refid="struct_prescribed_rot1_d_o_f_config" kindref="compound">PrescribedRot1DOFConfig</ref><sp/>*configData,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>output<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>PrescribedMotionMsg_C_init(&amp;configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ab0e7c11a2a3831b1fc9e4efe30621355" kindref="member">prescribedMotionOutMsg</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>HingedRigidBodyMsg_C_init(&amp;configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a0459423cf944c57bdc254389bdebc6c9" kindref="member">spinningBodyOutMsg</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset_prescribedRot1DOF(<ref refid="struct_prescribed_rot1_d_o_f_config" kindref="compound">PrescribedRot1DOFConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>required<sp/>input<sp/>message<sp/>is<sp/>linked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!HingedRigidBodyMsg_C_isLinked(&amp;configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a7fc672aaf0dd7781003942db5e342eb0" kindref="member">spinningBodyInMsg</ref>))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bskLog(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a59dcb298918912e301d1df387fdb1c8a" kindref="member">bskLogger</ref>,<sp/>BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>prescribedRot1DOF.spinningBodyInMsg<sp/>wasn&apos;t<sp/>connected.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>initial<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a2ed19152297d4d9a984896b3eb55fddc" kindref="member">tInit</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>initial<sp/>convergence<sp/>to<sp/>true<sp/>to<sp/>enter<sp/>the<sp/>required<sp/>loop<sp/>in<sp/>Update_prescribedRot1DOF()<sp/>on<sp/>the<sp/>first<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a5c3c8e3820d0c197bb0cea4949b383bd" kindref="member">convergence</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update_prescribedRot1DOF(<ref refid="struct_prescribed_rot1_d_o_f_config" kindref="compound">PrescribedRot1DOFConfig</ref><sp/>*configData,<sp/>uint64_t<sp/>callTime,<sp/>int64_t<sp/>moduleID)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>buffer<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>HingedRigidBodyMsgPayload<sp/>spinningBodyIn;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>HingedRigidBodyMsgPayload<sp/>spinningBodyOut;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>PrescribedMotionMsgPayload<sp/>prescribedMotionOut;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>the<sp/>output<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>spinningBodyOut<sp/>=<sp/>HingedRigidBodyMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>prescribedMotionOut<sp/>=<sp/>PrescribedMotionMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>input<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>spinningBodyIn<sp/>=<sp/>HingedRigidBodyMsg_C_zeroMsgPayload();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HingedRigidBodyMsg_C_isWritten(&amp;configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a7fc672aaf0dd7781003942db5e342eb0" kindref="member">spinningBodyInMsg</ref>))</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spinningBodyIn<sp/>=<sp/>HingedRigidBodyMsg_C_read(&amp;configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a7fc672aaf0dd7781003942db5e342eb0" kindref="member">spinningBodyInMsg</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>loop<sp/>is<sp/>entered<sp/>(a)<sp/>initially<sp/>and<sp/>(b)<sp/>when<sp/>each<sp/>attitude<sp/>maneuver<sp/>is<sp/>complete.<sp/>The<sp/>reference<sp/>angle<sp/>is<sp/>updated</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/>even<sp/>if<sp/>a<sp/>new<sp/>message<sp/>is<sp/>not<sp/>written<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HingedRigidBodyMsg_C_timeWritten(&amp;configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a7fc672aaf0dd7781003942db5e342eb0" kindref="member">spinningBodyInMsg</ref>)<sp/>&lt;=<sp/>callTime<sp/>&amp;&amp;<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a5c3c8e3820d0c197bb0cea4949b383bd" kindref="member">convergence</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>initial<sp/>time<sp/>as<sp/>the<sp/>current<sp/>simulation<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a2ed19152297d4d9a984896b3eb55fddc" kindref="member">tInit</ref><sp/>=<sp/>callTime<sp/>*<sp/>NANO2SEC;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>current<sp/>ange<sp/>and<sp/>angle<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prv_FM_array[3];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MRP2PRV(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a95134a01eec913ec5bb7aad9a985b8a5" kindref="member">sigma_FM</ref>,<sp/>prv_FM_array);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ad45846039f5b11f12cc1a61f59274732" kindref="member">thetaInit</ref><sp/>=<sp/>v3Dot(prv_FM_array,<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1aea63621f7bd9927fd600ef74bdbc74ee" kindref="member">rotAxis_M</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a66fd1877a305425ea86429d76bcbd270" kindref="member">thetaDotInit</ref><sp/>=<sp/>v3Norm(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1aa9e853009b73f6ec8da6a0821614b6c0" kindref="member">omega_FM_F</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>reference<sp/>angle<sp/>and<sp/>reference<sp/>angle<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a3878eb98e6b53132ac5b9c045309deba" kindref="member">thetaRef</ref><sp/>=<sp/>spinningBodyIn.theta;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a4c3b22506bbd41527f89f1a9b42d450f" kindref="member">thetaDotRef</ref><sp/>=<sp/>spinningBodyIn.thetaDot;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>temporal<sp/>information<sp/>for<sp/>the<sp/>maneuver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>convTime<sp/>=<sp/>sqrt(((0.5<sp/>*<sp/>fabs(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a3878eb98e6b53132ac5b9c045309deba" kindref="member">thetaRef</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ad45846039f5b11f12cc1a61f59274732" kindref="member">thetaInit</ref>))<sp/>*<sp/>8)<sp/>/<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a45403547ff1dae5f10058cd4bfd30977" kindref="member">thetaDDotMax</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1afc36653b543f4d14c24aa8066a92f5a3" kindref="member">tf</ref><sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a2ed19152297d4d9a984896b3eb55fddc" kindref="member">tInit</ref><sp/>+<sp/>convTime;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a90e9975bf3b82216e208965e8c7c59b3" kindref="member">ts</ref><sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a2ed19152297d4d9a984896b3eb55fddc" kindref="member">tInit</ref><sp/>+<sp/>convTime<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>parabolic<sp/>constants<sp/>for<sp/>the<sp/>first<sp/>and<sp/>second<sp/>half<sp/>of<sp/>the<sp/>maneuver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ab69a20961da72d4feae02f6319240c7a" kindref="member">a</ref><sp/>=<sp/>0.5<sp/>*<sp/>(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a3878eb98e6b53132ac5b9c045309deba" kindref="member">thetaRef</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ad45846039f5b11f12cc1a61f59274732" kindref="member">thetaInit</ref>)<sp/>/<sp/>((configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a90e9975bf3b82216e208965e8c7c59b3" kindref="member">ts</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a2ed19152297d4d9a984896b3eb55fddc" kindref="member">tInit</ref>)<sp/>*<sp/>(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a90e9975bf3b82216e208965e8c7c59b3" kindref="member">ts</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a2ed19152297d4d9a984896b3eb55fddc" kindref="member">tInit</ref>));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a0729eeb9da6b546d8a0c96e22ed8976b" kindref="member">b</ref><sp/>=<sp/>-0.5<sp/>*<sp/>(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a3878eb98e6b53132ac5b9c045309deba" kindref="member">thetaRef</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ad45846039f5b11f12cc1a61f59274732" kindref="member">thetaInit</ref>)<sp/>/<sp/>((configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a90e9975bf3b82216e208965e8c7c59b3" kindref="member">ts</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1afc36653b543f4d14c24aa8066a92f5a3" kindref="member">tf</ref>)<sp/>*<sp/>(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a90e9975bf3b82216e208965e8c7c59b3" kindref="member">ts</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1afc36653b543f4d14c24aa8066a92f5a3" kindref="member">tf</ref>));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>convergence<sp/>to<sp/>false<sp/>until<sp/>the<sp/>attitude<sp/>maneuver<sp/>is<sp/>complete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a5c3c8e3820d0c197bb0cea4949b383bd" kindref="member">convergence</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>current<sp/>simulation<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>callTime<sp/>*<sp/>NANO2SEC;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>scalar<sp/>prescribed<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thetaDDot;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thetaDot;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>prescribed<sp/>scalar<sp/>states<sp/>at<sp/>the<sp/>current<sp/>simulation<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((t<sp/>&lt;<sp/>configData-&gt;ts<sp/>||<sp/>t<sp/>==<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a90e9975bf3b82216e208965e8c7c59b3" kindref="member">ts</ref>)<sp/>&amp;&amp;<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1afc36653b543f4d14c24aa8066a92f5a3" kindref="member">tf</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a2ed19152297d4d9a984896b3eb55fddc" kindref="member">tInit</ref><sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>Entered<sp/>during<sp/>the<sp/>first<sp/>half<sp/>of<sp/>the<sp/>maneuver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thetaDDot<sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a45403547ff1dae5f10058cd4bfd30977" kindref="member">thetaDDotMax</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thetaDot<sp/>=<sp/>thetaDDot<sp/>*<sp/>(t<sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a2ed19152297d4d9a984896b3eb55fddc" kindref="member">tInit</ref>)<sp/>+<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a66fd1877a305425ea86429d76bcbd270" kindref="member">thetaDotInit</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ab69a20961da72d4feae02f6319240c7a" kindref="member">a</ref><sp/>*<sp/>(t<sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a2ed19152297d4d9a984896b3eb55fddc" kindref="member">tInit</ref>)<sp/>*<sp/>(t<sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a2ed19152297d4d9a984896b3eb55fddc" kindref="member">tInit</ref>)<sp/>+<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ad45846039f5b11f12cc1a61f59274732" kindref="member">thetaInit</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>t<sp/>&gt;<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a90e9975bf3b82216e208965e8c7c59b3" kindref="member">ts</ref><sp/>&amp;&amp;<sp/>t<sp/>&lt;=<sp/>configData-&gt;tf<sp/>&amp;&amp;<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1afc36653b543f4d14c24aa8066a92f5a3" kindref="member">tf</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a2ed19152297d4d9a984896b3eb55fddc" kindref="member">tInit</ref><sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>Entered<sp/>during<sp/>the<sp/>second<sp/>half<sp/>of<sp/>the<sp/>maneuver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thetaDDot<sp/>=<sp/>-1<sp/>*<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a45403547ff1dae5f10058cd4bfd30977" kindref="member">thetaDDotMax</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thetaDot<sp/>=<sp/>thetaDDot<sp/>*<sp/>(t<sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a2ed19152297d4d9a984896b3eb55fddc" kindref="member">tInit</ref>)<sp/>+<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a66fd1877a305425ea86429d76bcbd270" kindref="member">thetaDotInit</ref><sp/>-<sp/>thetaDDot<sp/>*<sp/>(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1afc36653b543f4d14c24aa8066a92f5a3" kindref="member">tf</ref><sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a2ed19152297d4d9a984896b3eb55fddc" kindref="member">tInit</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a0729eeb9da6b546d8a0c96e22ed8976b" kindref="member">b</ref><sp/>*<sp/>(t<sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1afc36653b543f4d14c24aa8066a92f5a3" kindref="member">tf</ref>)<sp/>*<sp/>(t<sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1afc36653b543f4d14c24aa8066a92f5a3" kindref="member">tf</ref>)<sp/>+<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a3878eb98e6b53132ac5b9c045309deba" kindref="member">thetaRef</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Entered<sp/>when<sp/>the<sp/>maneuver<sp/>is<sp/>complete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thetaDDot<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thetaDot<sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a4c3b22506bbd41527f89f1a9b42d450f" kindref="member">thetaDotRef</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a3878eb98e6b53132ac5b9c045309deba" kindref="member">thetaRef</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a5c3c8e3820d0c197bb0cea4949b383bd" kindref="member">convergence</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>prescribed<sp/>parameters:<sp/>omega_FM_F<sp/>and<sp/>omegaPrime_FM_F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Normalize(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1aea63621f7bd9927fd600ef74bdbc74ee" kindref="member">rotAxis_M</ref>,<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1aea63621f7bd9927fd600ef74bdbc74ee" kindref="member">rotAxis_M</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(thetaDot,<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1aea63621f7bd9927fd600ef74bdbc74ee" kindref="member">rotAxis_M</ref>,<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1aa9e853009b73f6ec8da6a0821614b6c0" kindref="member">omega_FM_F</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(thetaDDot,<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1aea63621f7bd9927fd600ef74bdbc74ee" kindref="member">rotAxis_M</ref>,<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ac6f7b9d2f51460d74c91e64224179dcc" kindref="member">omegaPrime_FM_F</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>dcm_FF0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_FF0[3][3];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prv_FF0_array[3];</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta_FF0<sp/>=<sp/>theta<sp/>-<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ad45846039f5b11f12cc1a61f59274732" kindref="member">thetaInit</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(theta_FF0,<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1aea63621f7bd9927fd600ef74bdbc74ee" kindref="member">rotAxis_M</ref>,<sp/>prv_FF0_array);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2C(prv_FF0_array,<sp/>dcm_FF0);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>dcm_F0M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_F0M[3][3];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prv_F0M_array[3];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Scale(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ad45846039f5b11f12cc1a61f59274732" kindref="member">thetaInit</ref>,<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1aea63621f7bd9927fd600ef74bdbc74ee" kindref="member">rotAxis_M</ref>,<sp/>prv_F0M_array);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>PRV2C(prv_F0M_array,<sp/>dcm_F0M);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>dcm_FM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcm_FM[3][3];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>m33MultM33(dcm_FF0,<sp/>dcm_F0M,<sp/>dcm_FM);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>prescribed<sp/>parameter:<sp/>sigma_FM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>C2MRP(dcm_FM,<sp/>configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a95134a01eec913ec5bb7aad9a985b8a5" kindref="member">sigma_FM</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>module<sp/>variables<sp/>to<sp/>the<sp/>prescribedMotionOut<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a6d097782374f88996bc99913ac8c7077" kindref="member">r_FM_M</ref>,<sp/>prescribedMotionOut.r_FM_M);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ac84e0e3709792b08606bfdb29a555e97" kindref="member">rPrime_FM_M</ref>,<sp/>prescribedMotionOut.rPrime_FM_M);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a66e2a02acae16becc0de9df741f85bf6" kindref="member">rPrimePrime_FM_M</ref>,<sp/>prescribedMotionOut.rPrimePrime_FM_M);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1aa9e853009b73f6ec8da6a0821614b6c0" kindref="member">omega_FM_F</ref>,<sp/>prescribedMotionOut.omega_FM_F);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ac6f7b9d2f51460d74c91e64224179dcc" kindref="member">omegaPrime_FM_F</ref>,<sp/>prescribedMotionOut.omegaPrime_FM_F);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>v3Copy(configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a95134a01eec913ec5bb7aad9a985b8a5" kindref="member">sigma_FM</ref>,<sp/>prescribedMotionOut.sigma_FM);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>local<sp/>scalar<sp/>variables<sp/>to<sp/>the<sp/>spinningBodyOut<sp/>output<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>spinningBodyOut.theta<sp/>=<sp/>theta;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>spinningBodyOut.thetaDot<sp/>=<sp/>thetaDot;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>output<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>HingedRigidBodyMsg_C_write(&amp;spinningBodyOut,<sp/>&amp;configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1a0459423cf944c57bdc254389bdebc6c9" kindref="member">spinningBodyOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>PrescribedMotionMsg_C_write(&amp;prescribedMotionOut,<sp/>&amp;configData-&gt;<ref refid="struct_prescribed_rot1_d_o_f_config_1ab0e7c11a2a3831b1fc9e4efe30621355" kindref="member">prescribedMotionOutMsg</ref>,<sp/>moduleID,<sp/>callTime);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/fswAlgorithms/effectorInterfaces/prescribedRot1DOF/prescribedRot1DOF.c"/>
  </compounddef>
</doxygen>
