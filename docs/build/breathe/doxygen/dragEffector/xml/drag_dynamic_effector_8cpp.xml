<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="drag_dynamic_effector_8cpp" kind="file" language="C++">
    <compoundname>dragDynamicEffector.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="drag_dynamic_effector_8h" local="yes">dragDynamicEffector.h</includes>
    <includes local="yes">architecture/utilities/linearAlgebra.h</includes>
    <includes local="yes">architecture/utilities/astroConstants.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/julio/Desktop/basilisk/src/simulation/dynamics/dragEffector/dragDynamicEffector.cpp</label>
        <link refid="drag_dynamic_effector_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>dragDynamicEffector.h</label>
        <link refid="drag_dynamic_effector_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Eigen/Dense</label>
      </node>
      <node id="8">
        <label>architecture/_GeneralModuleFiles/sys_model.h</label>
      </node>
      <node id="10">
        <label>architecture/messaging/messaging.h</label>
      </node>
      <node id="9">
        <label>architecture/msgPayloadDefC/AtmoPropsMsgPayload.h</label>
      </node>
      <node id="15">
        <label>architecture/utilities/astroConstants.h</label>
      </node>
      <node id="11">
        <label>architecture/utilities/avsEigenMRP.h</label>
      </node>
      <node id="12">
        <label>architecture/utilities/avsEigenSupport.h</label>
      </node>
      <node id="13">
        <label>architecture/utilities/bskLogging.h</label>
      </node>
      <node id="14">
        <label>architecture/utilities/linearAlgebra.h</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>simulation/dynamics/_GeneralModuleFiles/dynamicEffector.h</label>
      </node>
      <node id="7">
        <label>simulation/dynamics/_GeneralModuleFiles/stateData.h</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>ISC<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2016,<sp/>Autonomous<sp/>Vehicle<sp/>Systems<sp/>Lab,<sp/>University<sp/>of<sp/>Colorado<sp/>at<sp/>Boulder</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dragDynamicEffector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/linearAlgebra.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;architecture/utilities/astroConstants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">DragDynamicEffector::DragDynamicEffector()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1adda6f1e532588ba45a9eecfa71637b2e" kindref="member">coreParams</ref>.<ref refid="struct_drag_base_data_1a698c9b02e6e4e8f27deacdf434dba40d" kindref="member">projectedArea</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1adda6f1e532588ba45a9eecfa71637b2e" kindref="member">coreParams</ref>.<ref refid="struct_drag_base_data_1a7a464ce10b36a3a4e8183cc2fe330569" kindref="member">dragCoeff</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1adda6f1e532588ba45a9eecfa71637b2e" kindref="member">coreParams</ref>.<ref refid="struct_drag_base_data_1acc8db4541e99c72d1861ccc4252d8f00" kindref="member">comOffset</ref>.setZero();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1a5f37bdce53a42737a2c8a76bd730550f" kindref="member">modelType</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cannonball&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;forceExternal_B.fill(0.0);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;torqueExternalPntB_B.fill(0.0);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1aba46fd64d9904ea96987cb9453a913b3" kindref="member">v_B</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1aaaa61897b79ac5e29f075dac1d0d15ac" kindref="member">v_hat_B</ref>.fill(0.0);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="class_drag_dynamic_effector_1a4ef3e9fd8751a3b3de081c92ac179ac0" kindref="member">DragDynamicEffector::~DragDynamicEffector</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_drag_dynamic_effector_1adbbea4bcefbc048ef9125b4062230870" kindref="member">DragDynamicEffector::Reset</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>input<sp/>message<sp/>has<sp/>not<sp/>been<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_drag_dynamic_effector_1a6b3629d8f42fb569054ae01d996a62b2" kindref="member">atmoDensInMsg</ref>.isLinked())<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_drag_dynamic_effector_1a3d3168d0383608ab93a946dc96a96c0b" kindref="member">bskLogger</ref>.bskLog(BSK_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;dragDynamicEffector.atmoDensInMsg<sp/>was<sp/>not<sp/>linked.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_drag_dynamic_effector_1a5ac5ea89a14722f7a8b72aef2923273d" kindref="member">DragDynamicEffector::WriteOutputMessages</ref>(uint64_t<sp/>CurrentClock)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_drag_dynamic_effector_1a0b7d1419d59edeb2252a88a9a29ac2e9" kindref="member">DragDynamicEffector::ReadInputs</ref>()</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dataGood;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;atmoInData<sp/>=<sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1a6b3629d8f42fb569054ae01d996a62b2" kindref="member">atmoDensInMsg</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>dataGood<sp/>=<sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1a6b3629d8f42fb569054ae01d996a62b2" kindref="member">atmoDensInMsg</ref>.isWritten();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(dataGood);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_drag_dynamic_effector_1ac4abbdc48f4e72ae7ea6b9029683d89b" kindref="member">DragDynamicEffector::linkInStates</ref>(DynParamManager&amp;<sp/>states){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1ac9adad59286d40987269ab9ab796ed70" kindref="member">hubSigma</ref><sp/>=<sp/>states.getStateObject(</highlight><highlight class="stringliteral">&quot;hubSigma&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1a903c1dc3ae03ea6bf030980f58e37ac6" kindref="member">hubVelocity</ref><sp/>=<sp/>states.getStateObject(</highlight><highlight class="stringliteral">&quot;hubVelocity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_drag_dynamic_effector_1aeb06851c0e8f4c44a891b01985ac850d" kindref="member">DragDynamicEffector::updateDragDir</ref>(){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MRPd<sp/>sigmaBN;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaBN<sp/>=<sp/>(Eigen::Vector3d)this-&gt;<ref refid="class_drag_dynamic_effector_1ac9adad59286d40987269ab9ab796ed70" kindref="member">hubSigma</ref>-&gt;getState();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>dcm_BN<sp/>=<sp/>sigmaBN.toRotationMatrix().transpose();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1aba46fd64d9904ea96987cb9453a913b3" kindref="member">v_B</ref><sp/>=<sp/>dcm_BN*this-&gt;<ref refid="class_drag_dynamic_effector_1a903c1dc3ae03ea6bf030980f58e37ac6" kindref="member">hubVelocity</ref>-&gt;getState();<sp/></highlight><highlight class="comment">//<sp/>[m/s]<sp/>sc<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1aaaa61897b79ac5e29f075dac1d0d15ac" kindref="member">v_hat_B</ref><sp/>=<sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1aba46fd64d9904ea96987cb9453a913b3" kindref="member">v_B</ref><sp/>/<sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1aba46fd64d9904ea96987cb9453a913b3" kindref="member">v_B</ref>.norm();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_drag_dynamic_effector_1a274a34813ce075f5813477d73cc425b5" kindref="member">DragDynamicEffector::cannonballDrag</ref>(){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;forceExternal_B.setZero();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;torqueExternalPntB_B.setZero();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;forceExternal_B<sp/><sp/>=<sp/>0.5<sp/>*<sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1adda6f1e532588ba45a9eecfa71637b2e" kindref="member">coreParams</ref>.<ref refid="struct_drag_base_data_1a7a464ce10b36a3a4e8183cc2fe330569" kindref="member">dragCoeff</ref><sp/>*<sp/>pow(this-&gt;<ref refid="class_drag_dynamic_effector_1aba46fd64d9904ea96987cb9453a913b3" kindref="member">v_B</ref>.norm(),<sp/>2.0)<sp/>*<sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1adda6f1e532588ba45a9eecfa71637b2e" kindref="member">coreParams</ref>.<ref refid="struct_drag_base_data_1a698c9b02e6e4e8f27deacdf434dba40d" kindref="member">projectedArea</ref><sp/>*<sp/>this-&gt;atmoInData.neutralDensity<sp/>*<sp/>(-1.0)*this-&gt;<ref refid="class_drag_dynamic_effector_1aaaa61897b79ac5e29f075dac1d0d15ac" kindref="member">v_hat_B</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;torqueExternalPntB_B<sp/>=<sp/>this-&gt;<ref refid="class_drag_dynamic_effector_1adda6f1e532588ba45a9eecfa71637b2e" kindref="member">coreParams</ref>.<ref refid="struct_drag_base_data_1acc8db4541e99c72d1861ccc4252d8f00" kindref="member">comOffset</ref>.cross(forceExternal_B);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_drag_dynamic_effector_1ae843f465fbd7177103bf8fd336e15ce8" kindref="member">DragDynamicEffector::computeForceTorque</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integTime,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeStep){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_drag_dynamic_effector_1aeb06851c0e8f4c44a891b01985ac850d" kindref="member">updateDragDir</ref>();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_drag_dynamic_effector_1a5f37bdce53a42737a2c8a76bd730550f" kindref="member">modelType</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cannonball&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_drag_dynamic_effector_1a274a34813ce075f5813477d73cc425b5" kindref="member">cannonballDrag</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_drag_dynamic_effector_1ae2ead1b1844a910b1629855f6ca04e3e" kindref="member">DragDynamicEffector::UpdateState</ref>(uint64_t<sp/>CurrentSimNanos)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_drag_dynamic_effector_1a0b7d1419d59edeb2252a88a9a29ac2e9" kindref="member">ReadInputs</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/julio/Desktop/basilisk/src/simulation/dynamics/dragEffector/dragDynamicEffector.cpp"/>
  </compounddef>
</doxygen>
